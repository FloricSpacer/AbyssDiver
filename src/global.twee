:: StoryMenu
[[Appearance]]
[[Inventory]]
<<if $mc.curses.length > 0>>\
[[Curses]]
<</if>>\
<<if $hiredCompanions.length> 0>>\
[[Party|Party Sidebar]]
<</if>>\
<<if setup.haveNotepad>>\
[[Layer Notes]]
<</if>>\
/*[[Debug Menu]]*/
<br>

:: Curses [noreturn]
<<nobr>>

<<if $endSpectre > 0>>
The Spectre of the End will come for you in <<print (900 - $time + $endSpectre)>> days.<br><br>
<</if>>

<<if $hexflame > 9>>
@@.alert1;You currently have <<print $hexflame - 9>> jinxed flame counters,  increasing travel times by <<print Math.trunc($hexflame / 10)>> and increasing corruption gain by <<print (5 * Math.trunc($hexflame / 10))>> on every layer other than layer 6.@@<br><br>
<</if>>

<b>Curses:</b>:<br>

<<for _i = 0; _i < $mc.curses.length; _i++>>
	<<capture _i>>
		<<if $mc.curses[_i].name === "Below the Veil">>
			<<print "[[" + Creepify.encode("Below the Veil") + "|Curse Info][$temp = _i]]">><br>
		<<else>>
			<<print "[[$mc.curses[_i].name|Curse Info][$temp = _i]]">><br>
		<</if>>
	<</capture>>
<</for>>
<</nobr>>
<<back [[$menuReturn]]>>

:: Curse Info
<<nobr>>
!<<if $mc.curses[$temp].name === "Below the Veil">>
	<<print Creepify.encode("Below the Veil")>><br>
<<else>>
	<<print $mc.curses[$temp].name>>
<</if>>
<</nobr>>
[img[setup.ImagePath+$mc.curses[$temp].pic]]

<<print $mc.curses[$temp].description>>

//Corruption value: $mc.curses[$temp].corr//

<<back>>

:: Inventory [noreturn]
<<nobr>><<CarryAdjust>>
<<if $debt > 0>>
	@@.alert1;You have $debt dubloons of debt, which you must pay before voluntarily settling down for any habitation.@@<br><br>
<</if>>
You have $items[0].count days of single-use water rations.<br>
You have $items[1].count days of food.<br>
You have $items[2].count unfilled flasks.<br>
You have $items[3].count days of water in filled flasks.<br>
<<if $items[3].count>0 >>
[[Organize your drinking water|Flask Order]]<br>
<</if>>
<hr>
<b>Items:</b><br>

<<for _i = 0; _i < $items.length; _i++>>
	<<capture _i>>
	<<if $items[_i].count > 1 || $items[_i].count < 0>>
			<<print "[[$items[_i].name|Item Info][$temp = _i]]">><<print " ">><<print $items[_i].count>><br>
	<<elseif $items[_i].count === 1>>
		<<print "[[$items[_i].name|Item Info][$temp = _i]] ">>
		<br>
	<</if>>
	<</capture>>
<</for>>
<hr>
<<if $ownedRelics.length > 0>>
	<b>Relics:</b><br> 
	<<for _i = 0; _i < $ownedRelics.length; _i++>>
		<<capture _i>>
			<<print "[[$ownedRelics[_i].name|Relic Info][$temp = _i]]">><<if setup.functionalRelics.contains($ownedRelics[_i].name)>> â˜¸<</if>><br>
		<</capture>>
	<</for>>
<</if>>
<br>

<<set $total_value_relics=0>>
<<for _i = 0; _i < $ownedRelics.length; _i++>>
	<<set $total_value_relics = $ownedRelics[_i].value + $total_value_relics>>
<</for>>
The total value of all your Relics is $total_value_relics dubloons.<br><hr>


<<if $relicSwap.length > 0>>
	<<for _i = 0; _i < $relicSwap.length; _i++>>
		<<capture _i>>
		You have swapped the abilities of the $relicSwap[_i][0].name and the $relicSwap[_i][1].name.<br>
		<</capture>>
	<</for>>
	<br>
<</if>>

<<if $DaedalusFly>>
	Your personal carrying capacity is only <<print Math.round($carryWeight)>> kg now that you are flying. If you went back to walking, you would be able carry double that amount.<br>
<<else>>
	Your personal carrying capacity is <<print Math.round($carryWeight)>> kg.<br>
<</if>>
Your team has a total carrying capacity of <<print Math.round($totalCarry)>> kg.<br>
Your team is currently carrying <<print setup.carriedWeight.toFixed(1)>> kg.<br><br>

<div class="progress-bar-container">
  <<set _percent = (setup.carriedWeight / $totalCarry) * 100>>
	<<if _percent <= 50>>
    <<set _color = "#4CAF50">> <!-- Green for 50% and below -->
  <<elseif _percent <= 75>>
    <<set _color = "#FFC107">> <!-- Yellow for 51% to 75% -->
  <<else>>
    <<set _color = "#F44336">> <!-- Red for 76% and above -->
  <</if>>

  <<print "<div class=\"progress-bar-fill\" style=\"width:" + _percent + "%; background-color:" + _color + ";\"></div>">>
</div>



<br><br>

<<back [[$menuReturn]]>>
<</nobr>>

:: Habitation Ending [ending]
You've reached the end of your journey due to a successful habitation ending. Was it worth it? Did you find what you were looking for?

You can find your collection of Relics in your inventory, and your Curses in the stats page.

Feel free to begin a new journey, by restarting and choosing the hard mode option. Also feel free to post your build on the thread for the game, the creator of this adaptation always loves to see how people's adventures went!

<h1 class="gameover">THE END</h1>


:: Adjustments [noreturn]
<<Equipment>>\
Use this page ONLY to adjust numbers due to interactions that save you money or resources that are not already accounted for in the game, or if there was a bug.

Do not cheat or fear the consequences of angering the things that lurk deep in the Abyss.

[[Adjust dubloons]]
[[Adjust corruption]]
[[Adjust time]]
[[Adjust water]]
[[Adjust food]]
[[Adjust bullets]]

Many options have their abilities as something like a light source or heat source automatically accounted for, but if you find a Relic or combination that you think should give you an ability and it doesn't, use one of the following options to give that ability to yourself.

Click this if you have found something that can be used for cutting like a sword:
[[I have a Cutting Instrument|Adjustments][$cut = 1]]
[[No Cutting Instrument|Adjustments][$cut = 0]]

Click this if you have found something that can be used as a light source:
[[I have a Light|Adjustments][$light = 1]]
[[No Light|Adjustments][$light = 0]]

Click this if you have found something that can be used to persistently keep you warm:
[[I have protection from cold|Adjustments][$heatOverride = true]]
[[No protection from cold|Adjustments][$heatOverride = false]]

Click this if you have found something that can be used to persistently keep from overheating:
[[I have protection from heat|Adjustments][$coolOverride = true]]
[[No protection from cold|Adjustments][$coolOverride = false]]

Click this if you have found something that can be used as a climbing rope:
[[I have something that can be a Rope|Adjustments][$rope = 1]]
[[No Rope|Adjustments][$rope = 0]]

Click this if you have found something that can be used for swimming underwater, similar to scuba gear:
[[I have something that can be used for Swimming|Adjustments][$scuba = 1]]
[[No Swimming|Adjustments][$scuba = 0]]

<<if $abyssKnow === 1>>Click this if you'd like to disable the use of your Abyssal knowledge from the encyclopedia, smartphone or Saeko (This will result in more side effects from foraging):
	[[Turn off abyssal knowledge|Adjustments][$abyssKnowCheatoff = true]]
<<elseif $abyssKnow === 0 && ($hiredCompanions.some(e => e.id === setup.companionIds.saeko) || $items[5].count > 0 || setup.haveSmartphone)>>Click this if you'd like to enable the use of your Abyssal knowledge from the encyclopedia or Saeko (This will result in less side effects from foraging):
	[[Turn on abyssal knowledge|Adjustments][$abyssKnowCheatoff = false]]
<</if>>
If you would like to use a Relic or combination of Relics to trade with the surface, similar to a commerce balloons function, then use the following:
[[Simulate the functionality of a commerce balloon|Commerce Balloon]]

[[Adjust Companion Affection|Adjust Affection]]

[[Adjust Curses]]

[[Adjust Relics]]

[[Debug Menu]]


[[Confirm Adjustments|$menuReturn]]


:: Debug Menu


[[Surface Hub][$currentLayer = 0]]
[[Layer1 Hub][$currentLayer = 1]]
[[Layer2 Hub][$currentLayer = 2]]
[[Layer3 Hub][$currentLayer = 3]]
[[Layer4 Hub][$currentLayer = 4]]
[[Layer5 Hub][$currentLayer = 5]]
[[Layer6 Hub][$currentLayer = 6]]
[[Layer7 Hub][$currentLayer = 7]]
[[Layer8 Hub][$currentLayer = 8]]
[[Layer9 Hub][$currentLayer = 9]]
[[Layer10 1][$currentLayer = 10]]
[[Layer11 1][$currentLayer = 11]]


<<if $time > 0>>
	[[View time spent in each layer|Time Stats]]<br>
<</if>>

[[All Curses]]

[[Pick up the Pulse Bloom]]
[[Pick up the Luminous Phantasmagoria]]
[[Take on The Maxim]]
[[Layer1 Bandits Won]]
[[check values]]
[[Sandbox]]
<<back>>

:: check values [noreturn]

name $mc.name
sex $mc.sex
mindSex $mc.mindSex
osex $mc.osex
ohair $mc.ohair
hair $mc.hair
penis $mc.penis
openis $mc.openis
doublePenis $mc.doublePenis
penisCor $mc.penisCor
vagina $mc.vagina
gender $mc.gender
ogender $mc.ogender
switched $mc.switched
breasts $mc.breasts
obreasts $mc.obreasts
breastsCor $mc.breastsCor
breastsLabel $mc.breastsLabel
lactation $mc.lactation
pregnantT $mc.pregnantT
due $mc.due
tentacle baby $mc.tentaclePreg
gestationJumps: $mc.gestationJumps
ears $mc.ears
oheight $mc.oheight
fit $mc.fit
bodyHair $mc.bodyHair
skinType $mc.skinType
oskinColor $mc.oskinColor
skinColor $mc.skinColor
oeyeColor $mc.oeyeColor
eyeColor $mc.eyeColor
eyeCount $mc.eyeCount
armCount $mc.armCount
legCount $mc.legCount
womb $mc.womb
extraWombs $mc.extraWombs
desc $mc.desc
blood $mc.blood
age $mc.age
appAge $mc.appAge
libido $mc.libido
subdom $mc.subdom
HandicapMovement $mc.HandicapMovement
genderVoice $mc.genderVoice
style $mc.style
style1 $mc.style1
imageIcon $mc.imageIcon
<<back>>


:: All Curses [nobr noreturn cards]
<<back>>
<<CurseGrid `setup.cursesOnLayer.reduce((a, b) => a.concat(b), [])`>>
<<back>>


:: Adjust Curses [nobr noreturn]
Curses added and removed on this page will not influence corruption.<br><br>

<<for _i, _layer range setup.cursesOnLayer>>
	<<if _i > 0>>
		Layer _i:<br>
		<<for _cursename range _layer>>
			<<set _curse = setup.findCurseBy(c => c.name === _cursename)>>
			<<capture _cursename, _curse>>
				<<if $mc.hasCurse(_curse.name)>>
					<<set _linktext = "Remove " + _cursename>>
					<<link _linktext "Adjust Curses">>
						<<RemoveCurse _curse>>
					<</link>><br>
				<<else>>
					<<set _linktext = "Take " + _cursename>>
					<<link _linktext "Adjust Curses">>
						<<set $mc.addCurse(_curse)>>
					<</link>><br>
				<</if>>
			<</capture>>
		<</for>>
	<</if>>
<</for>>
<br>
<<link "Take all Curses" "Adjust Curses">>
	<<for _curse range Object.values(setup.allCurses)>>
		<<if !$mc.hasCurse(_curse.name) >>
			<<set $mc.addCurse(_curse.copy())>>
		<</if>>
	<</for>>
<</link>> (including incompatible ones â€“ use at your own risk)<br>
<<link "Remove all Curses" "Adjust Curses">>
	<<for _curse range $mc.curses>>
		<<RemoveCurse _curse>>
	<</for>>
<</link>><br>
[[Return|Adjustments]]

:: Adjust Relics [nobr noreturn]
Relics added and removed on this page will not influence corruption.<br>
Relics removed this way are returned to the Abyss, not sold or thrown away, so you could pick them up again on the layer they are from.<br>
Relics are removed and added one at a time. To remove all copies of a given Relic, keep removing it until there are none left.<br>

<<for _i, _layer range setup.relicsOnLayer>>
	<<if _i > 0>>
		Layer _i:<br>
		<<for _relicname range _layer>>
			<<set _relic = $relics.find(r => r.name === _relicname)>>
			<<capture _relicname, _relic>>
				<<if $ownedRelics.find(r => r.name === _relic.name) !== undefined>>
					<<set _linktext = "Remove " + _relicname>>
					<<link _linktext "Adjust Relics">>
							<<set setup.returnRelic(_relic)>>
					<</link>><br>
				<</if>>
				<<set _linktext = "Add " + _relicname>>
				<<link _linktext "Adjust Relics">>
					<<set $ownedRelics.push(_relic)>>
				<</link>><br>
			<</capture>>
		<</for>>
	<</if>>
<</for>>
<br>
<<link "Take one of each Relic" "Adjust Relics">>
	<<for _relic range $relics>>
		<<set $ownedRelics.push(_relic)>>
	<</for>>
<</link>><br>
<<link "Remove all Relics" "Adjust Relics">>
	<<set $ownedRelics = []>>
<</link>><br>
[[Return|Adjustments]]

:: Adjust Affection [noreturn nobr]
<<set _mods = Array.from({ length: $hiredCompanions.length }, _ => '0')>>
Enter how much affection you would like each companion to gain.<br><br>

<<for _i, _companion range $hiredCompanions>>
	<<if _companion !== $companionGolem>>
		<<capture _i>>
			_companion.name:<br>
			<<textbox '_mods[_i]' _mods[_i]>><br><br>
		<</capture>>
	<</if>>
<</for>>

<<link 'Confirm' 'Adjustments'>>
	<<for _i, _companion range $hiredCompanions>>
		<<if _companion !== $companionGolem>>
			<<set _companion.affec += parseInt(_mods[_i], 10) || 0>>
		<</if>>
	<</for>>
<</link>><br>
<<back>>

:: Time Stats [noreturn]
<<nobr>>
<<if $timeL1 > 0>>
	<<print "You have spent $timeL1 days on the first layer of the Abyss.">><br>
<</if>>
<<if $timeL2 > 0>>
	<<print "You have spent $timeL2 days on the second layer of the Abyss.">><br>
	<</if>>
<<if $timeL3 > 0>>
	<<print "You have spent $timeL3 days on the third layer of the Abyss.">><br>
	<</if>>
<<if $timeL4 > 0>>
	<<print "You have spent $timeL4 days on the fourth layer of the Abyss.">><br>
	<</if>>
<<if $timeL5 > 0>>
	<<print "You have spent $timeL5 days on the fifth layer of the Abyss.">><br>
	<</if>>
<<if $timeL6 > 0>>
	<<print "You have spent $timeL6 days on the sixth layer of the Abyss.">><br>
	<</if>>
<<if $timeL7 > 0>>
	<<print "You have spent $timeL7 days on the seventh layer of the Abyss.">><br>
	<</if>>
<<if $timeL8 > 0>>
	<<print "You have spent $timeL8 days on the eighth layer of the Abyss.">><br>
	<</if>>
<<if $timeL9 > 0>>
	<<print "You have spent $timeL9 days on the ninth layer of the Abyss.">><br>
<</if>>


<<if $waterL1 > 0>>
	<<print "You have foraged for water on the first layer $waterL1 times.">><br>
<</if>>
<<if $foodL1 > 0>>
	<<print "You have foraged for food on the first layer $foodL1 times.">><br>
<</if>>

<<if $waterL2 > 0>>
	<<print "You have foraged for water on the second layer $waterL2 times.">><br>
<</if>>
<<if $foodL2 > 0>>
	<<print "You have foraged for food on the second layer $foodL2 times.">><br>
<</if>>

<<if $waterL3 > 0>>
	<<print "You have foraged for water on the third layer $waterL3 times.">><br>
<</if>>
<<if $foodL3 > 0>>
	<<print "You have foraged for food on the third layer $foodL3 times.">><br>
<</if>>

<<if $waterL4 > 0>>
	<<print "You have foraged for water on the fourth layer $waterL4 times.">><br>
<</if>>
<<if $foodL4 > 0>>
	<<print "You have foraged for food on the fourth layer $foodL4 times.">><br>
<</if>>

<<if $waterL15> 0>>
	<<print "You have foraged for water on the fifth layer $waterL5 times.">><br>
<</if>>
<<if $foodL5 > 0>>
	<<print "You have foraged for food on the fifth layer $foodL5 times.">><br>
<</if>>

<<if $waterL6 > 0>>
	<<print "You have foraged for water on the sixth layer $waterL6 times.">><br>
<</if>>
<<if $foodL6 > 0>>
	<<print "You have foraged for food on the sixth layer $foodL6 times.">><br>
<</if>>

<<if $waterL7 > 0>>
	<<print "You have foraged for water on the seventh layer $waterL7 times.">><br>
<</if>>
<<if $foodL7 > 0>>
	<<print "You have foraged for food on the seventh layer $foodL7 times.">><br>
<</if>>

<<if $waterL8 > 0>>
	<<print "You have foraged for water on the eighth layer $waterL8 times.">><br>
<</if>>
<<if $foodL8 > 0>>
	<<print "You have foraged for food on the eighth layer $foodL8 times.">><br>
<</if>>

<<if $waterL9 > 0>>
	<<print "You have foraged for water on the ninth layer $waterL9 times.">><br>
<</if>>
<<if $foodL9 > 0>>
	<<print "You have foraged for food on the ninth layer $foodL9 times.">><br>
<</if>>
<</nobr>>

<<back>>


:: Version End
That's all for this version!

Thank you for playing this version of the interactive adaptation of Abyss Diver by FloricSpacer.

I'd like to hear any feedback about the current state of the game and any bugs or typos you've found!

I'm working on adding the remaining layer soon, though it is pretty labor intensive, so that depends on my free time irl. 

As I add more systems and the game gets more complicated under the hood, I expect many bugs that I didn't catch to manifest, so detailed bug reports for any errors you've encountered are very valuable.

If you're interested in seeing the most recent changes to the code or contributing yourself, you should visit our public Github! 

https://github.com/FloricSpacer/AbyssDiver

You can also join the new Discord server, where we have regular discussion regarding the game and development.

https://discord.gg/gXnq5rmjxG

Thanks again for playing!

:: True End

Well, it seems you've reached the end of your journey! Anything beyond this point is beyond the scope of this game, but feel free to explore further in your imagination.

Thank you all for playing this game, and for any support or feedback you've given along the way.

Now that you've completed the game, you can visit the wiki and find things you may have missed without any guilt!
https://abyss-diver.fandom.com/wiki/Abyss_Diver_Interactive_Wiki

If you're interested in seeing the most recent changes to the code/writing or contributing yourself, you should visit our public Github! 
https://github.com/FloricSpacer/AbyssDiver

You can also join our Discord server, where we have regular discussion regarding the game and development. It's also the best place to leave feedback and suggestions.
https://discord.gg/gXnq5rmjxG

Thanks again for playing! I hope the dive was worth it.

-FloricSpacer


:: Appearance [noreturn nobr]
<<CarryAdjust>>
Your name is $mc.name and you are a $mc.sex <<PerceivedRace $mc>>.<br><hr>
Your hair color is $mc.hair.<br>
<<if $mc.eyeCount===0>>
You have no eyes, only empty sockets. You are effectively blind without the use of Relics and you need your companions to guide you.<br>
<<elseif $mc.eyeCount===1 && $BionicEye>>
You have lost both of your biological eyes and in one of your sockets you have the Moonwatcher Relic, 
which allows you to perceive the world even better than when you had both your normal eyes.<br>
<<elseif $mc.eyeCount===1>>
You only have 1 eye, which is colored $mc.eyeColor. You can still see quite well, 
but depth perception has become quite hard. <br>
<<elseif $mc.eyeCount===2 && $BionicEye>>
You have one natural $mc.eyeColor eye left. Your other eye has been replaced with the Moonwatcher Relic, 
which allows you to perceive the world even better than when you had both your normal eyes.<br>
<<else>>
You have two normal, $mc.eyeColor eyes.<br>
<</if>>

You have $mc.skinColor colored $mc.skinType skin.<<if $mc.skinType.includes("furred") >> <<print setup.allCurses.MaximumFluff.appDesc>><</if>><br>
<<if $mc.armCount===1>>You only have one arm. <<if $BionicArm>>It is a pretty cool bionic arm though, with anti-gravity abilities.<</if>><<elseif $mc.armCount>2>>You have more arms now than you started with. You're not used to it yet, so they still get in the way.<<if $BionicArm>>One of them is a bionic arm though, with anti-gravity abilities.<</if>><<elseif $mc.armCount===2 &&  $BionicArm>>One of your arms has been replaced with a bionic arm with anti-gravity abilities.<br><</if>>
<<if $mc.legCount===1>>You only have one leg. <<elseif $mc.legCount===0>> You don't have any legs anymore. <<if $mc.hasCurse("Seafolk")>> Instead you have a beautiful finned tail. Could you be considered a <<if $mc.appGender<5>>merman<<else>>mermaid<</if>> now?<</if>><br><</if>>
<hr>
You are <<BodyHeightText>> tall.<br>
You have $mc.ears ears.<br>
You are <<ShowAge $mc.realAge>> old<<if Math.round(12 * $mc.realAge) !== Math.round(12 * $mc.appAge)>>, but you appear to be <<ShowAge $mc.appAge>> old<</if>><<if $eternalYouth < 9999>> and you will never appear to be any older due to your biological immortality granted by the Fountain of Youth<</if>>.
<br><hr>
<<if $DaedalusEquip>> You appear to have two $relic73.variation wings sprouting from your back. However, in reality, this is the Daedalus Mechanism.<br><hr><</if>>

<<if $companionSwitched > 0>>
You are in the body originally belonging to <<print setup.id2name($companionSwitched)>> and <<print setup.id2name($companionSwitched)>> is in your old body.<br><hr>
<</if>>

<<if $mc.subdom > 0>>
You feel you've become more submissiveness than you were when you started this journey.<br><hr>
<<elseif $mc.subdom < 0>>
You feel you've become more dominant than you were when you started this journey.<br><hr>
<</if>>

<<if $mc.hasCurse("Horny")>>
	You have <<if $hornCount === 1>>a<<else>>two<</if>> noticeable $hornAdjective $hornVariation horn<<if $hornCount > 1>>s<</if>> protruding from
	<<switch $hornVariation>>
		<<case "rhino">>
			your nose.<br><hr>
		<<default>>
			<<if $hornCount === 1>>the center of your forehead<<else>>your head<</if>>.<br><hr>
	<</switch>>
<</if>>

<<if $mc.gender <= 1>>
You appear as a typical man, with a distinctively masculine facial structure and a body profile that clearly reads as male from a distance.<br>
<<elseif $mc.gender === 2>>
You appear as a man, but your features are somewhat softer than average. While no one would mistake you for a woman, the term "twink" might come to mind for some observers.<br>
<<elseif $mc.gender === 3>>
You have a notably androgynous appearance. With clothes on, most people might perceive you as an effeminate man, while others could see you as a more masculine woman.<br>
<<elseif $mc.gender === 4>>
You have a strikingly androgynous appearance. With clothes on, most people might perceive you as a masculine woman, while others could see you as a more feminine man.<br>
<<elseif $mc.gender === 5>>
You appear as a woman with slightly masculine features. Many people might assume you have a tomboyish style based on your appearance.<br>
<<elseif $mc.gender >= 6>>
You appear as a typical woman, with a feminine facial structure and a body profile that is unmistakably female from a distance.<br>
<</if>>
<hr>

<<if $mc.penisCor>=1>>
	<<if $mc.penisCor === 1>>
	You have a tiny penis of <<PenisLengthText>>, which is honestly barely larger than a clitoris.
	<<elseif $mc.penisCor <= 2.5>>
	You have a very small penis of <<PenisLengthText>>. You need some very tight pants to show something that even remotely resembles a bulge in your crotch.
	<<elseif $mc.penisCor <= 3.5>>
	You have a small penis of <<PenisLengthText>>. You are a bit self conscious about it, but it works perfectly well.
	<<elseif $mc.penisCor <= 4.5>>
	You have a below average penis of <<PenisLengthText>>. Yeah, you know it's not that big, but you try not to get too hung up on it.
	<<elseif $mc.penisCor <= 5.5>>
	You have a pretty average penis of <<PenisLengthText>>. Nothing to be ashamed of, but nothing to write home about either.
	<<elseif $mc.penisCor <= 6.5>>
	You have a totally average penis of <<PenisLengthText>>, very typical for a man in your demographics.
	<<elseif $mc.penisCor <= 7.5>>
	You have a slightly above average penis of <<PenisLengthText>>, not anything out of the ordinary, but some people may particularly enjoy it.
	<<elseif $mc.penisCor <= 8.5>>
	You have a large penis of <<PenisLengthText>>, people who like larger sizes are likely to be impressed.
	<<elseif $mc.penisCor <= 9.5>>
	You have a very large penis of <<PenisLengthText>>, size queens dream of meeting someone like you, but tighter orifices can be a bit of an issue occasionally.
	<<elseif $mc.penisCor > 9.5 && $mc.penisCor < 100>>
	You have an enormous penis of <<PenisLengthText>>. Are you even going to able to have sex with this monster schlong?
	<<elseif $mc.penisCor >= 100>>
	You have a truly gargantuan penis that hangs at a size of <<PenisLengthText true>> long. Sex with normal sized people would need to be very different than it used to be.
	<</if>>
	<<if $mc.doublePenis>>
	In fact you have two of them!
	<</if>>
<br>
<</if>>
<<if $mc.vagina === 1>>
	<<if $mc.hasCurse("Colossal-able")>>
		You have a cavernous pussy sitting between your legs, most of your lovers would be able to fit their entire body inside you without even filling you up.
	<<elseif $mc.hasCurse("Minish-ish")>>
		You have a miniscule pussy to match your size, making it very difficult to have sex with normal-sized people.
	<<else>>
		You have a nice pussy sitting between your legs, pretty typical for a woman in your demographics.
	<</if>>
<br>
<</if>>
<<if $mc.vagina === 0 && $mc.penisCor === 0>>
You have a smooth and featureless doll-like groin.
<br>
<</if>>
<<if $mc.extraWombs.length > 0 >>
<br>You have an extra womb in your $mc.extraWombs[0].
<</if>>
<<if $mc.extraWombs.length > 1>>
<br>You have another extra womb in your $mc.extraWombs[1].
<</if>>

<<if $mc.breastsCor < 1>>
You possess a flat, <<GenderPronoun>> chest, sleek and unassuming.
<<elseif $mc.breastsCor < 2>>
Your AA cup chest is subtle and delicate, making you stand out from the crowd in your own unique way.
<<elseif $mc.breastsCor < 3>>
Adorning your chest are charming A cup breasts, petite yet alluring.
<<elseif $mc.breastsCor < 4>>
Your B cup breasts are soft and supple, a perfect balance between size and grace.
<<elseif $mc.breastsCor < 5>>
Blessed with perfectly round C cup breasts, you exude a natural elegance.
<<elseif $mc.breastsCor < 6>>
Your D cup breasts are generously sized, offering a delightful handful to admire.
<<elseif $mc.breastsCor < 7>>
With larger than most E cup breasts, you command attention and admiration.
<<elseif $mc.breastsCor < 8>>
Your F cup breasts are becoming quite substantial, but you carry them with poise and confidence.
<<elseif $mc.breastsCor < 9>>
Your G cup breasts are voluptuous, requiring extra care to avoid potential back pain.
<<elseif $mc.breastsCor < 10>>
Your H cup breasts are stunningly ample, making it important to be mindful of potential back pain.
<<elseif $mc.breastsCor < 11>>
Your I cup breasts are exceptionally full, so it's wise to watch out for serious back pain.
<<elseif $mc.breastsCor < 12>>
With your J cup breasts, it's essential to be cautious of serious back pain due to their impressive size.
<<elseif $mc.breastsCor < 13>>
Your K cup breasts are truly striking, but be aware of the risk for serious back pain.
<<elseif $mc.breastsCor < 14>>
Boasting L cup breasts, you should remain vigilant for potential serious back pain.
<<elseif $mc.breastsCor < 15>>
Your M cup breasts are both captivating and challenging, making it important to watch for serious back pain.
<<elseif $mc.breastsCor < 16>>
With your N cup breasts, it's crucial to be cautious of very serious back pain.
<<elseif $mc.breastsCor < 17>>
Your O cup breasts are astounding, but it's important to watch out for very serious back pain.
<<elseif $mc.breastsCor < 18>>
Possessing P cup breasts, you should be mindful of the risk for very serious back pain.
<<elseif $mc.breastsCor < 19>>
With your Q cup breasts, it's essential to watch out for very serious back pain.
<<elseif $mc.breastsCor < 20>>
Your R cup breasts are truly magnificent, but be cautious of the potential for very serious back pain.
<<elseif $mc.breastsCor >= 20>>
Boasting an incredible S cup size, you must always be vigilant for the risk of extremely serious back pain.
<</if>>
<<if $time-$menCycleT-$menCycleVar>20 && $menCycleFlag>>
They are a bit sore at the moment.
<</if>>
<br>
<<if $mc.lactation > 1 >>
	<<print "You are heavily lactating at all times, and need frequent milking breaks. Ignoring this causes your breasts to get sore and expand rather quickly. ">><br>
<<elseif $mc.lactation > 0  >>
	<<print "You are lactating at all times, but thankfully it's just enough to be a bit annoying. ">><br>
<</if>>
<<if $mc.tail.length > 0>>
	<<for $i = 0; $i < $mc.tail.length; $i++>>
			You have a $mc.tail[$i] tail right above your butt.<br>
	<</for>>
	<br>
<</if>>
<hr>

<<if $dollevent2>>
	You find yourself wearing a tattered pink dress that bears a striking resemblance to the one worn by your doll. Frustratingly, this situation prevents you from changing into other clothes, even in extreme conditions.
	<<if $dolleventWet>0>>
		To make matters worse, you are also stuck wearing a disposable-type diaper beneath your dress. No matter how hard you try, it remains securely fastened around your waist, with the tapes seemingly nonfunctional.
	<</if>>
	<br><hr>
<</if>>
<<if $WettingSolution===2>>
	Instead of your typical underwear, you now don Maru's protective absorbent underwear. However, calling it merely "protective" seems like a gross understatement. Maru designed it to be so bulky that it feels as if you're walking around in a cloth diaper.
<</if>>

<<if $crumbleFluid > 0>>
	Due to the consumption of crumbleweed from the fifth layer, your production of sexual fluids has increased by <<print $crumbleFluid>>%<<if $mc.hasCurse("Leaky")>>, and your overall production has even doubled due to your 'Leaky' Curse<</if>>. <<if $crumbleFluid > 50>>Try not to get too dehydrated if you're especially sexually active.<</if>><<print " ">>
<<elseif $mc.hasCurse("Leaky")>>
	Your overall production of sexual fluids has doubled due to your 'Leaky' curse.
<</if>>
<<if $mc.hasCurse("Semen Demon")>>
	You must drink <<print ($mc.curses.filter(c => c instanceof SemenDemon).reduce((v, c) => v + c.amount, 0) * 10)>> ml of sexual fluids every day, or else you feel as though you were starving. This averages <<print ($mc.curses.filter(c => c instanceof SemenDemon).reduce((v, c) => v + c.amount, 0) * 2)>> loads per day.
	<<if $mc.curses.some(e =>
		e instanceof SemenDemon && (
			($mc.penis > 0 && e.fluidType !== 'vaginal fluids') ||
			($mc.vagina > 0 && e.fluidType !== 'semen')
		))
	>>
		You can supply yourself with <<print Math.floor($mc.fluids/100*2)>> loads a day.
	<</if>>
	<<if $SemenDemonVec.length > 0>>
		<<if $SemenDemonVec.length === 1>>
			<<print $SemenDemonVec[0].name>>
		<<else>>
			<<print `${$SemenDemonVec.slice(0, -1).map(c => c.name).join(', ')} and ${$SemenDemonVec.at(-1).name}`>>
		<</if>>
		<<if $SemenDemonVec.length === 1>>is<<else>>are<</if>> providing you with <<print 2 * $SemenDemonVec.map(c => c.fluids / 100).reduce((a, b) => a + b, 0)>> loads a day.
	<</if>>
	<<print " ">>
<</if>>
<<set _quotaCount = setup.activeCurseCount("Quota")>>
<<if _quotaCount > 0>>
	You need to directly bring other people to orgasm <<if $mc.hasCurse("Sleep Tight")>><<print (_quotaCount * 3)>><<else>><<print (_quotaCount * 2)>><</if>> times per day, or else you feel a huge wave of exhaustion and difficulty focusing, as if you hadn't slept for several days. <<if $mc.hasCurse("Blushing Virgin")>>And yet every time feels like your first time ever, making it a bit awkward to save time with group sessions!<</if>><<print " ">>
<</if>>
<<set _limelightCount = setup.activeCurseCount("In the Limelight")>>
<<if _limelightCount > 0>>
	You need to be the focus of <<print (_limelightCount * 50)>> orgasms per day, even if you are not causing them directly, or else you cease to feel joy entirely, falling into a deep depression. On top of that, your misadventures in the Abyss are now streamed to quite a lot of people. This means <<if $mc.hasCurse("Semen Demon") || $mc.hasCurse("Quota")>>not only you have to have sex with so many people, but also <</if>>you have to keep a steady supply of dirty photos and videos featuring you circling around for others to masturbate to. <<if $mc.hasCurse("Blushing Virgin")>>This line of work really does not go well with someone as shy as you! <</if>><<print " ">>
<</if>>
<<if $bewitchBabies > 0>>
	Due to your consumption of the contaminated rainwater of the second layer, your fertility has greatly increased. The average amount of  babies born from any pregnancy you're involved in is increased by <<print $bewitchBabies>>.<<print " ">>
<</if>>
<<if $algalSize > 0>>
	Your <<if $mc.sex === "male">>testicles are<<elseif $mc.sex === "female">>clitoris is<<else>>testicles and clitoris are<</if>> approximately <<print (10 * $algalSize)>>% larger than usual due to drinking contaminated melted snow from the fourth layer.<<print " ">>
<</if>>

<<if $mc.hasCurse("Weakling")>>
	<<if $mc.fit > 8>>
		Training with the World Stone has granted you a fit physique, particularly well-defined arm muscles. If it wasn't for your Curse, this would allow you to carry more weight and might have even marginally decreases your travel time.
	<<elseif $mc.fit > 6>>
		You possess a well-toned, athletic body. If it wasn't for your Curse, you might have been able to carry slightly more weight and required a bit less time to travel than a regular adventurer.
	<<elseif $mc.fit > 4>>
		You have an unremarkable yet healthy body, but thanks to your Curse you are as weak as a babe.
	<<else>>
		Your body appears rather out of shape - although with your Curse, no amount of exercise would improve your physical ability.
	<</if>>
<<else>>
	<<if $mc.fit > 8>>
		Training with the World Stone has granted you a fit physique, particularly well-defined arm muscles. This will allow you to carry more weight and may even marginally decrease your travel time.
	<<elseif $mc.fit > 6>>
		You possess a well-toned, athletic body. Thus, you might be able to carry slightly more weight and require a bit less time to travel than a regular adventurer.
	<<elseif $mc.fit > 4>>
		You have an unremarkable yet healthy body.
	<<else>>
		Your body appears rather out of shape, and you could certainly benefit from some exercise. Consequently, you can carry significantly less and must take more frequent breaks while traveling compared to a fit expedition leader.
	<</if>>
<</if>>
<br><hr>

<<if $AegisWear>>Although imperceptible to an outside observer, your natural skeleton has been seamlessly replaced with a lightweight and resilient orichalcum framework.<br><hr><</if>>

<<if 120 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 180 && !$menFirstCycle>>
	Your pregnancy is now visibly noticeable, with your belly round and growing. You occasionally feel a gentle flutter within, a reminder of the life blossoming inside you.<br><hr>
<<elseif 120 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 180 && $menFirstCycle>>
	You've gained some weight, and your belly has become rounder. Every so often, you experience ticklish spasms from within, possibly a sign of your baby's movements.<br><hr>
<<elseif 180 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 240>>
	Your belly is now large and unmistakably that of a pregnant person. Your child's movements within your womb are frequent, and at times, the intensity of the sensations surprises you.<br><hr>
<<elseif setup.daysConsideredPregnant($mc) >= 240 && setup.daysUntilDue($mc) > 0>>
	Your belly is sizable and clearly pregnant. Your child often tries to move and kick<<if $mc.tentacleFucked>>, although sometimes it feels more like slithering<</if>> within your womb, but space is becoming limited. The sensations can be quite intense, but you sense that your pregnancy is nearing its end.<br><hr>
<</if>>
<<if !(setup.isPregnant($mc) && 120 <= setup.daysConsideredPregnant($mc)) && $time - $MaximCycleT > 28 && $MaximCycleT_flag>>
	Your belly has expanded significantly due to the parasite's growth. Each of its movements is clearly visible when you observe your midsection. To the unsuspecting eye, you could easily be mistaken for someone who is six months pregnant.<br><hr>
<<elseif !(setup.isPregnant($mc) && 120 <= setup.daysConsideredPregnant($mc)) && $time - $MaximCycleT > 21 && $MaximCycleT_flag>>
	The parasite within you has grown noticeably. Each of its motions feels like a distinct push against your inner walls. To an unknowing observer, your expanded belly might suggest early pregnancy.<br><hr>
<<elseif !(setup.isPregnant($mc) && 120 <= setup.daysConsideredPregnant($mc)) && $time - $MaximCycleT > 14 && $MaximCycleT_flag>>
	You sense the parasite's growth as a series of gentle flutters inside. Though your clothing might hide the slight bulge in your belly, to you, it appears as though the early stages of a pregnancy are setting in.<br><hr>
<</if>>

<<if $mc.libido < 1>>
You have a very low libido, without much interest at all in sex.
<<elseif $mc.libido < 2>>
You have a below average libido, you sometimes thinks about sex, but most of the time you are still pretty indifferent about it.
<<elseif $mc.libido < 3>>
You have your normal libido, being somewhat interested in sex, but you can certainly control yourself.
<<elseif $mc.libido < 4>>
You have a slightly elevated libido. You will feel hot and bothered more regularly than you are accustomed to. Uncomfortable, but manageable.
<<elseif $mc.libido < 5>>
You have an elevated libido. Your sexual urges are frequent and very difficult to resist. Can be only barely hidden; leading a normal lifestyle will be possible, but frequently frustrating.
<<elseif $mc.libido < 6>>
Your libido would be considered a symptom of a mental disorder. You're hopelessly addicted to sex, and it is impossible to keep your desired hidden.
<<elseif $mc.libido < 7>>
You desire sex about as much as basic necessities as food and water, perhaps slightly more. You go to great lengths for sex, and it dominates your life.
<<elseif $mc.libido >= 7>>
You need sex constantly - having sex will only sate your hunger for a matter of minutes, and you will find little meaning in things that don't lead to you having more sex.
<</if>>
<br>
<<if $mc.loweredStandards > 0 && $mc.loweredStandards < 30>>
You notice you're not as picky about who you find attractive as you used to be, or maybe everybody is just a bit more good-looking than they used to be.<br>
<<elseif $mc.loweredStandards >= 30 && $mc.loweredStandards < 60>>
You have had sexual fantasies about a lot more people than normal. Since when did the number of attractive people get so high?<br>
<<elseif $mc.loweredStandards >= 60>>
It's getting crazy how much more attractive everybody has become. Everybody basically looks like a knock-out hottie!<br>
<</if>>
<<if $HeavyHeadwear>>
Your thoughts are organized and focused, and you are able to understand complex concepts and ideas with ease.<br>
<<elseif $IQdrop > 25>>
You are still able to function and hold conversations with people, but most of the time you aren't quite mentally there anymore. Congratulations, you have become a certified <<if $mc.appGender<=5>>himbo! <<else>>bimbo! <</if>><br>
<<elseif $IQdrop > 20>>
Thinking has become so tiring that you try to do it as little as possible. It does cause you to sometimes lose track of what people are talking about, but most of the time when you just <<if $mc.appGender<=5>>smile and wink <<else>>giggle or bite your lip <</if>>people think its fine anyway.<br>
<<elseif $IQdrop > 15>>
You now have clear indications of mental deteroia.. detroiatici... thinking has become harder. You have noticed that your speech has been affected by it more and more. At least you can still get your message across.<br>
<<elseif $IQdrop > 10>>
You feel like you have slowed down mentally compared to normal. It's not that you suddenly forgot everything you learned but it just feels like your head is tired all the time. Maybe a little less thinking will allow you to recover a bit.<br>
<</if>>
<hr>

<<if $mc.curses.length > 0>>
	<<for _i = 0; _i < $mc.curses.length; _i++>>
		<<print $mc.curses[_i].appDesc>>
		<<if _i === $mc.curses.length-1>>
			<br>
		<</if>>
	<</for>>
	<hr>
<</if>>

Overall the world would probably see you now as a <<PerceivedStature $mc>> <<PerceivedRace $mc>> <<PerceivedGender $mc>>.<br><br>
<<back [[$menuReturn]]>>

:: Layer Notes [noreturn nobr]
Notes on layers visited:<br>
<<if $visitL1>>
<br>[[Layer 1 - Arcadia's Garden|Layer1 notes]]
<</if>>
<<if $visitL2>>
<br>[[Layer 2 - Dewdrop Rain Underbrush|Layer2 notes]]
<</if>>
<<if $visitL3>>
<br>[[Layer 3 - Veins of Tartarus|Layer3 notes]]
<</if>>
<<if $visitL4>>
<br>[[Layer 4 - Hoarfrost Wastes|Layer4 notes]]
<</if>>
<<if $visitL5>>
<br>[[Layer 5 - Windswept Potpouri Sands|Layer5 notes]]
<</if>>
<<if $visitL6>>
<br>[[Layer 6 - Cinders of Dis|Layer6 notes]]
<</if>>
<<if $visitL7>>
<br>[[Layer 7 - Sealed City of Agartha|Layer7 notes]]
<</if>>
<<if $visitL8>>
<br>[[Layer 8 - Labyrinthine Bedlam|Layer8 notes]]
<</if>>
<<if $visitL8>>
<br>[[Layer 9 - Reaches of Oceanus|Layer9 notes]]
<</if>>
<br><br>
<<back>>

:: Adjust dubloons [noreturn]
How many dubloons would you like to add? (Use a negative number to subtract)

<<textbox '_input' ''>>

<<link 'Confirm' 'Adjustments'>>
	<<set _parsed = parseInt(_input, 10) || 0>>
	<<set $dubloons += _parsed>>
<</link>>
<<back>>


:: Adjust corruption [noreturn]
How many corruption points would you like to add? (Use a negative number to subtract)

<<textbox '_input' ''>>

<<link 'Confirm' 'Adjustments'>>
	<<set _parsed = parseInt(_input, 10) || 0>>
	<<set $corruption += _parsed>>
<</link>>
<<back>>


:: Adjust time [noreturn]
How many days would you like to add? (Use a negative number to subtract)

This will not consume food, water, or any other resources, but it will affect timers such as pregnancy time.

<<textbox '_input' ''>>

<<link 'Confirm' 'Adjustments'>>
	<<set _parsed = parseInt(_input, 10) || 0>>
	<<set _parsed = Math.max(_parsed, -$time)>>
	<<set $time += _parsed>>
<</link>>
<<back>>


:: Adjust water [noreturn]
How many water rations would you like to add? (Use a negative number to subtract)

<<textbox '_input' ''>>

<<link 'Confirm' 'Adjustments'>>
	<<set _parsed = parseInt(_input, 10) || 0>>
	<<set _bottledIndex = setup.flaskLabels.indexOf('Bottled water')>>
	<<set _parsed = Math.max(_parsed, -$flaskMatrix[_bottledIndex])>>
	<<set setup.item('Bottled Water').count += _parsed>>
	<<set $flaskMatrix[_bottledIndex] += _parsed>>
<</link>>
<<back>>


:: Adjust food [noreturn]
How many food rations would you like to add? (Use a negative number to subtract)

<<textbox '_input' ''>>

<<link 'Confirm' 'Adjustments'>>
	<<set _parsed = parseInt(_input, 10) || 0>>
	<<set _parsed = Math.max(_parsed, -setup.item('Food Rations').count)>>
	<<set setup.item('Food Rations').count += _parsed>>
<</link>>
<<back>>


:: Commerce Balloon [balloon]
Using your balloon, you're able to send up any Relics you want to sell and get back any items you want to buy (or just dubloons if you'd prefer).

<<nobr>>
<<if $tunnelUsed === 1>>
<br>[[Ask people on the surface to look for the items you sent to the surface from the One-sided Tunnel|Balloon Tunnel Retrieval]]<br><br>
<</if>>
[[Send a request to the Outset Town Administration|Balloon Admin]]<br>
<<if $items[19].count > 0>>
[[Send a request to the Relic Workshop|Balloon Workshop]]<br>
<</if>>
<<if $items[18].count > 0>>
[[Send a request to the inn on the surface|Balloon Inn]]<br>
<</if>>
<</nobr>>[[Sell Relics|Balloon Sell1]]
[[Buy items|Balloon Store1]]


[[Finish using balloon to trade|$hubReturn]]


:: Balloon Sell1 [balloon nobr]
<<CarryAdjust>>
Here you can permanently sell any of your collected Relics for a nice haul of dubloons. You can use this to fund further expeditions, pay off your debt, or just get a nice payday at the end of your expedition.<br><br>
<<if $ownedRelics.length < 1>>
You have no Relics to sell.<br>
<<else>>
Choose the Relic you would like to sell:<br>
<</if>>
<<for _relic range $ownedRelics>>
	<<capture _relic>>
		<<set _linkText = `Sell ${_relic.name} for ${setup.sellValue(_relic)} dubloons`>>
		/* Add a bit of indentation: */ &nbsp;
		<<switch _relic.name>>
			<<case "Creepy Doll">>
				<<if $creepydoll.affec > 5>>
					You can't seem to part ways with the Creepy Doll...
				<<else>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic)]]
				<</if>>
			<<case "World Stone">>
				<<if $LilyPromise>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic), setup.modAffection('Lily', -5)]]
					You promised Lily she could use the World Stone at the end of your journey. Selling it now will surely disappoint her greatly.
				<<else>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic)]]
				<</if>>
			<<case "Everhevea">>
				<<if setup.item('Empty Flask').count >= 2>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic), setup.item('Empty Flask').count -= 2]]
				<<else>>
					You need to empty the Everhevea to sell it (have at least two empty flasks in your inventory).
				<</if>>
			<<case "Moonwatcher">>
				<<if $BionicEye>>
					_relic.name: You can't sell Relics that have become part of your body.
				<<else>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic)]]
				<</if>>
			<<case "Glory's Grasp">>
				<<if $BionicArm>>
					_relic.name: You can't sell Relics that have become part of your body.
				<<else>>
					[[_linkText|Balloon Sell1][setup.sellRelic(_relic)]]
				<</if>>
			<<default>>
				[[_linkText|Balloon Sell1][setup.sellRelic(_relic)]]
		<</switch>>
		<br>
	<</capture>>
<</for>>
<br>
[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Store1 [balloon cards nobr]
<p><<CarryAdjust>></p>
<p>[[Continue using the commerce balloon|Commerce Balloon]]</p>

<<include "ShopInventory">>

<p>[[Continue using the commerce balloon|Commerce Balloon]]</p>

:: Balloon Sell 2 [balloon]
<<set $dubloons += ($ownedRelics[$temp].value)>>
The Relic $ownedRelics[$temp].name has been successfully sold and you've gotten your dubloon payment. You won't be getting that Relic back easily.<<run $ownedRelics.deleteAt($temp)>>

[[Sell more Relics|Balloon Sell1]]
[[Continue your balloon business|Commerce Balloon]]


:: Credits
Thank you so much to anyone who has helped me out with this project! I appreciate all the feedback and every suggestion I get, especially feature requests and bug reports! I try to respond promptly to these, so please let me know if you have an idea or find a bug!

Thanks to Ilse91 for helping with a huge variety of code and adding some new features regarding height, carry weight, companions, conversations, and endings. Additionally, she's been instrumental in helping update many systems to make them function better, such as Curses. She also helped in getting my motivation for working on the game back and her help is incredibly appreciated.

Thanks to Emmeken for helping with the move to Tweego and Github, numerous formatting fixes and improvements, transcribing the item descriptions for me, and huge amounts of help generally with code improvements.

Thanks to CaptainCaption for generously allowing the use of Ai's images from their game re:Dreamer, you can try out and support their excellent transformation VN game at https://www.patreon.com/dreamteamstudio 

Thanks to Spiky Moth for helping to clean up a bunch of code, such the shrines, Curse removal, and traveling!
Thanks to Annonymus for helping with many typos and some important code refactoring!
Thanks to Nerevar for writing drafts of the Curse descriptions that appear when transitioning layers or occasionally in a layer hub.
Thanks to RimShaun for writing the water drop code and some other misc suggestions.
Thanks to Boss_Of_Killers for creating the Abyss Diver Interactive wiki and filling out a lot of information on it.
Thanks to dogflail for writing drafts for some of the Curse appearance screen descriptions.
Thanks to abiciendimittent for transcribing the Relic and Curse descriptions (will be added to the game when they are completed)
Thanks to Stadler for finding many bugs and reporting them to me.
Thanks to HiEv for having a great tutorial with sample code that I used in this project.
Thanks to laevus for bug reports.
Thanks to Kras for suggestions and bug reports.
And thanks to Lily for encouraging me when I got some negative feedback early in the initial draft form of this game.

Thanks to Nikita Gobulev, Freepik, pongsakornRed, Pixel perfect, David Carapinha,lutfix, Surang, SmashIcons, and kiranshastry for icons via Flaticon.

Thank you to the anonymous original author of the Abyss Diver CYOA for creating an incredible adventure that so many people have appreciated.
Additionally, thanks to éˆ´æœ¨èŒ‚ä¹Ÿ (Akihiko Tsukushi) for creating Made in Abyss, which served as an incredible inspiration for the original CYOA.

I seriously appreciate all of your help and I'm really happy that people were willing to help improve this project with me.


:: Surface Tunnel Retrieval [surface]
<<include "Tunnel Retrieval">>\
You manage to find your items safely, retrieving all of them and putting them right back into your inventory where they belong. Luckily no one seems to have disturbed or taken anything in the time it took you to get back up here and find your items.

[[Continue your business in Outset Town|Surface Hub]]


:: Balloon Tunnel Retrieval [balloon]
<<include "Tunnel Retrieval">>\
Helpful people on the surface managed to find your items safely, retrieving all of them and sending them back to you via the commerce balloon. Luckily nothing went missing.

[[Continue using the commerce balloon|Commerce Balloon]]


:: Tunnel Retrieval [nobr]
<<for _i = 4; _i < $items.length; _i++>>
	<<set $items[_i].count += $vaultItems[_i].count>>
	<<set $vaultItems[_i].count = 0>>
<</for>>
<<set $dubloons += $tunnelDubloons>>
<<set $tunnelUsed = 0>>
<<set _water = $flaskMatrix[0]>>
<<set $flaskMatrix = $tunnelFlaskMatrix>>
<<set $tunnelFlaskMatrix = [0,0,0,0,0,0,0,0,0]>>
<<set $flaskMatrix[0] = _water>>

:: Use Items and Relics
<<nobr>>
<<if $items[3].count + $items[0].count>0 >>
	<<set $switchFlask=false>>
	<<set $temp0=-1>>
	You can choose the order in which you drink the water you have with you:<br>
	<span class="icon">[img[setup.ImagePath+'Icons/waterbottle.png']]</span> [[Organize your drinking water|Flask Order]]<br>
<</if>>

<br><span class="icon">[img[setup.ImagePath+'Icons/trash.png']]</span> [[Empty some flasks or drop some items/Relics you're carrying|Drop Items Menu]]<br>

<<if $items[11].count < 1 && $ownedRelics.some(e => e.name === "Silk Twister")>>
<br>You could spend a day weaving a rope out of your own hair using the Silk Twister. You'd end up with a rope, but it would take a day of effort weaving it.<br>
<<WaitAtPassage 'Weave a hair rope' `"Silk Twister Rope"` '1'>><br>
<</if>>

<<if $items[7].count > 0>>
	<<if $currentLayer===0>>
		<br>There is no need to use a commerce balloon while you are on the surface.<br>
	<<elseif $currentLayer>7>>
		<br>You are too deep in the Abyss to make use of the commerce balloon! Get back up to the seventh layer if you want to make contact with the surface.<br>
	<<else>>
		<br>[[Use a commerce balloon to trade with the surface|Commerce Balloon][$items[7].count -=1]]<br>
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Moonwatcher") && !$BionicEye && $mc.hasCurse("Eye on the Prize")>>
		<br>You are missing an eye, so it should be possible to install the Moonwatcher into the empty socket. However, due to your lack of surgical expertise and equipment, this will result in minor injuries increasing your next 2 travel times by 1 day each.<br>
		[[Replace your missing eye with the Moonwatcher|Use Items and Relics][$light = 1, $BionicEye=true, $status.duration += 2, $status.penalty += 1]]<br>
<</if>>

<<if $ownedRelics.some(e => e.name === "Glory's Grasp") && !$BionicArm && $mc.hasCurse("Ampu-Q-tie")>>
		<br>You are missing a limb, so you have a perfect opportunity to install your Glory's Grasp into the place where your arm would be. However, due to your lack of surgical expertise and equipment, this will result in minor injuries increasing your next 2 travel times by 1 day each.<br>
		[[Replace your missing limb with the Glory's Grasp|Use Items and Relics][$BionicArm=true, $status.duration += 2, $status.penalty += 1]]<br>
<</if>>

<<if $items[8].count > 0>>
	<<if $currentLayer===0>>
		<br>There is no need to deploy your escape balloon while you are on the surface.<br>
	<<elseif $currentLayer===1>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L1][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===2>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L2][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===3>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L3][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===4>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L4][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===5>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L5][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===6>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L6][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer===7>>
		<br>[[Use an escape balloon to escape towards the surface|Escape Balloon L7][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer>7>>
		<br>You are too deep in the Abyss to make use of the escape balloon! Get back up to the seventh layer if you want to use a balloon to return to the surface.<br>
	<</if>>
<</if>>

<<if setup.haveHealing && ($status.penalty > 0) && $dragonBurn === 0>>
	<br>You currently have a status condition that is slowing down your next $status.duration travel times by $status.penalty days each.<br>
	
	<<if $devouredRelics.some(r => r.name === 'Lifespanner')>>
		<<set _text = "Touch yourself to heal your injuries with the power of the absorbed Lifespanner">>
	<<else>>
		<<set _text = "Use a medkit or other healing item to cure your status condition instantly">>
	<</if>>

	<<link  _text "Use Items and Relics">>
		<<if !($ownedRelics.some(r => r.name === 'Lifespanner') || $devouredRelics.some(r => r.name === 'Lifespanner'))>>
			<<set $items[4].count -= 1>>
		<</if>>
		<<set $status.penalty = 0, $status.duration = 0>>
	<</link>><br>
<</if>>

<<if (($items[4].count > 1) || $ownedRelics.some(r => r.name === 'Lifespanner') || $devouredRelics.some(r => r.name === 'Lifespanner')) && ($status.penalty > 0) && $dragonBurn === 1>>
	<br>You currently have a severe dragon burn which is slowing you down permanently until you heal it, however it will take 2 medkits to heal it properly.<br>
	
	<<if $devouredRelics.some(r => r.name === 'Lifespanner')>>
		<<set _text = "Touch yourself to heal your injuries with the power of the absorbed Lifespanner">>
	<<else>>
		<<set _text = "Use two medkits or other healing item to cure your status condition instantly">>
	<</if>>
	
	<<link _text "Use Items and Relics">>
		<<if !($ownedRelics.some(r => r.name === 'Lifespanner') || $devouredRelics.some(r => r.name === 'Lifespanner'))>>
			<<set $items[4].count -= 2>>
		<</if>>
		<<set $status.penalty = 0, $status.duration = 0, $dragonBurn = 0>>
	<</link>><br>
<</if>>

<<if $ownedRelics.some(e => e.name === "World Stone")>>
	<br>
	<<if $mc.fit >= 10>>
		You don't think you would get anymore fit than you are from working out with the World Stone.
		Your fitness has reached near peak human levels, and while you might be able to improve a bit more with a dedicated workout period, it's not likely you'll be able to achieve that in the Abyss.<br>
	<<elseif $time > $LastEx + 1>>
		You can make use of the World Stone to make use of a perfect fitness routine, tuned precisely to the needs of your body.
		If you want to get <<if !$mc.hasCurse("Weakling")>>stronger and<</if>> more fit, using this Relic is the best way to do it.<br>
		[[Work out with the World Stone|Use Items and Relics][$mc.fit += 1, $LastEx = $time, $fit_adjustLastT = $time]]<br>
	<<else>>
		Your arms are still sore from your last workout with the World Stone, so even with the help of the Relic you won't get much benefit from working out more.<br>
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Aegis Coffin")>>
	<<if $AegisWear>>
	    /* Why are we printing this here if there's nothing the player can do with it anyway? */
		<br>After resting in the Aegis Coffin, your bones have been transformed into an orichalcum skeleton. You have no further use for this powerful Relic.
		<br>
	<<else>>
		<br>You possess the Aegis Coffin. Would you like to slumber within it to replace your current skeleton with a superior orichalcum one?<br>
		[[Sleep in the Aegis Coffin|Use Items and Relics][$AegisWear=true, setup.skeletonRemains.weight= 9.3*$mc.heightCor/170, setup.skeletonRemains.count+=1,$items.push(setup.skeletonRemains)]]<br>
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Pulse Bloom")>>
	/* $PulseBloomUse used to be initialized as an array, so check carefully. */
	<<set _pulseBloomInUse = $PulseBloomUse !== "" && !Array.isArray($PulseBloomUse)>>

	<<if $hiredCompanions.length > 0 && !_pulseBloomInUse>>
		<br>You can use the Pulse Bloom to copy the appearance of one of your companions.<br>
		[[Use the Pulse Bloom|Pulse Bloom Use]]<br>
	<<elseif _pulseBloomInUse>>
		<br>You are already under the effect of the Pulse Bloom.<br>
	<<else>>
		<br>You have nobody to use the Pulse Bloom on.<br>
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Lambent Specter")>>
	<<if $hiredCompanions.some(e => e.id === setup.companionIds.golem)>>
		<br>A golem, animated by a soul harnessed through the Lambent Specter's power, loyally follows you. <br>
		<br>
		<<link "Dispel the Golem by extinguishing its flame" "Use Items and Relics">>
		<<for _i = 0; _i < $hiredCompanions.length; _i++>>
			<<if $hiredCompanions[_i].id === setup.companionIds.golem>>
				<<set $hiredCompanions.deleteAt(_i)>>
			<</if>>
		<</for>>
		<</link>>
	<<else>>
		<br>You have the opportunity to summon a spirit to forge a golem using the power of the Lambent Specter<br><br>
		[[Summon a spirit with the Lambent Specter|Lambent Use]]
	<</if>>
<br><br>
<</if>>

<<if $ownedRelics.some(e => e.name === "Memory Reign") && $hiredCompanions.length > 0>>
	<br>Do you wish to use the Memory Reign to erase the memories of one of your companions? This will reset affection to 0, like when you first met them, and will remove their memory of all of your past conversations.<br>
	<<if $hiredCompanions.some(e => e.id === setup.companionIds.maru)>>
		<<link "Maru" "Use Items and Relics">>
			<<set $MaruConvo0 = false>>
			<<set $MaruConvo1 = false>>
			<<set $MaruConvo2 = false>>
			<<set $MaruConvoPreg = false>>
			<<set $companionMaru.affec=0>>
		<</link>><br>
	<</if>>
	<<if $hiredCompanions.some(e => e.id === setup.companionIds.lily)>>
		<<link "Lily" "Use Items and Relics">>
			<<set $LilyConvo0 = false>>
			<<set $LilyConvo1 = false>>
			<<set $LilyConvo2 = false>>
			<<set $LilyPromise = false>>
			<<set $LilyConvoLac = false>>
			<<set $LilyConvoPreg = false>>
			<<set $companionLily.affec=0>>
		<</link>><br>
	<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.khemia)>>
		<<link "Khemia" "Use Items and Relics">>
			<<set $KhemiaConvo0 = false>>
			<<set $KhemiaConvo1 = false>>
			<<set $KhemiaConvo2 = false>>
			<<set $KhemiaConvoMoreFem = false>>
			<<set $KhemiaConvoMostFem = false>>
			<<set $KhemiaConvoMoreMasc = false>>
			<<set $KhemiaConvoMostMasc = false>>
			<<set $khmeiaWettingFlag = false>>
			<<set $KhemiaConvoPreg = false>>
			<<set $companionKhemia.affec=0>>
		<</link>><br>
	<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.cherry)>>
		<<link "Cherry" "Use Items and Relics">>
			<<set $CherryConvo0 = false>>
			<<set $CherryConvo1 = false>>
			<<set $CherryConvo2 = false>>
			<<set $CherryConvoLac = false>>
			<<set $CherryFluffy = false>>
			<<set $CherryConvoPreg = false>>
			<<set $companionCherry.affec=0>>
		<</link>><br>
	<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.cloud)>>
		<<link "Cloud" "Use Items and Relics">>
			<<set $CloudConvo0 = false>>
			<<set $CloudConvo1 = false>>
			<<set $CloudConvo2 = false>>
			<<set $CloudConvoLac = false>>
			<<set $CloudConvoPreg = false>>
			<<set $altCloud	   = true>>
			<<set $companionCloud.affec=0>>
		<</link>><br>
	<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.saeko)>>
		<<link "Saeko" "Use Items and Relics">>
			<<set $SaekoConvo0 = false>>
			<<set $SaekoConvo1 = false>>
			<<set $SaekoConvo2 = false>>
			<<set $SaekoConvoPlant = false>>
			<<set $SaekoConvoPreg = false>>
			<<set $companionSaeko.affec=0>>
		<</link>><br>
	<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.twin)>>
		<<link "Your twin" "Use Items and Relics">>
			<<set $TwinConvo1 = false>>
			<<set $TwinConvo2 = false>>
			<<set $TwinFly = false>>
			<<set $TwinConvoPreg = false>>
			<<set $pregTwinMC = false>>
			<<set $companionTwin.affec=0>>
		<</link>><br>
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Kin Shifter") && $ownedRelics.length > 1>>
	<br>A glob of putty-like slime lays ready for you to copy other Relics, if you desire to.<br>
	[[Use the Kin Shifter to copy Relics|Kin Shifter Use]]<br><br>
<</if>>

<<if $ownedRelics.some(e => e.name === "Forbidden Grimoire") && $hiredCompanions.length > 0>>
	<br>A ragged book written in a strange, ancient language sits in your bag. It holds forgotten knowledge that can improve anyone's skills, doubling any numeric benefit they provide.<br>
	[[Use the Forbidden Grimoire to improve someone's abilities|Forbidden Grimoire Select]]<br><br>
<</if>>

<<if $ownedRelics.some(e => e.name === "Ring of the Devourer")>>
		<br>Your Ring of the Devourer has the ability to devour a Relic, absorbing it into your body. This allows you to absorb the power of a Relic, but destroys it in the process.<br>
		[[Choose a Relic to absorb|Ring of the Devourer Use]]<br><br>
<</if>>

<div class="relicToggles">
	<<if $abyssKnow === 1 || ($hiredCompanions.some(e => e.id === setup.companionIds.saeko) || $items[5].count > 0 || setup.haveSmartphone)>>
		<div class="relicToggleEntry">
			<div>If you have the encyclopedia, the smartphone or are travelling with Saeko you can turn Abyssal knowledge on or off</div>
			<div><<printHTML `toggle(b => $abyssKnowCheatoff = !b, !$abyssKnowCheatoff)`>></div>
		</div>
	<</if>>

	<<if $items[24].count > 0>>
		<div class="relicToggleEntry">
			<div>Use energy rations</div>
			<div><<printHTML `toggle(b => $useEnergyrations = b, $useEnergyrations)`>></div>
		</div>
	<</if>>

	<<if $items[25].count > 0>>
		<div class="relicToggleEntry">
			<div>Use Ward Water instead of forage or other water sources</div>
			<div><<printHTML `select(v => $wardWaterDrink = v, {Never: 0, 'When Jinxed': 1, Always: 2}, $wardWaterDrink)`>></div>
		</div>
	<</if>>

	<<if $items[25].count > 0 && $hexflame > 9>>
		<div>
			You can drink as much Ward Water as you want if you you want to reduce your jinxed flame counters. This might not be the most economical idea, but it can help you solve the issue immediately if you're not worried about conserving water.<br>
			[[Drink some Ward Water to reduce your hexflame count|Ward Water Drink]]
    	</div>
    <</if>>

    <<if $ownedRelics.some(e => e.name === "Heart-stealing Stole")>>
		<div class="relicToggleEntry">
			<div>You can put on the majestic stole you have, it is sure to help sway the hearts of your companions to become more friendly and respect you as a leader. This increases the affection gain from any event that alters affection.</div>
			<div><<printHTML `toggle(v => $hsswear = v ? 1 : 0, !!$hsswear)`>></div>
		</div>`
	<<elseif $devouredRelics.some(e => e.name === "Heart-stealing Stole")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Heart-stealing Stole. Your companions will become more friendly and respect you as a leader over time. This increases the affection gain from any event that alters affection.</div>
			<<set $hsswear = true>>
		</div>`
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Solace Lace")>>
		<div class="relicToggleEntry">
			<div>You can put on the small white bow you have. It will shield you from any extreme environmental temperatures, protect you from illness and above all make you hair look more feminine and cute!</div>
			<div><<printHTML `toggle(v => $slwear = v ? 1 : 0, !!$slwear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Solace Lace")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Solace Lace. You are permanently shielded from any extreme environmental temperatures and protected from illness!</div>
			<<set $slwear = true>>
		</div>`
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Event Horizon")>>
		<div class="relicToggleEntry">
			<div>You can put on the Event Horizon bracelet. This will ensure your body's natural waste management will stop.</div>
			<div><<printHTML `toggle(v => $EventHorizonWear = v, $EventHorizonWear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Event Horizon")>>
		<div class="relicToggleEntry">
			<div>You absorbed the Event Horizon bracelet. Your body's natural waste management has permanently stopped.</div>
			<<set $EventHorizonWear = true>>
		</div>`
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Chain of Lorelei")>>
		<div class="relicToggleEntry">
			<div>You can wear the Chain of Lorelei to get a feminine voice that sounds like its coming from someone with a natural talent for singing, as if you could be the central figure in an angelic chorus or make a career in music with only minimal training.</div>
			<div><<printHTML `toggle(v => $colwear = v ? 1 : 0, !!$colwear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Chain of Lorelei")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Chain of Lorelei, which means you now permanently have a feminine voice are are imbued with a natural talent for singing, as if you could be the central figure in an angelic chorus or make a career in music with only minimal training.</div>
			<<set $colwear = true>>
		</div>`
	<</if>>

	<<if $ownedRelics.some(e => e.name === "Blind Divine")>>
		<div class="relicToggleEntry">
			<div>You can wear the Blind Divine to obtain the power of blindsight
				<<if $eyeCount<2 && !$BionicEye>>
					which allows you to perceive even more than when you still had both your eyes. The limited range of the Relic still makes it feel a little more awkward than when you had your normal vision.
				<<else>>
					which allows you to perceive your immediate surroundings to a level of precision you could never hope to achieve with your eyes.
				<</if>>
			</div>
			<div><<printHTML `toggle(v => $BDwear = v, $BDwear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Blind Divine")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Blind Divine. This means you obtained obtain the power of blindsight 
				<<if $eyeCount<2 && !$BionicEye>>
					which allows you to perceive even more than when you still had both your eyes. The limited range of the Relic still makes it feel a little more awkward than when you had your normal vision.
				<<else>>
					which allows you to perceive your immediate surroundings to a level of precision you could never hope to achieve with your eyes.
				<</if>>
			</div>			<<set $BDwear = true>>
		</div>`
	<</if>>

	<<if $ownedRelics.some(e => e.name === "Heavy is the Head")>>
		<div class="relicToggleEntry">
			<div>You have the Heavy is the Head, would you like to wear it and enhance your intelligence?</div>
			/* The IQ drop really ought to be calculated, not stored like this */
			<div><<printHTML `toggle(v => {$HeavyHeadwear = v; $IQdrop += v ? -999 : 999;}, $HeavyHeadwear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Heavy is the Head")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Heavy is the Head relic. Your intelligence has permanently been enhanced.</div>
			<<set $IQdrop = -999>>
			<<set $HeavyHeadwear = true>>
		</div>
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Lightning Rook")>>
		<div class="relicToggleEntry">
			<div>By grasping the Lightning Rook, time slows to a crawl, making battles significantly easier, especially when you're armed with a firearm. You can keep it close so that you're always ready to use its power at a moment's notice.</div>
			<div><<printHTML `toggle(v => $LightningWear = v, $LightningWear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Lightning Rook")>>
		<div class="relicToggleEntry">
			<div>Since you absorbed the Lightning Rook, time slows to a crawl when you hold your own hands, making battles significantly easier, especially when you're armed with a firearm.</div>
			<<set $LightningWear = true>>
		</div>
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Luminous Phantasmagoria")>>
		<div class="relicToggleEntry">
			<div>By wearing the Luminous Phantasmagoria people would view you as more normal and innocent.</div>
			<div><<printHTML `toggle(v => $LuminousWear = v, $LuminousWear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Luminous Phantasmagoria")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the Luminous Phantasmagoria relic. The world will permanently view you as more normal and innocent.</div>
			<<set $LuminousWear = true>>
		</div>
	<</if>>

	<<if $ownedRelics.some(e => e.name === "Between Whispers")>>
		<div class="relicToggleEntry">
			<div>By wearing the Between Whispers, you will always be able to communicate and have conversations, even if you would normally be deaf or mute.</div>
			<div><<printHTML `toggle(v => $WhispersWear = v, $WhispersWear)`>></div>
		</div>
	<<elseif $devouredRelics.some(e => e.name === "Between Whispers")>>
		<div class="relicToggleEntry">
			<div>You have absorbed the "Between Whispers" relic. You will always be able to communicate and have conversations, even if you would normally be deaf or mute.</div>
			<<set $LuminousWear = true>>
		</div>
	<</if>>

	<<if $ownedRelics.some(e => e.name === "From Seafoam")>>
		<div class="relicToggleEntry">
			<div>You can scrub yourself with the From Seafoam sponge while imagining a specific scent to change the way you smell</div>
			<div><<printHTML `select(v => $scent = v, {"spicy, musky": -1, 'odorless': 0, 'sweet, floral': 1}, $scent)`>></div>
		</div>
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Sibyl Blend")>>
		<div class="relicToggleEntry">
			<div>You have possession of the Sibyl Blend, brewing it and looking in the leaves can point you in the direction of a Relic, saving you 1 day on your next Relic travel time, and this is reflected in the time costs shown on the Relic page.</div>
			<div><<printHTML `toggle(v => $SibylBuff = v, $SibylBuff)`>></div>
		</div>
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Daedalus Mechanism")>>
    	<<set _daedalusFlyToggle = toggle(v => $DaedalusFly = v, $DaedalusFly)>>
		<div class="relicToggleEntry">
			<div>You have obtained an incredibly complex and intricate mechanism that you can wrap around your chest like a sash, then it will interface with your nervous system and allow you to control its wings and take flight.</div>
			<div><<printHTML `toggle(v => {
				$DaedalusEquip = v;
				if (!v) {
					_daedalusFlyToggle.disable();
					document.getElementById('daedalusFlyToggleEntry').style.display = 'none';
				} else {
					document.getElementById('daedalusFlyToggleEntry').style.display = '';
				}
			}, $DaedalusEquip)`>></div>
		</div>
		<<set _style = $DaedalusEquip ? 'margin-top:-0.5em;' : 'margin-top:-1em;display: none'>>
		<div class="relicToggleEntry" id="daedalusFlyToggleEntry" @style="_style">
			<div>You can fly between layers instead of walking (note: this will leave companions behind and they will have to catch up at normal speed).</div>
			<div><<printHTML _daedalusFlyToggle>></div>
		</div>
	<</if>>

    <<if $ownedRelics.some(e => e.name === "Aeonglass with Endless Time")>>
		<div class="relicToggleEntry">
			<div>You look at the temporally limit-broken Aeonglass and ponder its endless use. You could activate it and effectively always travel at double speed to cut your travel times in half.</div>
			<div><<printHTML `toggle(v => $endlessAeonglass = v, $endlessAeonglass)`>></div>
		</div>
	<</if>>

	<<if setup.starlitConquestActivated.count==1>>
		<<if $SizeHandicap>>
			<div>Due to your size constraints, operating the mecha is no longer feasible. The cockpit would not be able to accommodate you.</div>
		<<else>>
			<div class="relicToggleEntry">
				<div>Behind you, the Starlit Conquest stands tall and majestic, its gleaming Adamantium chassis reflecting faint light even in this dark Abyss. Its sheer presence is a comforting reminder of its power, even in its dormant state. But remember, it won't fight on its own! You can board it and continue your journey in the Starlit Conquest.</div>
				<div><<printHTML `toggle(v => $mechaBoarded = v, $mechaBoarded)`>></div>
			</div>
		<</if>>
	<</if>>
</div>

<<if $ownedRelics.some(e => e.name === "Managed Misfortune")>>
	<br>You look at the glistening set of marbles known as the Managed Misfortune.<br>
	<<if !$StoredCurse.length>>
		You need to store a Curse in one of the Relic's marbles before you can use it.<br>
	<<else>>
		[[Manage the Curses stored in your Managed Misfortune|Managed Misfortune Use]]
	<</if>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Gleam Dazer")>>
<br>You can use the Gleam Dazer one time to view a glimpse of the next layer and see what threats, Relics, and Curses await you further into the Abyss.<br>
	<<set $previewReturn = $hubReturn>>
	<<if $currentLayer === 0>>
		[[Peek at what is waiting for you on the first layer|Layer1 Preview]]<br>
	<</if>>
	<<if $currentLayer === 1>>
		[[Peek at what is waiting for you on the second layer|Layer2 Preview]]<br>
	<</if>>
	<<if $currentLayer === 2>>
		[[Peek at what is waiting for you on the third layer|Layer3 Preview]]<br>
	<</if>>
	<<if $currentLayer === 3>>
		[[Peek at what is waiting for you on the fourth layer|Layer4 Preview]]<br>
	<</if>>
	<<if $currentLayer === 4>>
		[[Peek at what is waiting for you on the fifth layer|Layer5 Preview]]<br>
	<</if>>
	<<if $currentLayer === 5>>
		[[Peek at what is waiting for you on the sixth layer|Layer6 Preview]]<br>
	<</if>>
	<<if $currentLayer === 6>>
		[[Peek at what is waiting for you on the seventh layer|Layer7 Preview]]<br>
	<</if>>
	<<if $currentLayer === 7>>
		[[Peek at what is waiting for you on the eighth layer|Layer8 Preview]]<br>
	<</if>>
	<<if $currentLayer === 8>>
		[[Peek at what is waiting for you on the ninth layer|Layer9 Preview]]<br>
	<</if>>
	<<if $currentLayer >= 9>>
		For some reason, you cannot see any farther past this layer. Even the view of the Gleam Dazer seems to be blocked here.<br>
	<</if>>
<</if>>

<</nobr>>
<span class="icon">[img[setup.ImagePath+'Icons/adjustments.png']]</span> [[Perform other stat adjustments to correct for errors|Adjustments]]

<span class="icon">[img[setup.ImagePath+'Icons/return.png']]</span> [[Return|$hubReturn]]



:: Managed Misfortune Use [nobr noreturn]

What would you like to do with your Managed Misfortune?

<<for _curse range $StoredCurse>>
	<<capture _curse>>
		<<if !$ManagedMisfortuneActive.some(c => c.name === _curse.name)>>
			You have stored Curse _curse.name in this marble.<br>
			<<if _curse.name === "Perma-dye" && !_curse.skinColor>>
				As you look into the marbles you see your own reflection in the marble, as well as the miasma of the Curse swirling within. The longer you look, the more the color of your hair seems to change in your reflection. After a few moments, your hair seems as if it had always been its new color. Now, what color do you see?<br>
				Please enter your new hair color: <<textbox "_curse.hairColor" "turquoise" "Use Items and Relics">><br>
			<<elseif _curse.name === "Fluffy Ears" && !_curse.earType>>
				What type of ears would you like to gain?<br>
				<<radiobutton "_curse.earType" "furry cat" checked>> Cat<br>
				<<radiobutton "_curse.earType" "fluffy dog">> Dog<br>
				<<radiobutton "_curse.earType" "floppy cow">> Cow<br>
				<<radiobutton "_curse.earType" "furry monkey">> Monkey<br>
				<<radiobutton "_curse.earType" "furry rabbit">> Rabbit<br>
				<<radiobutton "_curse.earType" "furry fox">> Fox<br>
				<<radiobutton "_curse.earType" "furry mouse">> Mouse<br>
				<<radiobutton "_curse.earType" "pig">> Pig<br>
				<<radiobutton "_curse.earType" "furry horse">> Horse<br>
			<<elseif _curse.name === "Fluffy Tail" && !_curse.tailType>>
				What type of tail would you like to gain?<br>
				<<radiobutton "_curse.tailType" "flowing cat" checked>> Cat<br>
				<<radiobutton "_curse.tailType" "wagging dog">> Dog<br>
				<<radiobutton "_curse.tailType" "lazy cow">> Cow<br>
				<<radiobutton "_curse.tailType" "prehensile monkey">> Monkey<br>
				<<radiobutton "_curse.tailType" "fluffy rabbit">> Rabbit<br>
				<<radiobutton "_curse.tailType" "bushy fox">> Fox<br>
				<<radiobutton "_curse.tailType" "long mouse">> Mouse<br>
				<<radiobutton "_curse.tailType" "twisted pig">> Pig<br>
				<<radiobutton "_curse.tailType" "swaying horse">> Horse<br>
			<<elseif _curse.name === "Maximum Fluff" && !_curse.furType>>
				What type of fur would you like to gain?<br>
				<<radiobutton "_curse.furType" "cat-furred" checked>> Cat<br>
				<<radiobutton "_curse.furType" "dog-furred">> Dog<br>
				<<radiobutton "_curse.furType" "cow-furred">> Cow<br>
				<<radiobutton "_curse.furType" "monkey-furred">> Monkey<br>
				<<radiobutton "_curse.furType" "rabbit-furred">> Rabbit<br>
				<<radiobutton "_curse.furType" "fox-furred">> Fox<br>
				<<radiobutton "_curse.furType" "mouse-furred">> Mouse<br>
				<<radiobutton "_curse.furType" "pig-furred">> Pig<br>
				<<radiobutton "_curse.furType" "horse-furred">> Horse<br>
			<<elseif _curse.name === "Wacky Wombs" && !_curse._wombLocation >>
				What is the location of the womb you would like to add?<br>
				<<radiobutton "_curse._wombLocation" "throat" checked>> Throat<br>
				<<radiobutton "_curse._wombLocation" "urethra">> Urethra<br>
				<<radiobutton "_curse._wombLocation" "anus">> Anus<br>
				<<if $vagina > 0>>\
					<<radiobutton "_curse._wombLocation" "vagina">> Vagina<br>
				<</if>>
			<<elseif _curse.name === "Rainbow Swirl" && !_curse.skinColor>>
				Please enter your new skin color: <<textbox "_curse.skinColor" "pink" "Use Items and Relics">><br>
				Please enter your new eye color: <<textbox "_curse.eyeColor" "pink" "Use Items and Relics">><br>
			<<elseif _curse.name === "Tipping the Scales" && !_curse.scaleColor>>
				Please enter your new scale color and press enter: <<textbox "_curse.scaleColor" "green" "Use Items and Relics">><br>
			<<elseif _curse.name === "Carapacian" && !_curse.skinColor>>
				Please enter your new exoskeleton color: <<textbox "_curse.skinColor" "shiny black" "Use Items and Relics">><br>
			<<elseif _curse.name === "Horny" && !$hornVariation>>
				<<include "Horny Customization">><br>
			<<elseif _curse instanceof SemenDemon && !$mc.hasCurse(SemenDemon)>>
				<<include "Semen Demon Customization">><br>
			<<elseif _curse.name === "Eye on the Prize" && !$eyeRemove>>
				<<include "Eye on the Prize Customization">><br>
			<<elseif _curse.name === "Ampu-Q-tie" && _curse.arms + _curse.legs === 0>>
				<<include "Ampu-Q-tie Customization">><br>
			<<elseif _curse.name === "Dizzying Heights" && $mc.heightDir === 0>>
				<<set _heightDirEvent = new HeightDirectionEvent()>>
				<<set $mc.events.push(_heightDirEvent)>>
				As you look into the marbles you see your own reflection in the marble, as well as the miasma of the Curse swirling within.<br>
				You see your own reflection alternating between growing and shrinking. After a while you see the Curse has settle on a height...<br>
				<<radiobutton "_heightDirEvent.heightDirection" -1 checked>> Decrease<br>
				<<radiobutton "_heightDirEvent.heightDirection" 1 >> Increase<br>
			<<elseif _curse.name === "Hemospectrum" && !_curse.bloodColor>>
				What would you like your new blood (or maybe hemolymph, depending on how human you still are) color to be?<br>
				<<radiobutton "_curse.bloodColor" "blue" checked>> Blue<br>
				<<radiobutton "_curse.bloodColor" "purple">> Purple<br>
				<<radiobutton "_curse.bloodColor" "green">> Green<br>
				<<radiobutton "_curse.bloodColor" "yellow">> Yellow<br>
				<<radiobutton "_curse.bloodColor" "orange">> Orange<br>
				<<radiobutton "_curse.bloodColor" "pink">> Pink<br>
				<<radiobutton "_curse.bloodColor" "black">> Black<br>
				<<radiobutton "_curse.bloodColor" "brown">> Brown<br>
				<<radiobutton "_curse.bloodColor" "white">> White<br>
			<</if>>
			<<set _text = "Activate stored " + _curse.name + " Curse">>
			<<link _text "Managed Misfortune Use">>
				<<if _curse instanceof SemenDemon>>
					<<set _curse = _curse.copy()>>
					<<set _prevCurse = $mc.getCurse(SemenDemon)>>
					<<if _prevCurse !== undefined>>
						<<set _curse.fluidType = _prevCurse.fluidType>>
					<</if>>
				<</if>>

				<<set $mc.addCurse(_curse)>>
				<<set $ManagedMisfortuneActive.push(_curse)>>
			<</link>><br>
		<<else>>
			You are affected by Curse _curse.name stored in the marbles.<br>
			<<set _text = "Deactivate stored " + _curse.name + " Curse">>
			<<link _text "Managed Misfortune Use">>
				<<RemoveCurse _curse>>
			<</link>><br>
		<</if>>
	<</capture>>
<</for>>

<<back>>
:: Ring of the Devourer Use [nobr noreturn]
<<set _i = 0>>
Which Relic would you like to devour with your Ring?<br><br>

<<for _relic range $ownedRelics>>
	<<capture _i _relic>>
		<<if _relic.name != "Perpetual Repose" && _relic.name != "Ring of the Devourer">>
			<<link _relic.name "Use Items and Relics">>
				<<set $ownedRelics.deleteAt(_i)>>
				<<set $lostRelics.push(_relic)>>
				<<set $devouredRelics.push(_relic)>>
			<</link>><br>
		<</if>>
	<</capture>>
	<<set _i++>>
<</for>><br>
<<back>>

:: Ward Water Drink

How many bottles of Ward Water would you like to drink today? You currently have <<print $hexflame - 9>> jinxed flame counters and any excess Ward Water you drink above that amount will be wasted.

<<textbox "$temp" "1">>

[[Continue|Ward Water Drink 2]]

:: Ward Water Drink 2
<<nobr>>
<<set $temp = parseInt($temp)>>
<<if !($temp > 0)>>
	<<set $temp = 0>>
<</if>>
<<set $hexflame = Math.max($hexflame - $temp, 9)>>
<</nobr>>
You just drank $temp bottles of Ward Water.<<if $temp > 3 >> It was quite an effort to drink it all, but you managed to do it!<</if>>

You now have <<print $hexflame - 9>> jinxed flame counters and $items[25].count Ward Waters remaining.

[[Continue exploring the layer|$hubReturn]]

:: Adjust bullets [noreturn]
<<set $temp = 0>>How many bullets would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$items[20].count += (parseInt($temp))]]
<<back>>

:: Kin Shifter Use
[img[setup.ImagePath+"Relics/kinshifter.png"]]

A glob of thick, putty-like slime. the face appears decorative. When touched to another Relic that you own, a portion of the slime will break off and reshape itself into a perfect replica of that Relic, gaining all of its characteristics, abilities, value, and weight permanently. It cannot shift back to its original form. The amount that breaks off is dependent on the perceived value of the Relic, which can be measured with its dubloon value. The slime contains 70 dubloons worth of morphing power, and can be used on multiple Relics with that total value or less - however, the last Relic that is duplicated can put you over the 70 dubloon total, so long as that Relic is worth 70 dubloons or less. This Relic can also copy Relics worth over 70 dubloons, but in that case that Relic would have to be the sole Relic that you copy.

Some examples: A : (20)->(30)->(20) = total 70, done.

B: (20)->(30)->(40) = total 90, over 70, done.

C: (120) done, only possible configuration for duplicating a Relic worth this much.

<<nobr>>
<<if !$relic38.copiedValue>><<set $relic38.copiedValue = 0>><</if>>
The current total value of Relics you have copied is $relic38.copiedValue dubloons.<br><br>

<<if $relic38.copiedValue < 70>>
	Please choose the Relic you would like to copy:<br>
	<<for _relic range $ownedRelics>>
		<<if _relic.name !== "Kin Shifter" && (!$relic38.copiedValue || _relic.value <= 70)>>
			<<capture _relic>>
				<<if _relic.name === "Managed Misfortune">>
					_relic.name for _relic.value dubloons [[Copy|Kin Shifter Use][$ownedRelics.push(_relic), $relic38.copiedValue += _relic.value, $ManagedMisfortuneMax += 2]]<br>
				<<else>>
					_relic.name for _relic.value dubloons [[Copy|Kin Shifter Use][$ownedRelics.push(_relic), $relic38.copiedValue += _relic.value]]<br>
				<</if>>
			<</capture>>
		<</if>>
	<</for>>
<<else>>
	<<set setup.loseRelic('Kin Shifter')>>
	As you touched the final Relic to the Kin Shifter, the last of the goo was used up and your Relic was copied. The cute eyes faded as the slime transmuted into the new Relic you chose.<br><br>

	Now that you have become better equipped, you can continue your journey.<br>
<</if>>
<</nobr>>

[[Return to exploring|$hubReturn]]

:: Daedalus Mechanism Select [noreturn]

As you tie the sash around your waist the mechanism on your back starts to flicker, you feel the mechanical contraption connecting with your mind and body and try to concentrate to give mechanism the apparent shape you wish.

Please enter what kind of wings the Daedalus mechanism should mimic:

<<textbox "$relic73.variation" "angel" "Use Items and Relics">>


:: Balloon Inn [balloon nobr]
[img[setup.ImagePath+'Surface/Inn Room.png']]
<br><br>

<<include "Inn Storage">>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Workshop [balloon]
[img[setup.ImagePath+$items[19].image]]

You can use the balloon to send requests and Relics back to Outset Town. You can send up any Relics you have along with what you want done to them and the people at the workshop can reply and send back any modified Relics you want.

<<nobr>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
	<<if $ownedRelics[$i].name === "Purity Tree Plank">>

		<br>Would you like to fashion your Purity Wood Planks into protective gear for a value of +25 corruption each?<br>

		[[Use Purity Wood Plank|Balloon Workshop][$ownedRelics.deleteAt($i), $corruption += 25]]<br>
	<</if>>

	<<if $ownedRelics[$i].name === "RÃ¸mer Stones" && $warmCloth === 0 && $coolCloth === 0>>
	<br>You muse over what you can do with the RÃ¸mer Stones, taking advantage over their ability for limitless small-scale heating or cooling.<br><br>
	You can either buy some winter clothes for 30 dubloons to craft self-warming winter gear, or you could buy some light summer clothing for 25 dubloons to craft some cooling summer clothes.<br>
		[[Use the RÃ¸mer Stones for self-warming winter gear|Balloon Workshop][$ownedRelics.deleteAt($i), $items[22].count = 1, $dubloons -=30, $warmCloth=1]]<br>
		[[Use the RÃ¸mer Stones for self-cooling summer gear|Balloon Workshop][$ownedRelics.deleteAt($i), $items[23].count = 1, $dubloons -=25, $coolCloth=1]]<br>
	<</if>>
	<<if $ownedRelics[$i].name === "Brave Vector" && $slingshot === 0>>
		<br>The Brave Vector seems like it should have some application as a weapon, but it turns out that it is exceedingly difficult to use a bent pipe like that as a gun substitute. Luckily, with the help of the resident Relic experts, you can change the form of the Brave Vector to a much more useful one. They seem to recommend a sort of metal slingshot design, which should be able to function like a gun, but will be able to use anything of approximately the correct size as ammo. <br>
		<br>The raw materials for this are relatively cheap, letting you reshape the Brave Vector for only 10 dubloons.<br>
		[[Reshape the Brave Vector into a powerful slingshot|Balloon Workshop][$slingshot = 1, $dubloon -= 10]]<br>
	<</if>>
	<<if $ownedRelics[$i].name === "Joyous Sunder" && $joyousSword === 0>>
		<br>The Joyous Sunder is an incredibly powerful offensive tool, but it is limited by its form as a small knife. Luckily, with the help of the local Relic Engineers, you can reshape this Relic into a true sword that an expert swordsman would feel comfortable using. A weapon like that would be literally unstoppable by any enemy that can be defeated by physical attacks and does not disable the user before they can get close enough to use it. This would be most useful in the hands of someone like Khemia, letting him defeat powerful beasts from the depths of the Abyss without fear of injury himself. The materials to forge a sword from the Joyous Sunder would cost you 20 dubloons.<br>
		[[Reshape the Joyous Sunder into a true sword|Balloon Workshop][$joyousSword = 1, $dubloon -= 20]]<br>
	<</if>>
	<</capture>>
<</for>>
<</nobr>>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Admin [balloon]
You can send a request to the Outset Town Administration. There seem to be a number of services that are provided here for people who need them, including managing debts and changing your legal name.

For a small fee of 10 dubloons, you can change your legal name from $mc.name to whatever you wish.
[[Change your name|Balloon Name]]

<<if $hiredCompanions.some(e => e.id === setup.companionIds.cloud)>>
You can use your companion Cloud's connections to borrow some money, but you will need to pay back an extra 20% as interest before you settle down for any voluntary habitation option.
[[Borrow more money|Balloon debt1]]
<</if>>
<<if $debt > 0>>
You currently have $debt dubloons of debt, which you can pay off now to allow yourself to settle down at a habitation option.
[[Pay off your debt|Balloon debt2]]
<</if>>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Name [balloon]
<<set $dubloons -= 10>>

The balloon sends down some surprisingly concise forms where you can fill out your new name, changing it for all official purposes.

What is your new name?
<<textbox "$mc.name" "Nana" "Commerce Balloon">>


:: Balloon debt1 [surface]

Cloud is willing to allow you to use his connections to fund your expedition, as long as you can pay back the loan after you're done, with interest of course.

Unfortunately, he'll only let you borrow up to 200 dubloons unless you spend them immediately. You can go into negative dubloons while on the surface, and if you do, you will enter debt when you enter the Abyss. Otherwise, you can borrow up to 200 dubloons at once here.

You have currently borrowed $tempDebt of your 200 dubloons of extra debt.

How many dubloons would you like to borrow?
<<textbox "$temp" "">>

[[Confirm|Commerce Balloon][$dubloons += Math.min(parseInt($temp), (200 - $tempDebt)), $debt += parseInt(Math.round(Math.min(parseInt($temp), (200 - $tempDebt)) * 1.2)), $tempDebt += Math.min(parseInt($temp), (200 - $tempDebt))]]
<<back>>


:: Balloon debt2 [surface]

In order to finally settle down at an ending, you must pay off your debt to Cloud's mysterious connections. You currently owe $debt dubloons of debt to them.

How many dubloons would you like to pay back?
<<textbox "$temp" "">>

[[Confirm|Commerce Balloon][$dubloons -= parseInt($temp), $debt -= parseInt($temp)]]
<<back>>


:: Curse removal widget [widget nobr]
<<widget "RemoveCurse">>
<<capture _i _j _k _targetCurse>>

<<set _targetCurse = _args[0]>>
<<set _i = $mc.events.findLastIndex(c => c.name === _targetCurse.name)>>
<<if _i !== -1>>
	<<set $mc.events.deleteAt(_i)>>
	<<set _j = $ManagedMisfortuneActive.findLastIndex(curse => curse.name === _targetCurse.name)>>
	<<if _j !== -1>>
		<<set $ManagedMisfortuneActive.deleteAt(_j)>>
	<</if>>
<</if>>

<</capture>>
<</widget>>

:: Widgets for traveling and the passage of time [widget nobr]
<<widget "WaitAtPassage">>
/*
	_args[0]: var|string    = As linkText in <<link>>. The text of the link. May contain markup.
	_args[1]: var|string    = As passageName in <<link>>. The name of the passage to go to.
	_args[2]: number|string = The number of days to wait. Expressions should be passed as a regular string.
	_args[3]: [string]      = Set expression to execute (optional).
*/
<<link _args[0] _args[1]>>
	<<print `<<set _waitTime = ${_args[2]}>>`>>
	<<if _waitTime > 0>><<set setup.startPassingTime(_args[1], _waitTime)>><</if>>
	<<if _args[3]>><<print `<<set ${_args[3]}>>`>><</if>>
<</link>>
<</widget>>

<<widget "TravelToPassage">>
/*
	_args[0]: var|string   = As linkText in <<link>>. The text of the link. May contain markup.
	_args[1]: var|string   = As passageName in <<link>>. The name of the passage to go to.
	_args[2]: var|number   = The raw, unadjusted travel time.
	_args[3]: [var|number] = Initial additive modifier (optional, can be negative).
	_args[4]: [var|number] = Initial multiplicative modifier (optional, <1 is a bonus, >1 is a penalty).
	_args[5]: [string]     = Set expression to execute (optional).
*/
<<link _args[0] _args[1]>>
	<<StartTraveling _args[2] _args[3] _args[4] _args[1]>>
	<<if _args[5]>><<print `<<set ${_args[5]}>>`>><</if>>
<</link>>
<</widget>>

<<widget "StartTraveling">>
<<capture _additiveModifier _consumptionPerDay _forPreview _inputTime _multiplicativeModifier _passageOrOutVar>>
/*
	_args[0]: var|number   = The raw, unadjusted travel time.
	_args[1]: [var|number] = Initial additive modifier (optional, can be negative).
	_args[2]: [var|number] = Initial multiplicative modifier (optional, <1 is a bonus, >1 is a penalty).
	_args[3]: [string]     = The passage name, or the output variable in preview mode (optional).
	_args[4]: ['preview']  = If set, no state is modified and the time is written to the variable in the first argument.
*/
<<set _inputTime = _args[0]>>
<<set _passageOrOutVar = _args[3] ?? passage()>>
<<set _forPreview = _args[4]>>

/* Start by computing the overall additive modifier. */
<<set _additiveModifier = _args[1] ?? 0>>

/* Apply time reduction from having Khemia with you. */
<<set _additiveModifier -= $timeRed>>

/* Apply status penalty, if any. */
<<if $status.duration > 0>>
	<<set _additiveModifier += $status.penalty>>
	<<if !_forPreview>>
		/* Decrement status duration and remove status penalty if duration is now 0. */
		<<set $status.duration -= 1>>
		<<if $status.duration < 1>>
			<<set $status.penalty = 0>>
		<</if>>
	<</if>>
<</if>>

/* Add jinxed flame count penalty unless we're on layer 6. */
<<if $currentLayer !== 6>>
	<<set _additiveModifier += Math.trunc($hexflame / 10)>>
<</if>>

/* Apply other layer-specific effects. */
<<switch $currentLayer>>
	<<case 2>>
		/* Reduce travel time if player has a cutting tool. */
		<<if setup.haveCuttingTool>>
			<<set _additiveModifier -= 1>>
		<</if>>
	<<case 3>>
		/* Reduce travel time if player has an active light source. */
		<<if setup.haveTravelLightSource>>
			<<set _additiveModifier -= 1>>
		<</if>>
		/* Apply Chlorophyll curse penalty, if any. */
		<<if $mc.hasCurse("Chlorophyll")>>
			Now that you rely on light for your metabolism, the darkness in this layer is making you sluggish.<br>
			<<set _additiveModifier += 1>>
		<</if>>
	<<case 4>>
		/* Reduce travel time if player has a heat source. */
		<<if setup.haveColdProtection>>
			<<set _additiveModifier -= 2>>
		<<elseif $torchUse === 1 && $items[9].count > 0>>
			<<set _additiveModifier -= 2>>
			<<if !_forPreview>>
				/* Decrement number of torches and stop using torches if the count is now 0. */
				<<set $items[9].count -= 1>>
				<<if $items[9].count < 1>>
					<<set $torchUse = 0>>
				<</if>>
			<</if>>
		<<elseif $mc.hasCurse("Cold Blooded")>>
			/* Apply Cold Blooded curse penalty. */
			Now that you're cold blooded you're slowed down quite a bit by the freezing temperatures on this layer.<br>
			<<set _additiveModifier += 2>>
			/* Reduce penalty if player has fur. */
			<<if $mc.skinType.includes("furred")>>
				However, your fur is somewhat protective and mitigates the effects of the cold.<br>
				<<set _additiveModifier -= 1>>
			<</if>>
		<<elseif $mc.hasCurse("Clothing Restriction C")>>
			/* Apply no clothing penalty curse penalty. */
			Walking around, practically naked, in this layer is taking a heavy toll on you. You can only barely move around at all.<br>
			<<set _additiveModifier += 2>>	
		<</if>>
	<<case 5 6>>
		/* Reduce travel time if player has a way to keep from overheating. */
		<<if setup.haveHeatProtection>>
			<<set _additiveModifier -= 1>>
		<</if>>
	<<case 7>>
		/* Reduce travel time if player has the world lock that can be used for intra layer travel */
		<<if $ownedRelics.some(e => e.name === "World's End Lock")>>
			<<set _additiveModifier -= 1>>
		<</if>>
	<<case 8>>
		/* Reduce travel time if player has the world lock that can be used for intra layer travel */
		<<if $ownedRelics.some(e => e.name === "World's End Lock")>>
			<<set _additiveModifier -= 1>>
		<</if>>
		/* Reduce travel time if player has some form of compass. */
		<<if $items[12].count || setup.haveSmartphone>>
			The comforting presence of a device that discerns north from south in this bewildering maze bolsters your confidence and allows you to navigate more efficiently.<br>
			<<set _additiveModifier -= 3>>
		<</if>>
		/* Reduce travel time if player has the Star Compass relic. */
		<<if $ownedRelics.some(e => e.name === "Star Compass")>>
			<<set _additiveModifier -= 5>>
		<</if>>
<</switch>>

<<if _relic?.name === "Granted Granite" && ($ownedRelics.some(e => e.name === "Joyous Sunder") || $ownedRelics.some(e => e.name === "Vertebra Key"))>>
	<<set _additiveModifier -= 1>>
<</if>>

/* If the additive modifier is a time reduction, apply it to the base time. */
<<if _additiveModifier < 0>>
	<<set _inputTime += _additiveModifier>>
<</if>>

/* If travel time wasn't eliminated entirely, apply multiplicative modifiers. */
<<if _inputTime > 0>>
	<<set _multiplicativeModifier = _args[2] ?? 1>>
	/* Double travel time if player has a size handicap (Colossal-able, or Minish-ish with no one to carry them). */
	<<if $SizeHandicap>>
		The burden of your inconvenient size hampers your progress, increasing your travel time.<br>
		<<set _multiplicativeModifier *= 2>>
	<</if>>
	/* Increase/decrease time by 10% for every level of physical fitness. */
	<<if $mc.HandicapMovement < 0>>
		Hindered by your physical shortcomings, your travel time increases as you struggle to keep pace.<br>
		<<set _multiplicativeModifier *= 1 - $mc.HandicapMovement / 10>>
	<<elseif $mc.HandicapMovement > 0>>
		Your exceptional physical condition is reducing your travel time.<br>
		<<set _multiplicativeModifier /= 1 + $mc.HandicapMovement / 10>>
	<</if>>

	/* Apply the multiplicative modifiers. */
	<<set _inputTime *= _multiplicativeModifier>>
	/* Adjust the travel time if the player is using energy rations. */
	<<if $useEnergyrations>>
		/* Calculate the number of energy rations consumed per day. */
		<<set _consumptionPerDay = 1>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.twin)>>
			<<set _consumptionPerDay *= 2>> /* Two mouths to feed (other companions get the effect for free). */
		<</if>>
		<<if $mc.hasCurse("Minish-ish")>>
			<<set _consumptionPerDay /= 4>> /* You eat a lot less than normal (your twin shares your curses). */
		<</if>>
		<<if $hiredCompanions.some(e => e.id === setup.companionIds.bandit) && $companionBandit.hasCurse(Minishish)>>
			<<set _consumptionPerDay += 0.25>> /* Add another small mouth for the bandit*/
		<<elseif $hiredCompanions.some(e => e.id === setup.companionIds.bandit)>>
			<<set _consumptionPerDay += 1>> /* Add another mouth for the bandit*/
		<</if>>
		/* Using energy rations halves the travel time, so we need at most half the time worth. */
		<<set _daysOfEnergyRations = Math.min(_inputTime / 2, $items[24].count / _consumptionPerDay)>>
		/* Every day with an energy ration counts for twice as much. */
		<<set _inputTime -= _daysOfEnergyRations>>
		<<if !_forPreview>>
			/* Round up the number of days of energy rations to a whole number, as GeneralTimeStats iterates per day. */
			<<set _daysOfEnergyRations = Math.ceil(_daysOfEnergyRations)>>
			/* If we used up all the energy rations we had, stop using them. */
			<<if Math.ceil(_consumptionPerDay * _daysOfEnergyRations) >= $items[24].count>>
				<<set $useEnergyrations = false>>
			<</if>>
		<</if>>
	<</if>>
<</if>>

/* If the additive modifier is a time penalty, apply it to the modified time. */
<<if _additiveModifier > 0>>
	<<set _inputTime += _additiveModifier>>
<</if>>

/* Print a message about the Aeonglass with Endless Time Relic, but only apply the bonus if we're in preview mode. */
<<if $endlessAeonglass>>
	The enhanced Aeonglass, shimmering with a timeless aura, grants you the remarkable ability to reduce your travel time by half.<br>
	<<if _forPreview>><<set _inputTime /= 2>><</if>>
<</if>>

/* Don't allow travel time to become negative. */
<<if _inputTime < 0>><<set _inputTime = 0>><</if>>

/* Round travel time to a whole number of days. */
<<set _inputTime = Math.round(_inputTime)>>

<<if !_forPreview>>
	<<if _daysOfEnergyRations && _daysOfEnergyRations > _inputTime>>
		/* Ensure all days of energy rations end up used. */
		<<set $items[24].count -= _consumptionPerDay * (_daysOfEnergyRations - _inputTime)>>
		<<set _daysOfEnergyRations = _inputTime>>
	<</if>>

	/* Actually start passing time. */
	<<if _inputTime > 0>>
		<<set setup.startPassingTime(_passageOrOutVar, _inputTime)>>
	<</if>>
<<else>>
	/* Write the adjusted time to the output variable. */
	<<print `<<set ${_passageOrOutVar} = ${_inputTime}>>`>>
<</if>>

<</capture>>
<</widget>>

<<widget "PreviewTravelTime">>
/*
	_args[0]: string       = The output variable.
	_args[1]: var|number   = The raw, unadjusted travel time.
	_args[2]: [var|number] = Initial additive modifier (optional, can be negative).
	_args[3]: [var|number] = Initial multiplicative modifier (optional, <1 is a bonus, >1 is a penalty).
*/
<<silently>>
	<<StartTraveling _args[1] _args[2] _args[3] _args[0] 'preview'>>
<</silently>>
<</widget>>

<<widget "PassTimeWithEvents">>
	<<if setup.passingTime()>><<include `"Layer" + $currentLayer + " Travel Events"`>><</if>>
<</widget>>

:: Water drop code[nobr]
<<FlaskFirst>>
<<if $items[3].count > 0 || $items[0].count > 0 || $ownedRelics.some(r => r.name === "Aquarius Ex Nihilo")>>
	<<if setup.flaskLabels[$flaskPref]==="Bottled water" || $items[3].count <= 0 || !$ownedRelics.some(r => r.name === "Aquarius Ex Nihilo")>>
		<<set $items[0].count -= 1 >>
	<<elseif setup.flaskLabels[$flaskPref] !== 'Aquarius Ex Nihilo'>>
		<<set $items[3].count -= 1  >>
		<<set $items[2].count += 1  >>
		<<set $flaskMatrix[$flaskPref] -= 1  >>
	<</if>>
<<else>>
	<<set $items[0].count -= 1 >>
<</if>>

:: Flask Order[nobr noreturn]
<<FlaskFirst>>
Here you can organize your drinking water to choose what you will drink first.<br><br>

You will first drink:<br>
<<print setup.flaskLabels[$flaskPref]>> ($flaskMatrix[$flaskPref] remaining)

<<if $flaskMatrixOrderAvailable.length>1 >>
	<<for _i=0; _i<$flaskMatrixOrderAvailable.length; _i++ >>
		<<capture _i>>
		<<set _temp = $flaskMatrixOrderAvailable[_i]>>
		<</capture>>

		<<if _i===1>>
			<br><br>Afterwards the order in which you will drink your drinking rations will be:
		<</if>>
		<<if _i>0>>
		<br><<print setup.flaskLabels[_temp]>> ($flaskMatrix[_temp] remaining)
		<</if>>
		<<if !$switchFlask>>
			<<capture _i>>
			[[Select to switch|Flask Order][$switchFlask=true, $temp0 = $flaskMatrixOrderAvailable[_i], $temp1=$flaskMatrixOrder[$temp0] ]]
			<</capture>>
		<<elseif $temp0 !== $flaskMatrixOrderAvailable[_i]>>
			<<capture _i>>
			[[Switch with|Flask Order][$switchFlask=false, _temp2 = $flaskMatrixOrderAvailable[_i], _temp3=$flaskMatrixOrder[_temp2], $flaskMatrixOrder[$temp0]=_temp3, $flaskMatrixOrder[_temp2]=$temp1 ]]
			<</capture>>
		<</if>>
	<</for>>
<</if>>
<br><br>
<<return>>


:: CampCode [nobr]
<<PassTimeWithEvents>>
<<if !setup.passingTime()>>
	<<checkTime>>
	You can set up camp and rest here for a while before continuing your journey. You still need to eat and drink and the layer's threats continue to loom over you even as you rest. This won't accomplish much on its own, but if you'd like to spend some time sampling the local cuisine or studying this layer's threats, then this could be a good way to do that.<br><br>

	How many days would you like to rest here?<br>
	<<textbox "_campTime" "0">><br>
	<<WaitAtPassage 'Set up camp and wait' `passage()` 'Math.max(parseInt(_campTime, 10) || 0, 0)'>><br><br>

	<<link "Return to exploring the layer without waiting" $hubReturn>><</link>>
<</if>>


:: Hijinks Ensue Scenes [nobr]

<<randomSexSelect>>
<<set _temp = random(0,100)>>
<<if $hiredCompanions.length > 0>>
	<br><br>
	<<if _selection === "Oral Dom">>
	<<include "Hijinks Oral Dom">>
	<<if !setup.isPregnant(_handle) && $mc.penisCor > 0 && _handle.extraWombs.includes('throat') && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<elseif _selection === "Oral Sub">>
	<<include "Hijinks Oral Sub">>
	<<if $mc.extraWombs.includes('throat') && _handle.penisCor>0 >>
		<<PregCheck>>
	<</if>>
	/*<<elseif _selection === "DP Sub">>

	<<if !_handle.hasCurse("Absolute Birth Control")>>
		<<PregCheck>>
	<</if>>
	<<if $mc.womb > 1 && $mc.extraWombs.includes('anus') && !_handle.hasCurse("Absolute Birth Control")>>
		<<PregCheck>>
	<</if>>
	<<elseif _selection === "DP Dom">>

	<<if !setup.isPregnant(_handle) && _handle.womb > 0 && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<if _handle.extraWombs.includes('anus') && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<elseif _selection === "Anal Sub">>

	<<if $mc.extraWombs.includes('anus') && !_handle.hasCurse("Absolute Birth Control")>>
		<<PregCheck>>
	<</if>>
	<<elseif _selection === "Anal Dom">>

	<<if !setup.isPregnant(_handle) && _handle.extraWombs.includes('anus') && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<elseif _selection === "Regular Sub">>

	<<if !_handle.hasCurse("Absolute Birth Control")>>
		<<PregCheck>>
	<</if>>
	<<elseif _selection === "Regular Dom">>

	<<if !setup.isPregnant(_handle) && _handle.womb > 0 && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<elseif _selection === "Regular Alt Sub">>

	<<if !setup.isPregnant(_handle) && _handle.womb > 0 && (_temp < 20 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>	
	<<elseif _selection === "Regular Alt Dom">>

	<<if $mc.womb > 0 && !_handle.hasCurse("Absolute Birth Control")>>
		<<PregCheck>>
	<</if>>
	<<elseif _selection === "Boobjob Dom">>

	<<if !setup.isPregnant(_handle) && _handle.womb > 0 && _handle.hasCurse("Absolute Pregnancy")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>
	<<elseif _selection === "Boobjob Sub">>

	<<if $mc.hasCurse("Absolute Pregnancy")>>
		<<PregCheck>>
	<</if>>
	<<elseif _selection === "Sex Scissor Sub/Dom">>

	<<if _handle.penisCor> 0 && !_handle.hasCurse("Absolute Birth Control")>>
		<<set $pregChance /= 10>>
		<<PregCheck>>
	<</if>>
	<<if !setup.isPregnant(_handle) && _handle.womb > 0 && (_temp < 2 || _handle.hasCurse("Absolute Pregnancy")) && !_handle.hasCurse("Absolute Birth Control") && !$mc.hasCurse("Absolute Birth Control")>>
		<<set setup.setConsideredPregnant(_handle)>>
	<</if>>*/
	<</if>>
<</if>>
<br>

:: Hijinks Oral Dom [nobr]
Exhausted from a day of exploring the Abyss, you settle down for a warm, comforting meal.
<br><br>
<<say $mc>>There's nothing like a hot meal after a long day. Can you pass me my plate, please?<</say>><br>
<<say _handle>> Sure thing, no problem!<</say>><br>
As _handle.name attempts to hand the plate to you, you accidentally knock it from <<if _handle.sex==="male">>his<<else>>her<</if>> hands. Scalding hot grub splatters all over your lap.<br><br>
<<say $mc>>Ouch! That's hot!<</say>><br>
In a frantic effort to help, _handle.name crouches down and starts blowing on your crotch to cool the burn. Panicking, you struggle to peel off the blistering, sticky clothes as fast as possible.<br><br>
<<say _handle>> Wait, stop! I'm right here!<</say>><br>
_handle.name tries to stop you from undressing in front of <<if _handle.sex==="male">>him<<else>>her<</if>> by grabbing the clothes.<br><br>
<<say $mc>> Let go! It's burning me!<</say>><br>
As you flail about to escape the searing heat, you both topple over. Suddenly, you find yourself on the ground with _handle's lips <<if _handle.penisCor > 2 && _handle.vagina === 0>>around your cock. <<elseif _handle.penisCor <= 2 && _handle.vagina > 0>>on your pussy.<</if>><br><br>
<<say _handle>> Mmph!<</say>><br>
_handle.name struggles to free <<if _handle.sex==="male">>himself<<else>>herself<</if>>, but by the time they get up, you feel teased to the edge of your willpower.<br><br>

After a few awkward minutes, you both continue your journey. What a ludicrous thing to happen!<br>

:: Hijinks Oral Sub [nobr]
Exhausted from a day of exploring the Abyss, you settle down for a warm, comforting meal.
<br><br>
<<say _handle>>There's nothing like a hot meal after a long day. Can you pass me my plate, please?<</say>><br>
<<say $mc>> Sure thing, no problem!<</say>><br>
As you attempt to hand the plate to _handle.name, it slips from your grasp, dousing <<if _handle.sex==="male">>his<<else>>her<</if>> lap in scalding hot grub.<br><br>
<<say _handle>>Ouch! That's hot!<</say>><br>
You scramble down quickly, trying to help by blowing on <<if _handle.sex==="male">>his<<else>>her<</if>> crotch to cool the burn. Panicked, _handle.name struggles to remove the blistering, sticky clothes as fast as possible.<br><br>
<<say $mc>> Wait, stop! I'm right here!<</say>><br>
You try to stop _handle.name from undressing in front of you by grabbing the clothes.<br><br>
<<say _handle>> Let go! It's burning me!<</say>><br>
As <<if _handle.sex==="male">>he<<else>>she<</if>> flails about to escape the searing heat, you both topple over. Suddenly, you find yourself on your back with your lips <<if _handle.penisCor > 2 && _handle.vagina === 0>>around _handle.name's cock. <<elseif _handle.penisCor <= 2 && _handle.vagina > 0>>on _handle.name's pussy.<</if>><br><br>
<<say $mc>> Mmph!<</say>><br>
You struggle to free yourself, but _handle.name gasps as <<if _handle.sex==="male">>his<<else>>her<</if>> arousal mounts. As you get off, you can tell <<if _handle.sex==="male">>he<<else>>she<</if>> is hot and bothered, in more way than one.<br><br>

After a few awkward minutes, you both continue your journey. What a ludicrous thing to happen!<br>

:: Lambent Use [nobr]
[img[setup.ImagePath + $relic75.pic]]

<br>You have summoned a spirit. What material would you like to use to shape the golem your summoned spirit will possess?<br><br>

<<set _type = 'clay'>>
<<set _sex = 'male'>>
<<if $currentLayer === 4>>
	<<radiobutton "_type" "snow" checked>> Craft a snowman here and see if it comes to life.<br>
<<elseif $currentLayer === 8>>
	<<radiobutton "_type" "doll" checked>> Utilize the lifeless doll-like figures that occasionally appear in the hallways.<br>
<<elseif $currentLayer === 9>>
	<<radiobutton "_type" "water" checked>> Perhaps the surrounding water could be harnessed? You can certainly try.<br>
<<else>>
	<<radiobutton "_type" "clay" checked>> Mold a golem from the available dirt, clay, and rocks.<br>
<</if>>
<<if setup.skeletonRemains.count > 0 >>
	<<radiobutton "_type" "skeleton">> Fashion a golem from the skeletal remains in your possession.<br>
<</if>>
<br>
Which gender will the soul you summon to inhabit the golem possess?<br>
<<radiobutton "_sex" "male" checked>> Male<br>
<<radiobutton "_sex" "female" >> Female<br>
<br>
<<link "Crafted your golem and let the summoned spirit bring it to life" "Use Items and Relics">>
	<<createGolem _sex _type>>
<</link>>	

:: Drop Items Menu [nobr noreturn]
<<CarryAdjust>>
<<set $flaskID = -1>>
<<if $DaedalusFly>>
	Your personal carrying capacity is only <<print $carryWeight.toRounded(1)>> kg now that you are flying. If you went back to walking, you would be able carry double that amount.
<<else>>
	Your personal carrying capacity is <<print $carryWeight.toRounded(1)>> kg.
<</if>>
<br>
Your team has a total carrying capacity of <<print $totalCarry.toRounded(1)>> kg.<br>
Your team is currently carrying <<print setup.carriedWeight.toRounded(1)>> kg.<br>

<br>Items:<br>

<<for _k, _item range $items>>
	<<capture _k _item>>
		<<if _item.name === 'Filled Flask'>>
			<<if _item.count > 0>>
				<<FlaskFirst>>
				<<for _temp range $flaskMatrixOrderAvailable>>
					<<if setup.flaskLabels[_temp] !== 'Bottled water'>>
						<<capture _temp>>
							<<if $flaskMatrix[_temp] > 1>>
								<<print `&nbsp; ${$flaskMatrix[_temp]} Ã— ${setup.flaskLabels[_temp]}`>>
								<<print `(${(_item.weight * $flaskMatrix[_temp]).toRounded(1)} kg) |`>>
								[[Empty|Drop Item Count][$temp = _k, $flaskID = _temp]]<br>
							<<elseif $flaskMatrix[_temp] === 1>>
								<<print `&nbsp; 1 Ã— ${setup.flaskLabels[_temp]} (${_item.weight.toRounded(1)} kg) |`>>
								[[Empty|Drop Items Menu][_item.count -= 1, setup.item('Empty Flask').count += 1, $flaskMatrix[_temp] -= 1]]
								<<print `(net emptying gain = ${(_item.weight - $items[2].weight).toRounded(1)} kg)`>><br>
							<</if>>
						<</capture>>
					<</if>>
				<</for>>
			<</if>>
		<<elseif _item.name === 'Self-Warming Clothes' && _item.count > 0>>
			&nbsp; 1 Ã— [[_item.name|Item Info][$temp = _k]] (_item.weight kg) | [[Drop|Drop Items Menu][_item.count -= 1, $warmCloth = 0]]<br>
		<<elseif _item.name === 'Self-Cooling Clothes' && _item.count > 0>>
			&nbsp; 1 Ã— [[_item.name|Item Info][$temp = _k]] (_item.weight kg) | [[Drop|Drop Items Menu][_item.count -= 1, $coolCloth = 0]]<br>
		<<elseif _item.count > 1 || _item.count < 0>>
			<<print `&nbsp; ${_item.count} Ã—`>>
			[[_item.name|Item Info][$temp = _k]]
			<<print `(${(_item.weight * _item.count).toRounded(1)} kg) |`>>
			[[Drop|Drop Item Count][$temp = _k]]<br>
		<<elseif _item.count === 1>>
			&nbsp; 1 Ã— [[_item.name|Item Info][$temp = _k]] (_item.weight kg) | [[Drop|Drop Items Menu][_item.count -= 1]]<br>
		<</if>>
	<</capture>>
<</for>>

<<if $ownedRelics.length>><br>Relics:<br><</if>>

<<for _i, _relic range $ownedRelics>>
	<<capture _i _relic>>
		<<set _linkText = `Hand over ${_relic.name} worth ${setup.sellValue(_relic)} dubloons`>>
		/* Add a bit of indentation: */ &nbsp;
		<<switch _relic.name>>
			<<case "Creepy Doll">>
				<<if $creepydoll.affec > 5>>
					You can't seem to part ways with the Creepy Doll...
				<<else>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic)]]
				<</if>>
			<<case "World Stone">>
				<<if $LilyPromise>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic), setup.modAffection('Lily', -5)]]
					You promised Lily she could use the World Stone, dropping it now will surely disappoint her greatly.
				<<else>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic)]]
				<</if>>
			<<case "Everhevea">>
				<<if setup.item('Empty Flask').count >= 2>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic), setup.item('Empty Flask').count -= 2]]
				<<else>>
					You need to empty the Everhevea to drop it (have at least two empty flasks in your inventory).
				<</if>>
			<<case "Moonwatcher">>
				<<if $BionicEye>>
					_relic.name: You can't drop Relics that have become part of your body.
				<<else>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic)]]
				<</if>>
			<<case "Glory's Grasp">>
				<<if $BionicArm>>
					_relic.name: You can't drop Relics that have become part of your body.
				<<else>>
					[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic)]]
				<</if>>
			<<default>>
				[[_relic.name|Relic Info][$temp = _i]] (_relic.weight kg) | [[Drop|Drop Items Menu][setup.loseRelic(_relic)]]
		<</switch>>
		<br>
	<</capture>>
<</for>>

<br>

[[Return|$hubReturn]]

:: Drop Item Count [nobr noreturn]
<<set _item = $items[$temp]>>
<<if $flaskID === -1>>
	You have _item.count _item.name, each weighing _item.weight kg,
	for a total of <<print (_item.count * _item.weight).toRounded(1)>> kg.<br>
	Select the amount you want to drop:<br><br>

	<<textbox '_input' '0'>>

	<<link 'Drop' 'Drop Items Menu'>>
		<<set _parsed = parseInt(_input, 10) || 0>>
		<<if _item.count >= 0>>
			<<set _parsed = Math.clamp(_parsed, 0, _item.count)>>
		<<else>>
			<<set _parsed = Math.clamp(_parsed, _item.count, 0)>>
		<</if>>
		<<set _item.count -= _parsed>>
	<</link>>
<<else>>
	You have $flaskMatrix[$flaskID] days worth of <<print setup.flaskLabels[$flaskID]>>, each weighing _item.weight kg,
	for a total of <<print (_item.weight * $flaskMatrix[$flaskID]).toRounded(1)>> kg.<br>
	Since an empty flask weighs $items[2].weight kg, emptying one flask will save <<print (_item.weight - $items[2].weight).toRounded(1)>> kg.<br>
	Select the amount you want to empty:<br><br>

	<<textbox '_input' '0'>>

	<<link 'Empty' 'Drop Items Menu'>>
		<<set _parsed = parseInt(_input, 10) || 0>>
		<<if $flaskMatrix[$flaskID] >= 0>>
			<<set _parsed = Math.clamp(_parsed, 0, $flaskMatrix[$flaskID])>>
		<<else>>
			<<set _parsed = Math.clamp(_parsed, $flaskMatrix[$flaskID], 0)>>
		<</if>>
		<<set setup.item('Filled Flask').count -= _parsed>>
		<<set setup.item('Empty Flask').count += _parsed>>
		<<set $flaskMatrix[$flaskID] -= _parsed>>
	<</link>>
<</if>>

:: Pulse Bloom Use

Resting comfortably in your palm is the Pulse Bloom, an unassuming yet potent crimson flower, a paradox of frail beauty and robust strength. The deep hue of the petals appears even more profound against the backdrop of your $mc.skinColor hands, an almost defiant splash of life amidst the adversity of your journey. The petals, rough yet velvety to the touch, curl inward slightly, their texture reminiscent of thick, ancient parchment that has somehow withstood the wear of time.

You look over at your companion, sleeping soundly at your camp. You've shared countless moments, hardships and triumphs, laughter and tears. The Pulse Bloom could mimic their form, their voice, their very essence. All it would take is a small amount of blood, a minor inconvenience, a slight pain for the potential gain.

<<nobr>>
<<for _i=0; _i<$hiredCompanions.length; _i++>>
	<<capture _i>>
	<<set _string1 = "Force the use of the Pulse Bloom on " + $hiredCompanions[_i].name>>
	<<set _string2 = "Ask to use the Pulse Bloom on " + $hiredCompanions[_i].name>>
	<<if $hiredCompanions[_i].id === setup.companionIds.twin>>
		[[_string1| Pulse Bloom Forced][$PulseBloomUse = "Twin"]]<br>
		[[_string2| Pulse Bloom Asked][$PulseBloomUse = "Twin"]]<br>
	<<elseif $hiredCompanions[_i].id !== setup.companionIds.golem>>
		[[_string1| Pulse Bloom Forced][$PulseBloomUse = $hiredCompanions[_i].name]]<br>
		[[_string2| Pulse Bloom Asked][$PulseBloomUse = $hiredCompanions[_i].name]]<br>
	<</if>>
	<</capture>>
<</for>>
<</nobr>>

<<back>>

:: Inhumanity Warning

<b>This Curse will cause other people to view you as less human.</b>

:: Silk Twister Rope
<<PassTimeWithEvents>>\
<<if !setup.passingTime()>>
As you hold the Silk Twister in your hand, its surface smooth and cool to the touch, you run it absentmindedly through your hair. A subtle power hums through the air, almost imperceptible, as each strand begins to grow, flowing like liquid silk from your scalp.

You focus your thoughts on the length and texture you desire, imagining a strong, pliable rope. The Twister responds to your mental commands, the hair lengthening, thickening, strands intertwining as they extend. It's mesmerizing to watch as your hair transforms, as if a master weaver were spinning a tale from your hair.

Hours slip by, unnoticed, as you work, the rhythmic motions of the Twister in your hair almost meditative. Your once-tangled locks are becoming something entirely new, orderly and uniform. You guide the Twister, allowing it to segment and braid, manipulating the growing length into a complex plait, reinforcing it to bear weight and strain.

The task is monotonous, and your attention ebbs and flows with the passing hours. Doubts whisper at the edge of your concentration, causing occasional slips in the Twister's rhythm. Each mistake, however, is patiently corrected, the device surprisingly forgiving, its magic undeterred by your lapses.

Finally, as you tie off the end, you can't help but feel a surge of pride. The rope lies coiled at your feet, a full day's labor, a testament to the Silk Twister's power. It's sturdy, reliable, and though it came from you, it promises to be a useful took in the depths of The Abyss.

You pack the newly made rope carefully, ready for whatever challenges lie ahead. The Silk Twister, once again a simple comb, rests in your pocket, its job complete â€” for now.

[[Return|$hubReturn][$items[11].count +=1]]
<</if>>
