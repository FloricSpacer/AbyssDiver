:: UpdateAttributes [widget nobr]
<<widget "UpdateAttributes">>
<<capture
	_aDay
	_aMonth
	_aYear
	_assetMod
	_boxShadowColor
	_boxShadowOpacity
	_eternalYouthTime
	_event
	_eventAge
	_eventVariation
	_fullyGrownAge
	_genderlvl
	_handle
	_lastBirth
	_logName
	_name
	_newTime
	_oldTime
	_pulseBloomInUse
	_robustBreasts
	_wombEvents
>>
	<<for _handle range $hiredCompanions.concat($mc)>>
		<<set _name = _handle !== $companionTwin ? _handle.name : 'Twin'>>
		<<set _logName = _handle === $mc ? 'Log' : `Log${_name}`>>

		/* ------------------------------------ Compute age (real and apparent) ------------------------------------- */

		<<print `<<set _log = $Age${_logName}>>`>>

		/* The Gregorian calendar has 97 leap years in every 400 year cycle. Thus the average length of a year is */
		/* 365 + 97 / 400 = 365.2425 days, and the average length of a month is 365.2425 / 12 = 30.436875 days. By */
		/* dividing each year into 1600 * 365.2425 = 12 * 48699 = 584388 units, we can avoid floating point errors. */
		<<set _aDay = 1600, _aMonth = 48699, _aYear = 584388>>
		<<set _eternalYouthTime = $eternalYouth * _aDay>>

		<<set _oldTime = 0>>
		<<set _eventAge = _handle.age * _aYear>>
		<<for _event range _log>>
			/* If this is an age event with a recorded time, add the elapsed time to the subject's age. */
			<<if _event.variation>>
				<<set _newTime = _event.variation * _aDay>>
				/* If we're adjusting the mc who has eternal youth, only age them until they drank from the fountain. */
				<<if _handle === $mc && _newTime > _eternalYouthTime>>
					<<set _newTime = _eternalYouthTime>>
				<</if>>
				<<if _oldTime < _newTime>>
					<<set _eventAge += _newTime - _oldTime>>
				<</if>>
				<<set _oldTime = _event.variation * _aDay>>
			<</if>>
			/* Now apply the effect of the age event. */
			<<switch _event.name>>
				<<case 'Age Reduction A'>>
					<<set _eventAge = Math.min(20 * _aYear, _eventAge - 2 * _aYear)>>
				<<case 'Age Reduction B'>>
					<<set _eventAge = Math.min(20 * _aYear, _eventAge - 3 * _aYear)>>
				<<case 'Age Reduction C'>>
					<<set _eventAge = Math.min(20 * _aYear, _eventAge - 4 * _aYear)>>
				<<case 'Doll Transformation'>>
					<<set _eventAge = Math.min(17 * _aYear, _eventAge - 2 * _aYear)>>
				<<case '1 Day Food Forage Minor Impact'>> /* Layer 3 Crystalline Confectionaries with knowledge */
					<<set _eventAge -= _aMonth>>
				<<case '1 Day Food Forage Major Impact'>> /* Layer 3 Crystalline Confectionaries without knowledge */
					<<set _eventAge -= _aYear>>
			<</switch>>
		<</for>>

		/* Add any additional elapsed time to the subject's age. */
		<<set _newTime = $time * _aDay>>
		/* If we're adjusting the mc who has eternal youth, only age them until they drank from the fountain. */
		<<if _handle === $mc && _newTime > _eternalYouthTime>>
			<<set _newTime = _eternalYouthTime>>
		<</if>>
		<<if _oldTime < _newTime>>
			<<set _eventAge += _newTime - _oldTime>>
		<</if>>

		/* Update the subject's apparent age. */
		<<set _handle.appAge = _eventAge / _aYear>>

		/* Also set the subject's real age depending on the elapsed time. */
		<<set _handle.realAge = (_handle.age * _aYear + _newTime) / _aYear>>

		/* ----------------------------------- Compute apparent gender and assets ----------------------------------- */

		<<print `<<set _log = $Gender${_logName}>>`>>

		/* Set sex and asset size depending on original sex and sex changing curses. */
		<<set _robustBreasts = false>>
		<<if _log.some(event => event.name == 'Null')>>
			<<if _log.some(event => event.name == 'Futa Fun')>>
				<<if _handle.osex == 'male'>>
					<<set _handle.breasts = _handle.openis / 2>>
				<<else>>
					<<set _handle.breasts = _handle.obreasts>>
				<</if>>
				/* No penis and maybe no breasts, but asset expansion goes to breasts. */
				<<set _robustBreasts = true>>
			<<elseif _log.some(event => event.name == 'Sex Switcheroo')>>
				<<if _handle.osex == 'male'>>
					<<set _handle.breasts = _handle.openis / 2>>
				<<else>>
					<<set _handle.breasts = 0>>
					/* No penis or breasts, but asset expansion goes to breasts. */
					<<set _robustBreasts = true>>
				<</if>>
			<<else>>
				<<if _handle.osex == 'male'>>
					<<set _handle.breasts = 0>>
					/* No penis or breasts, but asset expansion goes to breasts. */
					<<set _robustBreasts = true>>
				<<else>>
					<<set _handle.breasts = _handle.obreasts>>
				<</if>>
			<</if>>
			<<set _handle.penis = 0, _handle.vagina = 0>>
			<<set _handle.sex = 'doll-like'>>
		<<elseif _log.some(event => event.name == 'Futa Fun')>>
			<<if _handle.osex == 'male'>>
				<<set _handle.breasts = _handle.openis / 2>>
				<<set _handle.penis = _handle.openis>>
			<<else>>
				<<set _handle.breasts = _handle.obreasts>>
				<<set _handle.penis = Math.max(_handle.obreasts * 2, 1)>>
			<</if>>
			<<set _handle.vagina = 1>>
			<<set _handle.sex = 'futa'>>
		<<elseif _log.some(event => event.name == 'Sex Switcheroo')>>
			<<if _handle.osex == 'male'>>
				<<set _handle.breasts = _handle.openis / 2>>
				<<set _handle.penis = 0>>
				<<set _handle.vagina = 1>>
				<<set _handle.sex = 'female'>>
			<<else>>
				<<set _handle.breasts = 0>>
				<<set _handle.penis = Math.max(_handle.obreasts * 2, 1)>>
				<<set _handle.vagina = 0>>
				<<set _handle.sex = 'male'>>
			<</if>>
		<<else>>
			<<if _handle.osex == 'male'>>
				<<set _handle.breasts = 0>>
				<<set _handle.penis = _handle.openis>>
				<<set _handle.vagina = 0>>
				<<set _handle.sex = 'male'>>
			<<else>>
				<<set _handle.breasts = _handle.obreasts>>
				<<set _handle.penis = 0>>
				<<set _handle.vagina = 1>>
				<<set _handle.sex = 'female'>>
			<</if>>
		<</if>>

		/* Number of wombs initially matches number of vaginas. */
		<<set _handle.womb = _handle.vagina>>

		/* At most one penis initially and no additional wombs. */
		<<set _handle.doublePenis = false>>
		<<set _handle.womb1 = '', _handle.womb2 = ''>>

		/* Set gender based on original gender and gender reversal curses. */
		/* Note: Not purely psychological as it has a minor effect on age-based adjustments. */
		<<set _handle.gender = _handle.ogender>>
		<<for _event range _log>>
			<<switch _event.name>>
				<<case
					'Gender Reversal A' 'Gender Reversal B' 'Gender Reversal C' 'Gender Reversal D'
					'Gender Reversal E' 'Gender Reversal F' 'Gender Reversal G'
					'1 Day Food Forage Major Impact' /* Layer 1 Blisshrooms without knowledge. */
				>>
					<<set _handle.gender += _handle.osex == 'male' ? 1 : -1>>
				<<case 'Doll Transformation'>>
					/* Note: Event can take place multiple times. */
					<<set _handle.gender += 1>>
			<</switch>>
		<</for>>

		/* Make pregnant characters more feminine. */
		<<if setup.daysConsideredPregnant(_handle) >= 90 && setup.daysUntilDue(_handle) > 0>>
			<<set _handle.gender += 1>>
		<</if>>

		/* Clamp gender between 1 (= fully masculine) and 6 (= fully feminine). */
		<<set _handle.gender = Math.clamp(_handle.gender, 1, 6)>>
		<<set _genderlvl = _handle.gender - 1>>

		/* For younger characters, compute breast size reduction according to age. */
		/* Note: Asset robustness does not affect breasts if _handle.breastsCor == 0 unless _robustBreasts == true. */
		<<set _handle.breastsCor = _handle.breasts>>
		<<set _fullyGrownAge = 18 - _genderlvl / 5>> /* 1 year lower for fully feminine characters. */
		<<if _handle.appAge < _fullyGrownAge>>
			<<set _handle.breastsCor = _handle.breasts * Math.max(1 - (_fullyGrownAge - _handle.appAge) / 10, 0)>>
		<</if>>

		/* Get all the extra womb events since it can be taken multiple times with different variations. */
		<<set _wombEvents = _log.filter(event => event.name == 'Wacky Wombs')>>

		<<for _event range _log>>
			<<switch _event.name>>
				<<case 'Shrunken Assets'>>
					/* Note: Handled in the main loop because doll transformation is sensitive to ordering. */
					<<if _handle.penis > 1>><<set _handle.penis = 1>><</if>>
					<<if _handle.breasts > 1>><<set _handle.breasts = 1>><</if>>
				<<case
					'Asset Robustness A' 'Asset Robustness B' 'Asset Robustness C' 'Asset Robustness D'
					'Asset Robustness E' 'Asset Robustness F' 'Asset Robustness G'
				>>
					/* 'A'.codePointAt(0) - 65 == 0, 'B'.codePointAt(0) - 65 == 1 etc. */
					<<set _assetMod = 2**(_event.name.at(-1).codePointAt(0) - 65)>>
					<<if _handle.penis > 0>><<set _handle.penis += _assetMod>><</if>>
					<<if _handle.breastsCor > 0 || _robustBreasts>><<set _handle.breasts += _assetMod>><</if>>
				<<case 'A Little Extra'>>
					/* Check what to double. */
					<<if _handle.vagina > 0 && _handle.penis > 0>>
						/* Character has both, so check curse variation. */
						<<if _event.variation == 'vagina'>>
							<<set _handle.vagina += 1>>
							<<set _handle.womb += 1>>
						<<elseif _event.variation == 'penis'>>
							<<set _handle.doublePenis = true>>
						<</if>>
					<<else>>
						/* Double the genitals that the character actually has. */
						<<if _handle.vagina > 0>>
							<<set _handle.vagina += 1>>
							<<set _handle.womb += 1>>
						<<elseif _handle.penis > 0>>
							<<set _handle.doublePenis = true>>
						<</if>>
					<</if>>
				<<case 'Wacky Wombs'>>
					/* Curse may be taken multiple times, so check the index to get the right variation. */
					<<set _eventVariation = _event[`variation${_wombEvents.indexOf(_event) + 1}`]>>
					<<if !_handle.womb1>>
						<<if _handle.sex == 'doll-like'>>
							<<set _handle.womb1 = ['vagina', 'urethra'].includes(_eventVariation) ? 'anus' : _eventVariation>>
						<<elseif _handle.vagina < 1>>
							<<set _handle.womb1 = _eventVariation == 'vagina' ? 'anus' : _eventVariation>>
						<<else>>
							<<set _handle.womb1 = _eventVariation>>
						<</if>>
						<<set _handle.womb += 1>>
					<<elseif !_handle.womb2>>
						<<if _handle.sex == 'doll-like'>>
							<<set _handle.womb2 = ['vagina', 'urethra'].includes(_eventVariation) ? 'anus' : _eventVariation>>
						<<elseif _handle.vagina < 1>>
							<<set _handle.womb2 = _eventVariation == 'vagina' ? 'anus' : _eventVariation>>
						<<else>>
							<<set _handle.womb2 = _eventVariation>>
						<</if>>
						<<set _handle.womb += 1>>
					<</if>>
				<<case '1 Day Water Forage Major Impact'>> /* Layer 1 Cloudpools without knowledge */
					<<if _handle.penis > 0>><<set _handle.penis += 1>><</if>>
					<<if _handle.breastsCor > 0 || _robustBreasts>><<set _handle.breasts += 1>><</if>>
				<<case 'Doll Transformation'>>
					/* Note: Event can take place multiple times. */
					<<if _handle.doublePenis>>
						<<set _handle.doublePenis = false>>
					<<elseif _handle.penis > 0>>
						<<set _handle.penis -= 1>>
						<<if _handle.penis < 1>>
							<<if _handle.vagina < 1>>
								<<if _handle.womb1 == 'urethra'>><<set _handle.womb1 = 'anus'>><</if>>
								<<if _handle.womb2 == 'urethra'>><<set _handle.womb2 = 'anus'>><</if>>
								<<set _handle.sex = 'doll-like'>>
							<<else>>
								<<set _handle.sex = 'female'>>
							<</if>>
						<</if>>
					<<elseif _handle.vagina > 0>>
						<<if _handle.appAge < 10>>
							<<set _handle.vagina -= 1>>
							<<set _handle.womb -= 1>>
							<<if _handle.vagina < 1>>
								<<if ['vagina', 'urethra'].includes(_handle.womb1)>><<set _handle.womb1 = 'anus'>><</if>>
								<<if ['vagina', 'urethra'].includes(_handle.womb2)>><<set _handle.womb2 = 'anus'>><</if>>
								<<set _handle.sex = 'doll-like'>>
							<</if>>
						<</if>>
					<</if>>
			<</switch>>
		<</for>>

		<<if _handle.womb < 1 && setup.isPregnant(_handle)>> 
			<<set setup.setNotPregnant(_handle)>> /* Can't be pregnant without a womb. */
		<</if>>

		<<if _handle.curses.some(e => e.name === 'Eggxellent')>>
			/* If character has a penis and no urethral wombs, add one. */
			<<if _handle.penis > 0 && !_wombEvents.some((event, i) => event[`variation${i + 1}`] == 'urethra')>>
				<<if !_handle.womb1>>
					<<set _handle.womb1 = 'urethra'>>
				<<elseif !_handle.womb2>>
					<<set _handle.womb2 = 'urethra'>>
				<</if>>
				<<set _handle.womb += 1>>
			<</if>>
		<</if>>

		/* Set menstruation cycle flags for mc. */
		<<if _handle === $mc>>
			<<set $menCycleFlag = _handle.womb >= 1 && !setup.isPregnant(_handle)>>
			<<if $menCycleFlag && !$menCycleT_flag>>
				<<set $menCycleT = $time - 7>>
				<<set $menCycleT_flag = true>>
				/* If mc has the Heat/Rut curse, makes the heat cycle and menstruation cycle align. */
				<<set $heatCycleT = $menCycleT>>
				<<set $heatCycleT_flag = true>>
			<</if>>
		<</if>>

		/* Update Leaky curse description. */
		<<if _handle.curses.some(e => e.name === 'Leaky')>>
			<<if _handle.vagina > 0 && _handle.penis > 0>>
				<<set $curse80.appDesc = 'Your pussy is always glistening with lubrication and your penis is always leaking precum, so it only takes a little motivation to get a real stream going down there.'>>
			<<elseif _handle.vagina > 0>>
				<<set $curse80.appDesc = 'Your pussy is always glistening with lubrication and it only takes a little motivation to get a real stream going down there.'>>
			<<elseif _handle.penis > 0>>
				<<set $curse80.appDesc = 'Your cock is always leaking precum and it only takes a little motivation to get a real stream going down there.'>>
			<<else>>
				<<set $curse80.appDesc = ''>>
			<</if>>
		<</if>>

		/* ------------------------------- Compute corrected breast size and lactation ------------------------------ */

		<<set _handle.lactation = 0>>
		<<set _handle.breastsCor = _handle.breasts>>

		/* For younger characters, compute breast size reduction according to age. */
		<<set _fullyGrownAge = 18 - _genderlvl / 5>> /* 1 year lower for fully feminine characters. */
		<<if _handle.appAge < _fullyGrownAge>>
			<<set _handle.breastsCor = _handle.breasts * Math.max(1 - (_fullyGrownAge - _handle.appAge) / 10, 0)>>
		<</if>>

		/* Boost lactation for each curse. */
		<<if _handle.curses.some(e => e.name === 'Lactation Rejuvenation A')>><<set _handle.lactation += 1>><</if>>
		<<if _handle.curses.some(e => e.name === 'Lactation Rejuvenation B')>><<set _handle.lactation += 1>><</if>>

		<<if setup.isPregnant(_handle)>>
			/* Boost breast size during pregnancy. */
			<<if 90 <= setup.daysConsideredPregnant(_handle) && setup.daysConsideredPregnant(_handle) < 120>>
				<<set _handle.breastsCor += 0.5>>
			<<elseif setup.daysConsideredPregnant(_handle) >= 120 && setup.daysUntilDue(_handle) > 0>>
				<<set _handle.breastsCor += 1>>
			<</if>>
			/* Boost lactation in the last stages of pregnancy. */
			<<if 240 <= setup.daysConsideredPregnant(_handle) && setup.daysConsideredPregnant(_handle) < 270>>
				<<set _handle.lactation += 1>>
			<<elseif setup.daysConsideredPregnant(_handle) >= 270 && setup.daysUntilDue(_handle) > 0>>
				<<set _handle.lactation += 2>>
			<</if>>
		<<elseif _handle === $mc>>
			<<if $menCycleFlag>>
				/* Boost breast size after day 20 of the menstruation cycle. */
				<<if $time - $menCycleT - $menCycleVar > 20>>
					<<set _handle.breastsCor += 0.5>>
				<</if>>
				/* Boost lactation and breast size after giving birth until the next menstruation cycle. */
				<<if $menCycleT - $time > 30>>
					<<set _handle.breastsCor += 1>>
					<<set _handle.lactation += 2>>
				<<elseif $menCycleT - $time > 0>>
					<<set _handle.breastsCor += 0.5>>
					<<set _handle.lactation += 1>>
				<</if>>
			<</if>>
		<<else>>
			<<print `<<set _lastBirth = $lastBirth${_name}>>`>>
			<<if _lastBirth <= $time>>
				/* Boost lactation and breast size for a while after giving birth. */
				<<if $time - _lastBirth < 30>>
					<<set _handle.breastsCor += 1>>
					<<set _handle.lactation += 2>>
				<<elseif $time - _lastBirth < 60>>
					<<set _handle.breastsCor += 0.5>>
					<<set _handle.lactation += 1>>
				<</if>>
			<</if>>
		<</if>>

		/* Maximize Lily's lactation if you're breastfeeding from her. */
		<<if _handle === $companionLily && $LilyConvoLac>>
			<<set _handle.lactation += 2>> 
		<</if>>

		<<if _handle.sex == 'doll-like'>>
			<<set _handle.lactation = 0>> /* Can't lactate without nipples! */
		<<elseif _handle.lactation > 2>>
			<<set _handle.lactation = 2>> /* Cap lactation at +2. */
		<</if>>

		/* Boost breast size in accordance with lactation. */
		<<set _handle.breastsCor += _handle.lactation>>

		<<if _handle.curses.some(e => e.name === 'Double Pepperoni') && _handle.breastsCor < 1>>
			<<set _handle.breastsCor += 1>> /* You can't look entirely flat with such puffy nipples. */
		<</if>>

		/* Now set the label depending on the corrected breast size. */
		<<if _handle.breastsCor < 1>>
			<<set _handle.breastsLabel = 'flat'>>
		<<elseif _handle.breastsCor < 2>>
			<<set _handle.breastsLabel = 'AA'>>
		<<elseif _handle.breastsCor >= 20>>
			<<set _handle.breastsLabel = 'S'>> /* Max supported label. */
		<<elseif !isFinite(_handle.breastsCor)>>
			/* Shouldn't happen, but prevent it from causing problems. */
			<<set _handle.breastsLabel = 'immeasurable'>>
		<<else>>
			/* String.fromCodePoint(63 + 2) == 'A', String.fromCodePoint(63 + 3) == 'B' etc. */
			<<set _handle.breastsLabel = String.fromCodePoint(63 + Math.floor(_handle.breastsCor))>>
		<</if>>

		/* -------------------------------------- Compute corrected penis size -------------------------------------- */

		<<set _handle.penisCor = _handle.penis>>
		<<if _handle.penis > 0>>
			/* For younger characters, compute penis size reduction according to age. */
			<<set _fullyGrownAge = 16 - _genderlvl / 5>> /* 1 year lower for fully feminine characters. */
			<<if _handle.appAge < _fullyGrownAge>>
				<<set _handle.penisCor = _handle.penis * Math.max(1 - (_fullyGrownAge - _handle.appAge) / 12, 1)>>
			<</if>>

			<<if _handle.curses.some(e => e.name === 'Colossal-able')>>
				<<set _handle.penisCor *= 70>>
			<</if>>

			<<if _handle.curses.some(e => e.name === 'Minish-ish')>>
				<<set _handle.penisCor /= 10>>
			<</if>>
		<</if>>

		/* ---------------------------------------- Compute corrected height ---------------------------------------- */

		<<print `<<set _log = $Height${_logName}>>`>>

		<<set _height_change = 0>>
		<<for _event range _log>>
			<<switch _event.name>>
				<<case 'Dizzying Heights'>>
					<<set _height_change += 5 * $HeightIncrease>>
				<<case '1 Day Food Forage Major Impact'>> /* Layer 4 Flairabou without knowledge */
					<<set _height_change += 3 * $HeightIncrease>>
				<<case '1 Day Food Forage Minor Impact'>> /* Layer 4 Flairabou with knowledge */
					<<set _height_change += 0.5 * $HeightIncrease>>
			<</switch>>
		<</for>>

		<<if _log.some(e => e.name === 'Colossal-able')>>
			<<set _height_change = _handle.oheight * 70 - _handle.oheight>>
			<<set $SizeHandicap = 1>>
		<<elseif _log.some(e => e.name === 'Minish-ish')>>
			<<set _height_change = _handle.oheight / 10 - _handle.oheight>>
			<<set $SizeHandicap = $hiredCompanions.length < 1 ? 1 : 0>>
		<</if>>

		/* Change in height with genderlevel changes and height increases/decreases; it is modeled such that */
		/* 5 cm is always 5 cm with respect to your starting height and irrespective of starting gender.     */
		<<set _height_adult = 
			_handle.oheight * (1 - 0.01525 * (_genderlvl - (_handle.osex == 'female' ? 5 : 0))) +
			_height_change  * (1 - 0.01525 * (_handle.osex == 'female' ? 5 : 0))
		>>

		<<set _x = 18 - _handle.appAge>>

		<<if _x <= 0.2 * _genderlvl>>
			<<set _handle.heightCor = _height_adult>>
		<<elseif 0.2 * _genderlvl < _x && _x <= 6>>
			/* Puberty phase: It shifts for females as theirs ends earlier; for simplicity */
			/* I assumed the start is the same regardless although this is not entirely    */
			/* correct. I used a polynomial here to simulate the 'reverse growth spurt'.   */
			<<set _x_rel = _x - 0.2 * _genderlvl>>
			<<set _handle.heightCor = _height_adult * (1 -
				( 4.70611e-3 - 8.1433e-4 * _genderlvl) * _x_rel -
				( 1.1049e-4  - 1.140e-5  * _genderlvl) * _x_rel**2 -
				( 1.6698e-3  - 1.3722e-4 * _genderlvl) * _x_rel**3 -
				(-1.7701e-4  + 2.114e-5  * _genderlvl) * _x_rel**4
			)>>
		<<elseif 6 < _x && _x <= 15>>
			/* The second phase of linear growth or decline, it's a decent approximation without making things too     */
			/* complicated. It ends at age 3 (originally 4, but changed it to not break the rest of the code). The     */
			/* calculation for the puberty growth spurt is in here to provide a starting point for the linear decline. */
			<<set _x_rel = 6 - 0.2 * _genderlvl>>
			<<set _handle.heightCor = _height_adult * (1 -
				( 4.70611e-3 - 8.1433e-4 * _genderlvl) * _x_rel -
				( 1.1049e-4  - 1.140e-5  * _genderlvl) * _x_rel**2 -
				( 1.6698e-3  - 1.3722e-4 * _genderlvl) * _x_rel**3 -
				(-1.7701e-4  + 2.114e-5  * _genderlvl) * _x_rel**4 -
				(0.033 + 0.0009 * _genderlvl) * (_x - 6)
			)>>
		<</if>>

		/* ---------------------------------------- Compute corrected libido ---------------------------------------- */

		<<print `<<set _log = $Libido${_logName}>>`>>

		/* Initialize libido and sub/dom leaning. */
		<<set _handle.libido = 2, _handle.subdom = 0>>

		/* Reset lowered standards. */
		<<if _handle === $mc>><<set $standardsLower = 0>><</if>>

		<<for _event range _log>>
			<<switch _event.name>>
				<<case
					'Libido Reinforcement A' 'Libido Reinforcement B' 'Libido Reinforcement C' 'Libido Reinforcement D'
					'Libido Reinforcement E' 'Libido Reinforcement F' 'Libido Reinforcement G'
					'1 Day Food Forage Major Impact' /* Layer 2 unripe flanberries */
				>>
					<<set _handle.libido += 1>>
				<<case '1 Day Food Forage Minor Impact'>> /* Layer 8 Bedlam's Banquet */
					<<if _handle === $mc>>
						<<set $standardsLower += 1>>
					<</if>>
				<<case 'DoM' 'Submissiveness Rectification A' 'Submissiveness Rectification B'>>
					<<set _handle.subdom += 1>>
				<<case 'DoS' 'Power Dom'>>
					<<set _handle.subdom -= 1>>
			<</switch>>
		<</for>>
		
		/* Apply player specific effects. */
		<<if _handle === $mc>>
			/* Boost libido if ripe flanberries from layer 2 were eaten within the last day. */
			<<if $lastFlan !== undefined && $time < $lastFlan + 1>><<set _handle.libido += 1>><</if>>

			<<if $menCycleFlag>>
				/* Libido boost around 14 days into the cycle. */
				<<if 13 <= $time - $menCycleT && $time - $menCycleT <= 15>><<set $mc.libido += 1>><</if>>
				/* Libido penalty around 22 days into the cycle. */
				<<if 20 <= $time - $menCycleT && $time - $menCycleT <= 24>><<set $mc.libido -= 1>><</if>>
			<</if>>

			<<if $playerCurses.some(e => e.name === 'Heat/Rut')>>
				<<if !$heatCycleT_flag>>
					<<set $heatCycleT = $time - 7>>
					<<set $heatCycleT_flag = true>>
				<</if>>

				/* Libido boost on day 14 of the cycle (coincides with day 14 of menstruation cycle if active). */
				<<if $time - $heatCycleT == 14>><<set $mc.libido += 2>><</if>>
			<</if>>

			<<if $playerCurses.some(e => e.name === 'The Maxim')>>
				<<if !$MaximCycleT_flag>>
					<<set $MaximCycleT = $time>>
					<<set $MaximCycleT_flag = true>>
				<</if>>
				<<set _temp = random(0,2)>>
				<<if $mc.libido < 2 && _temp < 2>>
					<<set $mc.libido += 3>> @@.alert1; Your parasite is restlessly worming around inside you. It's touching you in a lot of sensitive places, which greatly increases your arousal!/*xxx*/<br>
				<<elseif $mc.libido < 4 && _temp < 1>>
					<<set $mc.libido += 2>>  @@.alert1; Your parasite is restlessly worming around inside you. It's touching you in a lot of sensitive places, which increases your arousal!<br>
				<</if>>
			<</if>>
		<</if>>

		/* ----------------------------------------- Compute apparent gender ---------------------------------------- */

		/* Undo effects of Colossal-able and Minish-ish on penis size for the calculation below. */
		<<set _penisCorTemp = _handle.penisCor>>
		<<if _handle.curses.some(e => e.name === 'Colossal-able')>><<set _penisCorTemp /= 70>><</if>>
		<<if _handle.curses.some(e => e.name === 'Minish-ish')>><<set _penisCorTemp *= 10>><</if>>

		/* Set appGender. Note 1: Companions also have this. */
		/* Note 2: Uses *apparent* fitness, so ignores the Weakling curse. */
		<<set _handle.appGender = 0
			+ 2 * _genderlvl
			- 0.25 * (_penisCorTemp - 4)
			+ 0.5 * (_handle.breastsCor - 3)
			- (_handle.fit > 7)
		>>
		<<if _handle === $mc>>
			/* Apply adjustments from Chain of Lorelei, Seafoam scent and Solace Lace. */
			<<set _handle.appGender += 0.5 * $colwear + 0.25 * $scent + 0.5 * $slwear>>
			/* mc looks more feminine if wearing the Creepy Doll's tattered pink dress. */
			<<if $dollevent2>><<set _handle.appGender += 1>><</if>>
		<</if>>
	<</for>>

	/* ------------------------------------------- Update mc dialog styles ------------------------------------------ */

	<<if $mc.appAge > 18>>
		<<set _boxShadowOpacity = 1.0>>
	<<elseif $mc.appAge > 15>>
		<<set _boxShadowOpacity = 0.8>>
	<<elseif $mc.appAge > 12>>
		<<set _boxShadowOpacity = 0.6>>
	<<elseif $mc.appAge > 9>>
		<<set _boxShadowOpacity = 0.4>>
	<<else>>
		<<set _boxShadowOpacity = 0.2>>
	<</if>>

	<<switch $mc.gender>>
		<<case 1>><<set _boxShadowColor = [ 40,  40, 255]>>
		<<case 2>><<set _boxShadowColor = [ 80,  80, 240]>>
		<<case 3>><<set _boxShadowColor = [120, 100, 230]>>
		<<case 4>><<set _boxShadowColor = [165, 120, 220]>>
		<<case 5>><<set _boxShadowColor = [210, 140, 210]>>
		<<case 6>><<set _boxShadowColor = [255, 160, 200]>>
	<</switch>>

	<<set $mc.genderVoice = $colwear ? 99 : $mc.gender>>
	<<set $mc.style = "border: 2px solid rgb(1, 0, 0);">>
	<<set $mc.style1 = [
			`box-shadow: 0 0 10px 2px rgba(${_boxShadowColor.concat(_boxShadowOpacity).join(', ')})`,
			'background-color: black',
		].join(';')>>

	/* $PulseBloomUse used to be initialized as an array, so check carefully. */
	<<set _pulseBloomInUse = $PulseBloomUse !== "" && !Array.isArray($PulseBloomUse)>>

	<<if _pulseBloomInUse>>
		<<print `<<set _handle = $companion${$PulseBloomUse}>>`>>
		<<set $mc.imageIcon = _handle.imageIcon>>
	<<elseif $mc.switch>>
		<<print `<<set _handle = $companion${$companionSwitched}>>`>>
		<<set $mc.imageIcon = _handle.imageIcon>>
	<<elseif $mc.appGender <= 5>>
		<<set $mc.imageIcon = 'Player Icons/playerM.png'>>
	<<else>>
		<<set $mc.imageIcon = 'Player Icons/playerF.png'>>
	<</if>>
<</capture>>
<</widget>>

:: Appearance widgets [widget nobr]
<<widget "PenisLengthText">>
	<<print (Math.round($mc.penisCor)*(!!_args[0] ? 0.0254 : 2.54)).toFixed(1) + (!!_args[0] ? " meters" : " cm")>>\
<</widget>>

<<widget "BodyHeightText">>
	<<set _meters = ($mc.heightCor > 100)>>
	<<print (Math.round($mc.heightCor)*(_meters ? 0.01 : 1)).toFixed(_meters ? 2 : 1) + (_meters ? " meters" : " cm")>>\
<</widget>>

:: Semen Demon Widget [widget nobr]
<<widget "SemenDemonCalc">>
<<set _contributions =0>>

<<if ($mc.penisCor > 0 && $curse82.variation!="vaginal fluids") || ($mc.vagina > 0 && $curse82.variation!="semen") >>
		<<if $playerCurses.some(e => e.name === "Leaky")>>
			<<set _contributions += Math.floor((1+$crumbleFluid/100)*2)>>
		<<else>>
			<<set _contributions += Math.floor(1+$crumbleFluid/100)>>
		<</if>>
<</if>>

<<for _i=0; _i<$SemenDemonVec.length; _i++ >>
	<<if $hiredCompanions.some(e => e.name === $SemenDemonVec[_i].name)>>
		<<set _contributions +=1>>
	<</if>>
<</for>>

<<set $SemenDemonBalance += (_contributions-$curse82.variation1)*_args[0]>>/* */
<<if $SemenDemonBalance < -14>>
	<<set $gameOver=true>>
<<elseif $SemenDemonBalance > 14>>
	<<set $SemenDemonBalance = 14>>
<</if>>
<</widget>>

:: Pronoun widgets [widget nobr]
<<widget "Pronoun">>
	<<if $mc.appGender<=5>>
		he
	<<else>>
		she
	<</if>>
<</widget>>

<<widget "ObjectivePronoun">>
	<<if $mc.appGender<=5 >>
		him
	<<else>>
		her
	<</if>>
<</widget>>

<<widget "PossesivePronoun">>
	<<if $mc.appGender<=5 >>
		his
	<<else>>
		hers
	<</if>>
<</widget>>

<<widget "GenderPronoun">> 
	<<if $mc.gender<2 && $mc.appAge > 15>>
		manly
	<<elseif $mc.gender<3 >>
		boyish
	<<elseif $mc.gender<4>>
		androgynous
	<<elseif $mc.gender<5 || $mc.appAge < 15>>
		girlish
	<<else>>
		feminine
	<</if>>
<</widget>>

:: Perceived widgets [widget nobr]
<<widget "mrms">>
	<<if $mc.appGender<=5>>
		mr.
	<<else>>
		miss
	<</if>>
<</widget>>

<<widget "sirmaam">>
	<<if $mc.appGender<=5>>
		sir
	<<else>>
		ma'am
	<</if>>
<</widget>>

<<widget "PerceivedGender">>
	<<if _args[0].appGender <= 5>>\
		<<if _args[0].appAge > 16>>\
			man\
		<<else>>\
			boy\
		<</if>>\
	<<else>>\
		<<if _args[0].appAge > 15.5>>\
			woman\
		<<else>>\
			girl\
		<</if>>\
	<</if>>\
<</widget>>

<<widget "PerceivedGender2">>
	<<if _args[0].appGender <= 5>>\
		<<if _args[0].appAge > 16>>\
			dude\
		<<else>>\
			boy\
		<</if>>\
	<<else>>\
		<<if _args[0].appAge > 18.5>>\
			lady\
		<<else>>\
			girl\
		<</if>>\
	<</if>>\
<</widget>>

<<widget "PerceivedStature">>
	<<if _args[0].heightCor < 160>>\
		little\
	<<elseif _args[0].heightCor > 180>>\
		big\
	<</if>>
	<<if _args[0].appAge < 12>>\
		young\
	<<elseif _args[0].appAge > 40>>\
		old\
	<</if>>\
<</widget>>

<<widget "PerceivedRace">>
	<<if _args[0].inhuman < 2>>\
		human\
	<<elseif _args[0].inhuman < 6>>\
		humanoid\
	<<elseif _args[0].inhuman < 10>>\
		anthropomorph\
	<<else>>\
		monster\
	<</if>>\
<</widget>>

<<widget "ShowAge">>
<<capture _months _years>>\
	<<set _years = Math.floor(Math.round(_args[0] * 12) / 12)>>
	<<set _months = Math.round(_args[0] * 12) % 12>>
	<<switch _months>>\
		<<case 0>>_years years\
		<<case 1>>_years years and 1 month\
		<<default>>_years years and _months months\
	<</switch>>\
<</capture>>\
<</widget>>

:: Threat1 Criterion [widget nobr]
<<widget "Threat1Criterion">>
<<if $mc.heightCor<140>>
	<<set $groupsize= $hiredCompanions.length >>
<<else>>
	<<set $groupsize= $hiredCompanions.length +1>>
<</if>>

<<set $total_value_relics=0>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
<<set $total_value_relics = $ownedRelics[$i].value + $total_value_relics>>
<</for>>

<<if $groupsize<4 && $total_value_relics>=150 && $mc.heightCor<5000>>
	<<set $threat1Crit=1>>
<<else>>
	<<set $threat1Crit=0>>
<</if>>
<</widget>>


:: Lewdness function [widget nobr]
<<widget "Lewdness">>
	<<set _semenCount = $curse82.variation1>>
	<<set _quotaCount = setup.activeCurseCount("Quota")>>
	<<set _limelightCount = setup.activeCurseCount("In the Limelight")>>
	<<set $lewdness = ($mc.libido - 2 + _quotaCount + _semenCount + _limelightCount) * 3 + $crumbleFluid / 10 + $algalSize + $standardsLower + $foodL6>>

	<<if !$LuminousWear>>
		<<if $mc.breastsCor>5>>
			<<set $lewdness +=1>>
		<<elseif $mc.breastsCor>7>>
			<<set $lewdness +=2>>
		<<elseif $mc.breastsCor>9>>
			<<set $lewdness +=3>>
		<</if>>

		<<if $mc.penis>6>>
			<<set $lewdness +=1>>
		<<elseif $mc.penis>10>>
			<<set $lewdness +=2>>
		<</if>>

		<<if $playerCurses.some(e => e.name === "Clothing Restriction B")>>
			<<set $lewdness +=1>>
		<</if>>

		<<if $playerCurses.some(e => e.name === "Clothing Restriction C")>>
			<<set $lewdness +=2>>
		<</if>>

		<<if $playerCurses.some(e => e.name === "Leaky")>>
			<<set $lewdness +=2>>
		<</if>>

		<<if $playerCurses.some(e => e.name === "Hard Mode")>>
			<<set $lewdness +=1>>
		<</if>>

		<<if $playerCurses.some(e => e.name === "Softie")>>
			<<set $lewdness -=1>>
		<</if>>

	<</if>>

	<<if $playerCurses.some(e => e.name === "Heat/Rut")>>
		<<set $lewdness +=1>>
	<</if>>

	<<if $playerCurses.some(e => e.name === "Hijinks Ensue")>>
		<<set $lewdness +=1>>
	<</if>>

	<<if $playerCurses.some(e => e.name === "Wandering Hands")>>
		<<set $lewdness +=2>>
	<</if>>

	<<if $playerCurses.some(e => e.name === "Blushing Virgin")>>
		<<set $lewdness -=1>>
	<</if>>

	<<if $playerCurses.some(e => e.name === "Literal Blushing Virgin")>>
		<<set $lewdness -=2>>
	<</if>>

	<<if $playerCurses.some(e => e.name === "Increased Sensitivity")>>
		<<set $lewdness +=1>>
	<</if>>
	<<if $playerCurses.some(e => e.name === "Refractory Refactorization")>>
		<<set $lewdness +=1>>
	<</if>>
	<<if $playerCurses.some(e => e.name === "Increased Sensitivity") && $playerCurses.some(e => e.name === "Refractory Refactorization")>>
			<<set $lewdness +=4>>
	<</if>>
<</widget>>


:: Inhuman function [widget nobr]
<<widget "Inhuman">>
<<for _i=0; _i<=$hiredCompanions.length; _i++>>
	<<if _i==$hiredCompanions.length>>
		<<set _handle = $mc>>
	<<else>>
		<<if $hiredCompanions[_i].name == $companionTwin.name >>
			<<set _name = "Twin">>
		<<else>>
			<<set _name = $hiredCompanions[_i].name>>
		<</if>>
		<<print "<<set _handle  = $companion"+ _name +" >>">>
	<</if>>
	<<set _handle.inhuman =0>>
	<<if _handle.ears != "normal human">>
		<<set _handle.inhuman +=1>>
	<</if>>

	<<if !["pale", "tanned", "olive", "brown", "dark brown"].includes(_handle.skinColor) >>
		<<set _handle.inhuman +=4>>
	<</if>>

	<<if _handle.eyeColor !=  "blue" && _handle.eyeColor !=  "brown" && _handle.eyeColor !=  "gray" && _handle.eyeColor !=  "green" && _handle.eyeColor !=  "hazel"  >>
		<<set _handle.inhuman +=1>>
	<</if>>

	<<if _handle.skinType.length > 0 && _handle.skinType!="hairless, smooth">>
		<<set _handle.inhuman +=4>>
	<</if>>

	<<if _handle.blood !="red">>
		<<set _handle.inhuman +=2>>
	<</if>>

	<<set _hornyCount = setup.activeCurseCount("Horny")>>
	<<if _hornyCount == 1 && _handle.curses.some(c=> c.name === "Horny") >>
		<<set _handle.inhuman +=2>>
	<<elseif _hornyCount == 2 && _handle.curses.some(c=> c.name === "Horny") >>
		<<set _handle.inhuman +=3>>
	<</if>>

	<<if _handle.tail.length > 0>>
		<<for _j = 0; _j < _handle.tail.length; _j++>>
			<<set _handle.inhuman +=2>>
		<</for>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Megadontia")>>
		<<set _handle.inhuman +=1>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Lingual Leviathan")>>
		<<set _handle.inhuman +=1>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Massacre Manicure")>>
		<<set _handle.inhuman +=1>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Flower Power")>>
		<<set _handle.inhuman +=4>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Wriggly Antennae")>>
		<<set _handle.inhuman +=2>>
	<</if>>

	<<if _handle.curses.some(e => e.name === "Seafolk")>>
		<<set _handle.inhuman +=4>>
	<</if>>

	<<if _i==$hiredCompanions.length && $LuminousWear>>
		<<set _handle.inhuman /=4>>
	<</if>>
<</for>>
<</widget>>

:: Handicap function [widget nobr]
<<widget "Handicap">>
<<for _i=0; _i<=$hiredCompanions.length; _i++>>
	<<if _i==$hiredCompanions.length>>
		<<set _handle = $mc>>
		<<set _HandicapLog = $HandicapLog>>
		<<set $ConvoHandicapSmall = false>>
		<<set $ConvoHandicapLarge = false>>
		<<set $ConvoHandicapFood = false>>
	<<else>>
		<<if $hiredCompanions[_i].name == $companionTwin.name >>
			<<set _name = "Twin">>
		<<else>>
			<<set _name = $hiredCompanions[_i].name>>
		<</if>>
		<<print "<<set _handle  = $companion"+ _name +" >>">>
		<<print "<<set _HandicapLog  = $HandicapLog"+ _name +" >>">>
	<</if>>

	<<set _handle.HandicapThreat =0>>
	<<set _handle.HandicapMovement =0>>
	<<set _handle.HandicapCarry =0>>
	<<set _handle.eyeCount =2>>
	<<set _handle.armCount =2>>
	<<set _handle.legCount =2>>

	<<for _HandicapEvent range _HandicapLog>>

		<<if _HandicapEvent.name == "Eye on the Prize" >>
			<<set _handle.eyeCount -=  $eyeRemove>>
			<<if _i==$hiredCompanions.length>>
				<<if !$BionicEye>>
					<<if _handle.eyeCount<2>>
					<<set _handle.HandicapThreat -=3>>
					<<set _handle.HandicapMovement -=1>>
						<<if $BDwear>>
							<<set _handle.HandicapThreat +=1>>
						<</if>>
					<</if>>
					<<if _handle.eyeCount<1>>
					<<set _handle.HandicapThreat -=5>>
					<<set _handle.HandicapMovement -=4>>
						<<if $BDwear>>
							<<set _handle.HandicapThreat +=3>>
							<<set _handle.HandicapMovement +=3>>
						<</if>>
					<</if>>
				<</if>>
			<</if>>
		<</if>>

		<<if _HandicapEvent.name == "Deafening Silence">>
			<<set _handle.HandicapThreat-=3>>
			<<if _i==$hiredCompanions.length>>
				<<set $ConvoHandicapSmall = true>>
				<<set $ConvoHandicapLarge = true>>
				<<set $ConvoHandicapFood = true>>
			<</if>>
		<</if>>

		<<if (_HandicapEvent.name == "Beastly" || _HandicapEvent.name == "Taciturn Turnaround") && _i==$hiredCompanions.length>>
			<<set $ConvoHandicapSmall = true>>
			<<set $ConvoHandicapFood = true>>
		<</if>>
		
		<<if _HandicapEvent.name == "Nose Goes">>
			<<set _handle.HandicapThreat-=3>>
			<<if _i==$hiredCompanions.length>>
				<<set $ConvoHandicapFood = true>>
			<</if>>
		<</if>>

		<<if _HandicapEvent.name == "Ampu-Q-tie">>
			<<if $curse104.variation=='A'>>
				<<set _handle.armCount -=1>>
			<<elseif $curse104.variation=='L'>>
				<<set _handle.legCount -=1>>
			<<elseif $curse104.variation=='AA'>>
				<<set _handle.armCount -=2>>
			<<elseif $curse104.variation=='AL'>>
				<<set _handle.armCount -=1>>
				<<set _handle.legCount -=1>>
			<<elseif $curse104.variation=='LL'>>
				<<set _handle.legCount -=2>>
			<<elseif $curse104.variation=='ALL'>>
				<<set _handle.armCount -=1>>
				<<set _handle.legCount -=2>>
			<<elseif $curse104.variation=='AAL'>>
				<<set _handle.armCount -=2>>
				<<set _handle.legCount -=1>>
			<<elseif $curse104.variation=='AALL'>>
				<<set _handle.armCount -=2>>
				<<set _handle.legCount -=2>>
			<</if>>
		<</if>>

		<<if _HandicapEvent.name == "Arm Army">>
			<<set _handle.armCount +=2>>
		<</if>>

		<<if _HandicapEvent.name == "Seafolk">>
			<<set _handle.legCount -=2>>
			<<set $scuba = 1>>
		<</if>>

		<<if _HandicapEvent.name == "Conjoined">>
			<<set _handle.HandicapThreat -=6>>
			<<set _handle.HandicapMovement -=6>>
			<<set _handle.HandicapCarry -=2>>
		<</if>>
		
	<</for>>
	<<if _handle.name=="Khemia">>
		<<if $convo.khemiaAegis == 1>>
			<<set _handle.HandicapThreat +=5>>
		<</if>>
	<</if>>

	<<if _i==$hiredCompanions.length>>
		<<if $BDwear>>
			<<set _handle.HandicapThreat +=1>>
		<</if>>

		<<if $BionicEye>>
			<<if $mc.eyeCount<2>>
				<<set $mc.eyeCount +=1>>
			<</if>>
		<</if>>

		<<if $BionicArm>>
			<<set _handle.HandicapCarry +=100>>
			<<set _handle.HandicapThreat +=8>>
			<<set _handle.HandicapMovement +=3>>
			<<if _handle.armCount<2>>
				<<set _handle.armCount +=1>>
			<</if>>
		<</if>>

		<<if $AegisWear>>
			<<set _handle.HandicapThreat +=5>>
		<</if>>
		
	<</if>>

	<<set _fitCor = _handle.curses.some(e => e.name === "Weakling") ? 0 : _handle.fit>>
	<<set _handle.HandicapThreat += _fitCor / 4 - 1.25>>
	<<set _handle.HandicapMovement += _fitCor / 4 - 1.25>>

	<<if _handle.armCount == 1 && (_handle.legCount >1 || $DaedalusEquip)>>
		<<set _handle.HandicapThreat -=2>>
		<<set _handle.HandicapMovement -=1>>
		<<set _handle.HandicapCarry -=2>>
	<<elseif _handle.armCount == 0 && (_handle.legCount >1 || $DaedalusEquip)>>
		<<set _handle.HandicapThreat -=7>>
		<<set _handle.HandicapMovement -=3>>
		<<set _handle.HandicapCarry -=7>>
	<<elseif _handle.armCount > 1 && _handle.legCount == 1>>
		<<set _handle.HandicapThreat -=3>>
		<<set _handle.HandicapMovement -=5>>
		<<set _handle.HandicapCarry -=3>>
	<<elseif _handle.armCount == 1 && _handle.legCount == 1>>
		<<set _handle.HandicapThreat -=7>>
		<<set _handle.HandicapMovement -=8>>
		<<set _handle.HandicapCarry -=7>>
	<<elseif _handle.armCount > 1 && _handle.legCount == 0>>
		<<set _handle.HandicapThreat -=7>>
		<<set _handle.HandicapMovement -=9>>
		<<set _handle.HandicapCarry -=7>>
	<<elseif _handle.armCount == 1 && _handle.legCount == 0>>
		<<set _handle.HandicapThreat -=8>>
		<<set _handle.HandicapMovement -=10>>
		<<set _handle.HandicapCarry -=9>>
	<<elseif _handle.armCount == 0 && _handle.legCount ==1>>
		<<set _handle.HandicapThreat -=9>>
		<<set _handle.HandicapMovement -=9>>
		<<set _handle.HandicapCarry -=10>>
	<<elseif _handle.armCount == 0 && _handle.legCount == 0>>
		<<set _handle.HandicapThreat -=10>>
		<<set _handle.HandicapMovement -=10>>
		<<set _handle.HandicapCarry -=10>>
	<</if>>

	<<if _handle.armCount >2 >>
		<<set _handle.HandicapThreat -= 2*($mc.armCount-2)>>
		<<set _handle.HandicapMovement += 1*($mc.armCount-2)>>
		<<set _handle.HandicapCarry += ($mc.armCount-2)>>
	<</if>>
			
	<<if _i==$hiredCompanions.length>>
		<<if $menstruating == true>>
			<<set _handle.HandicapThreat -= 2>>
		<</if>>

		<<if 35 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 45>>
			<<set _handle.HandicapMovement -= 2>>
		<<elseif 45 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 90>>
			<<set _handle.HandicapThreat -= 2>>
			<<set _handle.HandicapMovement -= 4>>
			<<set _handle.HandicapCarry -= 3>>
		<<elseif (120 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 180) >>
			<<set _handle.HandicapThreat -= 1>>
			<<set _handle.HandicapMovement -= 2>>
			<<set _handle.HandicapCarry -= 2>>
		<<elseif 180 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 240>>
			<<set _handle.HandicapThreat -= 2>>
			<<set _handle.HandicapMovement -= 3>>
			<<set _handle.HandicapCarry -= 3>>
		<<elseif setup.daysConsideredPregnant($mc) >= 240 && setup.daysUntilDue($mc) > 0>>
			<<set _handle.HandicapThreat -= 4>>
			<<set _handle.HandicapMovement -= 5>>
			<<set _handle.HandicapCarry -= 5>>
		<</if>>

		<<if $MaximCycleT-$time>=14 && $MaximCycleT-$time<28 && $MaximCycleT_flag>>
			<<set _handle.HandicapThreat -= 1>>
			<<set _handle.HandicapMovement -= 2>>
			<<set _handle.HandicapCarry -= 2>>
		<<elseif $MaximCycleT-$time>=28 && $MaximCycleT_flag>>
			<<set _handle.HandicapThreat -= 2>>
			<<set _handle.HandicapMovement -= 3>>
			<<set _handle.HandicapCarry -= 3>>
		<</if>>

		<<if $DaedalusEquip == true && _handle.HandicapMovement < 0>>
			<<set _handle.HandicapMovement = 0 >>
		<</if>>
	<</if>>
	<<if _handle.HandicapThreat <-10>>
		<<set _handle.HandicapThreat =-10>>
	<</if>>
	<<if _handle.HandicapMovement < -10>>
		<<set _handle.HandicapMovement = -10>>
	<</if>>
	<<if _handle.HandicapCarry < -10>>
		<<set _handle.HandicapCarry = -10>>
	<</if>>
<</for>>
<</widget>>

:: Miscellaneous stat updates [nobr widget]
<<widget "Update_Misc_Stat">>
<<set $sellAdd=0>>
<<set $timeRed=0>>
<<set $statRed=0>>
<<set $bullRed=0>>
<<set $corRed=0>>

<<if $hiredCompanions.some(e => e.name === "Lily")>>
	<<set $sellAdd += 10>>
	<<if $LilyConvo2>>
		<<set $sellAdd += 5>>
	<</if>>
	<<if $grimoireLily == 1>>
		<<set $sellAdd += 2>>
	<</if>>
<</if>>
<<if $hiredCompanions.some(e => e.name === "Khemia")>>
	<<set $timeRed += 2>>
	<<if $grimoireKhemia == 1>>
		<<set $timeRed += 2>>
	<</if>>
<</if>>
<<if $hiredCompanions.some(e => e.name === "Cherry")>>
	<<set $statRed += 1>>
	<<if $grimoireCherry == 1>>
		<<set $statRed += 1>>
	<</if>>
<</if>>
<<if $hiredCompanions.some(e => e.name === "Cloud")>>
	<<set $bullRed += 2>>
	<<if $grimoireCloud == 1>>
		<<set $bullRed += 2>>
	<</if>>
<</if>>
<<if $hiredCompanions.some(e => e.name === "Saeko")>>
	<<set $corRed += 5>>
	<<if $grimoireSaeko == 1>>
		<<set $corRed += 5>>
	<</if>>
/*Abyss knowledge bonus moved to the item equipment widget */
<</if>>
<<if $AegisWear>>
	<<set $statRed +=1>>
<</if>>
<<if $LightningWear>>
	<<if $hiredCompanions.some(e => e.name === "Cloud")>>
		<<set $bullRed +=1>>
	<<else>>
		<<set $bullRed +=2>>
	<</if>>
<</if>>
<</widget>>

:: Doll transformation [widget nobr]
<<widget "dollTF">>
<<if $creepydoll.affec == 0>>
	<<set $DollTF.variation = $time>>
<</if>>
<<set $AgeLog.push($DollTF)>>
<<set $GenderLog.push($DollTF)>>
<<set $creepydoll.affec += 1>>
<</widget>>

:: Cloning Self for Double Trouble [widget nobr]
<<widget "CloneSelf">>
<<if $curse111.variation2=='inverted'>>
	<<set $companionTwin = {
		name: $curse111.variation1,
		carry: $carryWeight,
		affec: 3,
		swap: false,
		image: "Curses/doubletrouble.png",
		imageIcon: "Player Icons/playerF.png",
		curses: $playerCurses,
        mindSex: '',
		osex: "",
		obreasts: $mc.openis,
		breastsLabel: "flat",
		openis: $mc.obreasts,
		ogender: $mc.ogender,
		genderVoice: 0,
		fit: $mc.fit,
		oheight: $mc.oheight,
		/*hairColor: $mc.hairColor,
		skinColor: $mc.skinColor,*/
		age: $mc.age,
		appDesc: "You basically feel the same as always, only your gender is different. Well maybe you don't feel the same as always...",
		style: "border: 2px solid rgb(1,0,0);",
		style1: "box-shadow: 0px 0px 10px 2px rgba(255, 225, 225,1);background-color: black;",
		fear: $fear,

		sex: "",
		ohair: $mc.ohair,
		hair: $mc.ohair,
		penis: $mc.openis,
		penisCor: $mc.openis,
		doublePenis: false,
		vagina: 0,
		gender: $mc.ogender,
		switch: false,
		breasts: $mc.obreasts,
		breastsCor: $mc.obreasts,
		lactation: 0,
		pregnantT: $mc.pregnantT,
		due: setup.dueDate($mc),
		ears: "normal human",
		modheight: 0,
		bodyHair: 1,
		skinType: "",
		oskinColor: $mc.skinColor,
		skinColor: $mc.skinColor,
		oeyeColor: $mc.oeyeColor,
		eyeColor: $mc.oeyeColor,
		eyeCount: 2,
		armCount: 2,
		legCount: 2,
		tail: [],
		womb: 0,
		womb1: "",
		womb2: "",
		desc: "",
		blood: "red",
		appAge: $mc.age,
		libido: 2,
		subdom: 0
		}>>
	

	<<if $mc.osex == "male">>
		<<set $companionTwin.osex = "female">>
		<<set $companionTwin.ogender = 6>>
		<<set $companionTwin.oheight = $mc.oheight * (1 - 0.01525 * 5)>>
	<<else>>
		<<set $companionTwin.osex = "male">>
		<<set $companionTwin.ogender = 1>>
		<<set $companionTwin.oheight = $mc.oheight * (1 + 0.01525 * 5)>>
	<</if>>
	<<if $mc.sex=="male">>
		<<set $companionTwin.sex = "female">>
	<<elseif $mc.sex=="female">>
		<<set $companionTwin.sex = "male">>
	<<else>>
		<<set $companionTwin.sex = "doll-like">>
	<</if>>
	<<set $companionTwin.mindSex = $mc.mindSex == 'male' ? 'female' : 'male' >>

	<<if $mc.appGender<=5 >>
		<<set $companionTwin.imageIcon="Player Icons/playerF.png">>
	<<else>>
		<<set $companionTwin.imageIcon="Player Icons/playerM.png">>
	<</if>>
<<else>>
	<<set $companionTwin = {
		name: $curse111.variation1,
		carry: $carryWeight,
		affec: 3,
		swap: false,
		image: "Curses/doubletrouble.png",
		imageIcon: "",
		curses: $playerCurses,
        mindSex: $mc.mindSex,
		osex: $mc.osex,
		obreasts: $mc.obreasts,
		breastsLabel: "flat",
		openis: $mc.openis,
		ogender: $mc.ogender,
		genderVoice: 0,
		fit: $mc.fit,
		oheight: $mc.oheight,
		/*hairColor: $mc.hairColor,
		skinColor: $mc.skinColor,*/
		age: $mc.age,
		appDesc: "You basically feel the same as always, only your gender is different. Well maybe you don't feel the same as always...",
		style: "border: 2px solid rgb(1,0,0);",
		style1: "box-shadow: 0px 0px 10px 2px rgba(255, 225, 225,1);background-color: black;",
		fear: $fear,

		sex: "",
		ohair: $mc.hairColor,
		hair: $mc.hairColor,
		penis: $mc.openis,
		penisCor: $mc.openis,
		doublePenis: false,
		vagina: 0,
		gender: $mc.ogender,
		switch: false,
		breasts: $mc.obreasts,
		breastsCor: $mc.obreasts,
		lactation: 0,
		pregnantT: $mc.pregnantT,
		due: setup.dueDate($mc),
		ears: "normal human",
		modheight: 0,
		bodyHair: 1,
		skinType: "",
		oskinColor: $mc.skinColor,
		skinColor: $mc.skinColor,
		oeyeColor: $mc.oeyeColor,
		eyeColor: $mc.oeyeColor,
		eyeCount: 2,
		armCount: 2,
		legCount: 2,
		tail: [],
		womb: 0,
		womb1: "",
		womb2: "",
		desc: "",
		blood: "red",
		appAge: $mc.age,
		libido: 2,
		subdom: 0
		}>>

	<<if $mc.osex=="male">>
		<<set $companionTwin.osex = "male">>
		<<set $companionTwin.ogender = 1>>
	<<else>>
		<<set $companionTwin.osex = "female">>
		<<set $companionTwin.ogender = 6>>
	<</if>>

	<<if $mc.appGender<=5 >>
		<<set $companionTwin.imageIcon="Player Icons/playerM.png">>
	<<else>>
		<<set $companionTwin.imageIcon="Player Icons/playerF.png">>
	<</if>>
<</if>>

<<set $companionTwin.genderVoice = 7 - $mc.gender>>

<<set $companionTwin.name = $curse111.variation1>>
<<set $hiredCompanions.push($companionTwin)>>
<<CarryAdjust>>
<</widget>>

:: Creating a Golem with Lambent Specter [widget nobr]
<<widget "createGolem">>
<<set _temp = $companionGolem.type>>
<<if $companionGolem.osex=="male">>
	<<set $companionGolem = {
		type: _temp,
		name: "Golem",
		carry: 30,
		affec: 0,
		swap: false,
		image: "",
		imageIcon: "",
		curses: [],
		mindSex: 'male',
		osex: "male",
		obreasts: 0,
		breastsLabel: "flat",
		openis: 6,
		ogender: 1,
		genderVoice: 0,
		fit: 10,
		oheight: 170,
		age: 25,
		appDesc: "",
		style: "border: 2px solid rgb(1,0,0);",
		style1: "box-shadow: 0px 0px 10px 2px rgba(255, 225, 225,1);background-color: black;",
		fear: "",

		sex: "male",
		ohair: "",
		hair: "",
		penis: 6,
		penisCor: 6,
		doublePenis: false,
		vagina: 0,
		gender: 1,
		switch: false,
		breasts: 0,
		breastsCor: 0,
		lactation: 0,
		pregnantT: setup.never,
		due: setup.never,
		ears: "",
		modheight: 0,
		bodyHair: 1,
		skinType: "",
		oskinColor: "",
		skinColor: "",
		oeyeColor: "",
		eyeColor: "",
		eyeCount: 2,
		armCount: 2,
		legCount: 2,
		tail: [],
		womb: 0,
		womb1: "",
		womb2: "",
		desc: "",
		blood: "",
		appAge: 25,
		libido: 2,
		subdom: 10
		}>>
	

	<<if _temp=="clay">>
		<<set $companionGolem.image= "Icons/maleClayGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a sturdy clay golem. ">>
		<<set $companionGolem.ohair= "textured, earthy brown">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "clay-crafted human-like ears">>
		<<set $companionGolem.skinType= "clay and soil">>
		<<set $companionGolem.skinColor= "rich, earthy brown">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "deep brown">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "thick, muddy sludge">>
	<<elseif _temp=="snow">>
		<<set $companionGolem.image= "Icons/maleSnowGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a frosty snow golem. ">>
		<<set $companionGolem.ohair= "glistening, ice-blue">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "carved ice depressions">>
		<<set $companionGolem.skinType= "packed snow">>
		<<set $companionGolem.skinColor= "pristine white">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "glacial blue">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "chilled, clear water">>
	<<elseif _temp=="doll">>
		<<set $companionGolem.image= "Icons/maleDollGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a life-like doll golem">>
		<<set $companionGolem.ohair= $mc.ohair>>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "perfect human replica">>
		<<set $companionGolem.skinType= "smooth, synthetic">>
		<<set $companionGolem.skinColor= $mc.skinColor>>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "glassy, vacant white">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "bright red">>
	<<elseif _temp=="water">>
		<<set $companionGolem.image= "Icons/maleWaterGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a water golem">>
		<<set $companionGolem.ohair= "dark blue">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "fluid human-like ears">>
		<<set $companionGolem.skinType= "water">>
		<<set $companionGolem.skinColor= "translucent blue">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "grey">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "water">>
	<<elseif _temp=="skeleton">>
		<<set $companionGolem.image= "Icons/maleSkeletonGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a skeletal golem">>
		<<set $companionGolem.ohair= "white">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "holes">>
		<<set $companionGolem.skinType= "bone">>
		<<set $companionGolem.skinColor= "pale white">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "nonexistent">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "nonexistent">>
	<</if>>
<<else>>
	<<set $companionGolem = {
		type: _temp,
		name: "Golem",
		carry: 30,
		affec: 0,
		swap: false,
		image: "",
		imageIcon: "",
		curses: [],
		mindSex: 'female',
		osex: "female",
		obreasts: 3,
		breastsLabel: "B",
		openis: 0,
		ogender: 6,
		fit: 10,
		genderVoice: 5,
		oheight: 163,
		age: 25,
		appDesc: "",
		style: "border: 2px solid rgb(1,0,0);",
		style1: "box-shadow: 0px 0px 10px 2px rgba(255, 225, 225,1);background-color: black;",
		fear: "",

		sex: "female",
		ohair: "",
		hair: "",
		penis: 0,
		penisCor: 0,
		doublePenis: false,
		vagina: 1,
		gender: 6,
		switch: false,
		breasts: 3,
		breastsCor: 3,
		lactation: 0,
		pregnantT: setup.never,
		due: setup.never,
		ears: "",
		modheight: 0,
		bodyHair: 0,
		skinType: "",
		oskinColor: "",
		skinColor: "",
		oeyeColor: "",
		eyeColor: "",
		eyeCount: 2,
		armCount: 2,
		legCount: 2,
		tail: [],
		womb: 1,
		womb1: "",
		womb2: "",
		desc: "",
		blood: "",
		appAge: 25,
		libido: 2,
		subdom: 10
		}>>
	

	<<if _temp=="clay">>
		<<set $companionGolem.image= "Icons/femaleClayGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a sturdy clay golem. ">>
		<<set $companionGolem.ohair= "textured, earthy brown">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "clay-crafted human-like ears">>
		<<set $companionGolem.skinType= "clay and soil">>
		<<set $companionGolem.skinColor= "rich, earthy brown">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "deep brown">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "thick, muddy sludge">>
	<<elseif _temp=="snow">>
		<<set $companionGolem.image= "Icons/femaleSnowGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a frosty snow golem. ">>
		<<set $companionGolem.ohair= "glistening, ice-blue">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "carved ice depressions">>
		<<set $companionGolem.skinType= "packed snow">>
		<<set $companionGolem.skinColor= "pristine white">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "glacial blue">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "chilled, clear water">>
	<<elseif _temp=="doll">>
		<<set $companionGolem.image= "Icons/femaleDollGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a life-like doll golem">>
		<<set $companionGolem.ohair= $mc.ohair>>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "perfect human replica">>
		<<set $companionGolem.skinType= "smooth, synthetic">>
		<<set $companionGolem.skinColor= $mc.skinColor>>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "glassy, vacant white">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "bright red">>
	<<elseif _temp=="water">>
		<<set $companionGolem.image= "Icons/femaleWaterGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a water golem">>
		<<set $companionGolem.ohair= "dark blue">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "fluid human-like ears">>
		<<set $companionGolem.skinType= "water">>
		<<set $companionGolem.skinColor= "translucent blue">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "grey">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "water">>
	<<elseif _temp=="skeleton">>
		<<set $companionGolem.image= "Icons/femaleSkeletonGolem.png">>
		<<set $companionGolem.imageIcon= $companionGolem.image>>
		<<set $companionGolem.appDesc= "You are a skeletal golem">>
		<<set $companionGolem.ohair= "white">>
		<<set $companionGolem.hair= $companionGolem.ohair>>
		<<set $companionGolem.ears= "holes">>
		<<set $companionGolem.skinType= "bone">>
		<<set $companionGolem.skinColor= "pale white">>
		<<set $companionGolem.oskinColor= $companionGolem.skinColor>>
		<<set $companionGolem.eyeColor= "nonexistent">>
		<<set $companionGolem.oeyeColor= $companionGolem.eyeColor>>
		<<set $companionGolem.blood= "nonexistent">>
	<</if>>

<</if>>

<<set $AgeLogGolem = []>>
<<set $GenderLogGolem = []>>
<<set $HeightLogGolem = []>>
<<set $LibidoLogGolem = []>>
<<set $HandicapLogGolem = []>>

<<set $hiredCompanions.push($companionGolem)>>
<</widget>>

:: Time dependant variable updates [widget nobr]
<<widget "checkTime">>

<<set $random = Math.random(0,3)>>

<<if $totalCarry * 1.1 < setup.carriedWeight>>
	@@.alert2; You are severely overburdened!@@<br><br>
<<elseif $totalCarry * 1 < setup.carriedWeight>>
	@@.alert1; You are overburdened!@@<br><br>
<</if>>

<<if $status.duration > 0>>
	@@.alert2; You are currently injured, increasing your next $status.duration travel times by $status.penalty days each. @@<br><br>
<</if>>

<<if $time > $Maru_LastT + 7>>
	<<set $companionMaru.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Maru_LastT = $time>>
	<<if $MaruConvo1 && $forageFood == 0>>
		<<set $items[1].count += 1>>
		@@.alert1; Maru cooked an especially delicious meal granting you an extra day worth of food!<br><br>
	<</if>>
<</if>>

<<if $time > $Lily_LastT + 7>>
	<<set $companionLily.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Lily_LastT = $time>>
<</if>>

<<if $time > $Khemia_LastT + 7>>
	<<set $companionKhemia.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Khemia_LastT = $time>>
<</if>>

<<if $time > $Cherry_LastT + 7>>
	<<set $companionCherry.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Cherry_LastT = $time>>
<</if>>

<<if $time > $Cloud_LastT + 7>>
	<<set $companionCloud.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Cloud_LastT = $time>>
	<<set $altCloud = random(0,3)>>
	<<if $CloudConvo1>>
		<<if $altCloud == 1>>
		<<set $temp = random(2,3) >>
		<<set $items[20].count += $temp >>
		@@.alert1; Cloud seems to have been able to scavenge some ammunition somehow. You aren't quite sure whether he found it or made it himself, but either way you've gained $temp bullets.<br><br>
		<<elseif $altCloud == 2>>
		<<set $temp = random(2,5) >>
		<<set $dubloons += $temp >>
		@@.alert1; Cloud somehow managed to scavenge a bit of cash, perhaps left behind by a previous diver? It's not like dubloons would be down here for any other reason. You've gained $temp dubloons.<br><br>
		<</if>>
	<</if>>
<</if>>

<<if $time > $Saeko_LastT + 7>>
	<<set $companionSaeko.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Saeko_LastT = $time>>
<</if>>

<<if $time > $Twin_LastT + 7>>
	<<set $companionTwin.affec+=(1+$hsswear + $maruPangea)>>
	<<set $Twin_LastT = $time>>
<</if>>

<<if $time > $fit_adjustLastT + 20>>
	<<if $mc.fit > 8>>
		<<set $mc.fit -= 1>>
		@@.alert1; Your lack of an intensive work-out reduces your fitness to somewhat more average levels<br><br>
	<<elseif $mc.fit < 5>>
		<<set $mc.fit += 1>>
		@@.alert1; The constant physical activity of the expedition increases your fitness closer to average levels<br><br>
	<</if>>
	<<set $fit_adjustLastT = $time>>
<</if>>

<<if $mc.appAge <= 13>>
	<<set $menCycleT=$time>>
<</if>>

<<if $menCycleFlag == true && $mc.appAge > 13>>
	<<if $time-$menCycleT-$menCycleVar>27 >>
		<<set $menCycleT=$time>>
		<<set $menCycleVar = random(-4,4)>>
		<<if $playerCurses.some(e => e.name === "Eggxellent")>>

			<<set _eggs = ($bewitchBabies+1)*($mc.womb)>>

			<<if !settings.MenCycleToggleFilter>>Today, you're plagued by a pervasive sense of discomfort. Your lower abdomen cramps incessantly, your breasts feel tender and sore, and a relentless headache pounds at your temples.<</if>> As the day progresses, you become increasingly aware of a compelling need to expel something using your pelvic muscles.
			<<if $EggsFertilized == true>>
				With considerable effort and concentration, you manage to push out _eggs fertilized egg<<if _eggs>1>>s<</if>>.
			<<else>>
				With considerable effort and concentration, you manage to push out _eggs unfertilized egg<<if _eggs>1>>s<</if>>.
			<</if>>
			Uncertain of how to handle the egg<<if _eggs>1>>s<</if>>, you ultimately decide to dispose of <<if _eggs>1>>them<<else>>it<</if>>. Exhausted from the ordeal, you can do nothing but rest, your day effectively wasted.
			<br><br>
			<<PassTime 1>>
		<<else>>
			<<if !settings.MenCycleToggleFilter>>
				<<if $menFirstCycle == true>>
					@@.alert1; Today, you're beset by an unbearable combination of lower abdominal cramps and a pounding headache. Perhaps it was something you ate? You consider taking a day to recuperate and let this pass.<br><br>
				<<else>>
					Today, you're in the throes of your cycle – your lower abdomen cramps mercilessly, your breasts feel tender and sore, and the headache is all-consuming. You hope for relief soon.
					<<if $EventHorizonWear== true>>
						Fortunately, the Event Horizon saves you from having to deal with the menstrual flow, so you have a much easier experience than you might otherwise have to deal with.
					<</if>>
					<br><br>
				<</if>>
			<</if>>
			<<set $menstruating = true>>
		<</if>>
		<<set $pregChance = 0>>
	<<elseif $menFirstCycle == false && $time-$menCycleT>28 >>
		@@.alert1; You expected your cycle to have started by now, but it hasn't. Still, there's no need to worry – periods can be late, right?<br><br>
	<<elseif $time-$menCycleT<5 && $time-$menCycleT>0 && $menstruating == true>>
		<<if !settings.MenCycleToggleFilter>>
			<<if $menFirstCycle == true>>
				<<if $EventHorizonWear== false>>
					<<set $menFirstCycle = false>>
					<<if $mc.womb1 == "throat" || $mc.womb2 == "throat">>
						@@.alert1; When you start coughing up $mc.blood blood, panic sets in as you fear the worst – some Abyssal lung disease. But as you examine the substance, you realize it's not normal blood, and your lungs feel fine. The truth dawns on you suddenly: you're experiencing your first period. With a uterus now residing in your throat, you feel completely overwhelmed and on the verge of tears. <br><br>
					<<else>>
						@@.alert1; The sight of $mc.blood bloodstains in your underwear confirms your suspicion – you're having your first period. With a new uterus, you feel overwhelmed and on the verge of tears.<br><br>
					<</if>>
				<<else>>
						@@.alert1; Your misery persists, and you're desperate for relief from the unbearable headache. You consider taking it easy until this subsides. <br><br>
				<</if>>
			<<else>>
				You're in the midst of your period, and although it's not the best time with the constant headache, you're no stranger to this experience. While you'll continue to push forward, you allow yourself to take it a bit easier when the opportunity arises. <br><br>
				<<if $EventHorizonWear== true>>
					Fortunately, the Event Horizon saves you from having to deal with the menstrual flow, so you have a much easier experience than you might otherwise have to deal with.
				<</if>>
				<br><br>
			<</if>>
		<</if>>
		<<set $pregChance = 0>>
	<<elseif $time-$menCycleT<9 && $time-$menCycleT>=5>>
		<<set $menstruating == false>>
		<<set $pregChance = 0>>
	<<elseif $time-$menCycleT<13 && $time-$menCycleT>=9>>
		<<set $menstruating == false>>
		<<set $pregChance = ($time-$menCycleT-8)*0.06>>
	<<elseif $time-$menCycleT<16 && $time-$menCycleT>=13>>
		<<set $menstruating == false>>
		<<set $pregChance = 0.3>>
	<<elseif $time-$menCycleT<18 && $time-$menCycleT>=16>>
		<<set $menstruating == false>>
		<<set $pregChance = 0.3-($time-$menCycleT-15)*0.1>>
	<<else>>	
		<<set $menstruating == false>>
		<<set $pregChance = 0>>	
	<</if>>
	<<if $playerCurses.some(e => e.name === "Absolute Birth Control")>>
		<<set $pregChance = 0>>	
	<</if>>
	<<if $playerCurses.some(e => e.name === "Absolute Pregnancy")>>
		<<set $pregChance = 10>>	
	<</if>>	
<</if>>

<<if setup.daysConsideredPregnant($mc) >= 14>>
	/* Show symptoms alert once every 3 times, unless it's early in the pregnancy and mc was expecting to start her cycle. */
	<<if $random == 0 || (!$menFirstCycle && setup.daysConsideredPregnant($mc) < 45)>>
		<<if 28 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 35 && !$menFirstCycle>>
			@@.alert1; Your heart races as you realize your cycle should have started by now. Perhaps it's simply late, no need to panic just yet, right? The uncertainty lingers.<br><br>
		<<elseif 35 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 45 && !$menFirstCycle>>
			@@.alert1; Anxiety creeps in as your period remains conspicuously absent. This lateness is unusual for you, and the thought of pregnancy begins to haunt your mind.<br><br>
		<<elseif 45 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 90>>
			@@.alert1; You find yourself overwhelmed by exhaustion, and bouts of nausea threaten to topple you. This isn't ideal for your travels or facing any threats.
			<<if !$menFirstCycle>>
				@@.alert1; The truth is undeniable – you're pregnant. Now, you must decide what to do next.<br><br>
			<<else>>
				@@.alert1; The miasma could be causing some sort of illness. Maybe it will pass, or perhaps you need medical attention.<br><br>
			<</if>>
		<<elseif  90 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 120 && !$menFirstCycle>>
			@@.alert1; Your pregnancy occupies your thoughts, but aside from that, you feel relatively fine. You notice your breasts and butt have grown a little, and a hint of fatigue lingers, but there's nothing too concerning.<br><br>
		<<elseif 120 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 180>>
			<<if !$menFirstCycle>>
				@@.alert1; Your pregnant belly is now round and prominent. You occasionally feel a gentle kick from within, but your growing belly begins to hinder your travels more and more.<br><br>
			<<else>>
				@@.alert1; You've gained considerable weight, especially around your belly, which sometimes experiences a peculiar tickling sensation. Your butt, thighs, and <<if $mc.breastsCor<3 && $mc.sex=="male">>pecs<<else>>breasts<</if>> have also accumulated some fat. This extra weight will slow you down during your travels.<br><br>
			<</if>>
		<<elseif 180 <= setup.daysConsideredPregnant($mc) && setup.daysConsideredPregnant($mc) < 240>>
			<<if !$menFirstCycle>>
				@@.alert1; It's impossible to deny your pregnancy now. Your child's movements inside your swollen belly have become more frequent. But the added weight and energy-draining nature of pregnancy make navigating the Abyss increasingly difficult.<br><br>
			<<else>>
				@@.alert1; You can no longer ignore the truth – you're pregnant and have been for some time. Your child's movements within your belly are unmistakable. Your energy is drained more quickly than usual, whether from the added weight or the pregnancy itself. With a large, round belly and about half your normal energy, navigating the Abyss has become significantly more challenging.<br><br>
			<</if>>
		<<elseif setup.daysConsideredPregnant($mc) >= 240 && setup.daysUntilDue($mc) > 0>>
			@@.alert2; Your advanced pregnancy has made even simple tasks feel like monumental challenges. Standing, sitting, bending, and sleeping require great effort. Walking is limited to short distances, while running and fighting are out of the question. <<if $mc.lactation > 0>>Milk stains from your breasts mar your clothes, reminding you of your impending labor.<</if>> Your ability to traverse the Abyss is severely limited. Ensure you have enough supplies for the days you'll be immobilized after giving birth!<br><br>
		<</if>>
	<</if>>
<</if>>

<<if $playerCurses.some(e => e.name === "Heat/rut")>>
	<<if $menCycleFlag == true>>
		<<if $time-$heatCycleT-$menCycleVar>27 >>
			<<set $heatCycleT=$time>>
		<</if>>
	<<else>>
		<<if $time-$heatCycleT>27 >>
			<<set $heatCycleT=$time>>
		<</if>>
	<</if>>
<</if>>

<<if $DesertedCompanions.length > 0 >>
	<<set _rejoinD = $companionsDepartT>>
	<<if $currentLayer< $companionsDepartL >>
		<<for _i = $currentLayer; _i < $companionsDepartL; _i++>>
			<<if $DesertedCompanions.some(e => e.name === "Khemia")>>
				<<set _temp = $UpTravelDays[_i]-2>>
				<<set _rejoinD +=  Math.max(0,_temp)>>
			<<else>>
				<<set _rejoinD +=  $UpTravelDays[_i]>>
			<</if>>
		<</for>>
	/*<<elseif $currentLayer== $companionsDepartL>>
		<<set _rejoinD +=  $UpTravelDays[$currentLayer-1]>>*/
	<</if>>
	<<if _rejoinD<=$time>>
		<<if $DesertedCompanions.length > 1>>
		@@.alert1; Your deserted party comes into sight. At first they seem happy they found you, but then you get some angry rants and have to apologize profusely before everything goes back to normal.<br>
		<<else>>
		@@.alert1; $DesertedCompanions[0].name comes in sight. After an initially happy reunion you end up hearing some angry ranting. It is not until after quite a bit of apologizing that things return to normal.<br>
		<</if>>
		<<set _temp=$DesertedCompanions.length-1>>
		<<for _i = _temp; _i >-1; _i-->>
			/*<<if $DesertedCompanions[_i].name=="Khemia">>
				<<set $timeRed+=2>>
			<</if>>*/
			<<set $hiredCompanions.push($DesertedCompanions[_i])>>
			<<set $DesertedCompanions.deleteAt(_i)>>
		<</for>>
	<</if>>

	<<if $companionsDepartT<$time-7>>
		<<for _i = 0; _i < $DesertedCompanions.length; _i++>>
			<<if $DesertedCompanions[_i].name == 'Maru'>>
				<<set $companionMaru.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == 'Lily'>>
				<<set $companionLily.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == 'Khemia'>>
				<<set $companionKhemia.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == 'Cherry'>>
				<<set $companionCherry.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == 'Cloud'>>
				<<set $companionCloud.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == 'Saeko'>>
				<<set $companionSaeko.affec -= 1>>
			<</if>>
			<<if $DesertedCompanions[_i].name == $companionTwin.name>>
				<<set $companionTwin.affec -= 1>>
			<</if>>
		<</for>>
	<</if>>

<</if>>

/* $PulseBloomUse used to be initialized as an array, so check carefully. */
<<set _pulseBloomInUse = $PulseBloomUse !== "" && !Array.isArray($PulseBloomUse)>>

<<if _pulseBloomInUse && $time-2 > $PulseBloomDate >>
	<<set $mc.osex = $PulseBloomStorage.osex>>
	<<set $mc.obreasts = $PulseBloomStorage.obreasts>>
	<<set $mc.openis = $PulseBloomStorage.openis>>
	<<set $mc.ogender = $PulseBloomStorage.ogender>>
	<<set $mc.oheight = $PulseBloomStorage.oheight>>
	<<set $mc.age = Math.max($PulseBloomStorage.age, 18)>> /* Prevent instant bad end. */
	<<set $mc.ohair = $PulseBloomStorage.ohair>>
	<<set $mc.oskinColor = $PulseBloomStorage.oskinColor>>
	<<set $mc.oeyeColor = $PulseBloomStorage.oeyeColor>>
	<<set $mc.desc = "">>
	<<set $mc.fit -= $PulseBloomStorage.fit>>
	<<set $PulseBloomDate = setup.never>>
	<<set $PulseBloomUse="">>
	<<CarryAdjust>>
<</if>>
<</widget>>

:: Pregnancy Check widget[widget nobr]
<<widget "PregCheck">>
<<set _temp = random(0,100)>>

<<if _temp <= 100 * $pregChance && !setup.isPregnant($mc) && $menCycleFlag>>
	<<if $playerCurses.some(e => e.name === "Eggxellent")>>
		<<set $EggsFertilized = true>>
	<<else>>
		<<set setup.setConsideredPregnant($mc)>>
		<<set $menCycleFlag = false>>
	<</if>>
<</if>>

<</widget>>

:: Pregnancy Check widget for the whole party with a monster encounter[widget nobr]
<<widget "MonsterPregCheckParty">>
<<for _i=0; _i<$hiredCompanions.length; _i++ >>
	<<set _temp = random(0,100)>>
	<<if $hiredCompanions[_i].curses.some(e => e.name === "Omnitool") && $hiredCompanions[_i].womb > 0 && (_temp < 20 || $hiredCompanions[_i].curses.some(e => e.name === "Absolute Pregnancy")) && !$hiredCompanions[_i].curses.some(e => e.name === "Absolute Birth Control")>>
		<<set setup.setConsideredPregnant($hiredCompanions[_i])>>
	<</if>>
<</for>>
<</widget>>

:: Carry adjustment widget [widget nobr]
<<widget "CarryAdjust">>
<<Equipment>>
<<Handicap>>
<<UpdateAttributes>>
<<Update_Misc_Stat>>

<<if $playerCurses.some(e => e.name === "Weakling")>>
	<<set $ocarryWeight = 7.5>>
<</if>>

<<set _fitCor = $mc.curses.some(e => e.name === "Weakling") ? 0 : $mc.fit>>
<<if $mc.osex == 'male'>>
	<<set $carryWeight = $mc.heightCor / $mc.oheight * ($ocarryWeight + 0.5 * (_fitCor - 5 - $mc.gender + 1))>>
<<else>>
	<<set $carryWeight = $mc.heightCor / $mc.oheight * ($ocarryWeight + 0.5 * (_fitCor - 5 - $mc.gender + 6))>>
<</if>>

<<set $carryWeight = $carryWeight*(1+ $mc.HandicapCarry/10)>>

<<if $DaedalusFly==true>>
	<<set $carryWeight = Math.ceil($carryWeight/2)>>
<</if>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<if $ownedRelics[$i].name == "Pocket Hoard">>
		<<if $ownedRelics[$i].active == 1>>
			<<set $carryWeight += 9999>>
		<</if>>
	<</if>>
<</for>>

<<set $totalCarry = $carryWeight>>

<<if $hiredCompanions.some(e => e.name === "Maru")>>
	<<set $totalCarry += $companionMaru.carry>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Lily")>>
	<<set $totalCarry += $companionLily.carry>>
	<<if $LilyConvo1>>
		<<set $totalCarry += 5>>
	<</if>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Khemia")>>
	<<set $totalCarry += $companionKhemia.carry>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Cherry")>>
	<<set $totalCarry += $companionCherry.carry>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Cloud")>>
	<<set $totalCarry += $companionCloud.carry>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Saeko")>>
	<<set $totalCarry += $companionSaeko.carry>>
<</if>>

<<if $hiredCompanions.some(e => e.name === "Golem")>>
	<<set $totalCarry += $companionGolem.carry>>
<</if>>

<<if $playerCurses.some(e => e.name === "Double Trouble")>>
	/*<<set $totalCarry += $companionTwin.carry>>*/
	<<set $totalCarry +=$carryWeight>>
<</if>>

<</widget>>

:: Miscellaneous appearance adjustment widget [widget nobr]
<<widget "AppearanceCorrect">>
<<for _i=0; _i<=$hiredCompanions.length; _i++>>
	<<if _i==$hiredCompanions.length>>
		<<set _handle = $mc>>
	<<else>>
		<<if $hiredCompanions[_i].name == $companionTwin.name >>
			<<set _name = "Twin">>
		<<else>>
			<<set _name = $hiredCompanions[_i].name>>
		<</if>>
		<<print "<<set _handle  = $companion"+ _name +" >>">>
	<</if>>
	<<set _handle.hair = _handle.ohair>> 
	<<if _name != "Golem">>
		<<set _handle.ears= "normal human">>
	<</if>>

	<<set _handle.bodyHair= 1>>
	<<set _handle.skinType= "">>
	<<set _handle.skinColor= _handle.oskinColor>>
	<<set _handle.eyeColor= _handle.oeyeColor>>
	<<set _handle.tail= []>>

	<<set _handle.desc= "">>
	<<set _handle.blood="red">>

	<<for _appearEvent range _handle.curses>>
		<<if _appearEvent.name == "Hair Removal">>
			<<set _handle.skinType = "hairless, smooth">>
			<<set _handle.bodyhair = 0>>
		<</if>>

		<<if _appearEvent.name == "Knife-ear">>
			<<set _handle.ears = "pointed, elfish">>
		<</if>>

		<<if _appearEvent.name == "Perma-dye">>
			<<set _handle.hair = $curse7.variation>>
		<</if>>

		<<if _appearEvent.name == "Fluffy Ears">>
			<<set _handle.ears = $curse17.variation>>
		<</if>>

		<<if _appearEvent.name == "Fluffy Tail">>
			<<set _handle.tail.push($curse18.variation)>>
		<</if>>

		<<if _appearEvent.name == "Maximum Fluff">>
			<<set _handle.skinType = $curse19.variation>>
			<<set _handle.bodyhair = 1>>
		<</if>>

		<<if _appearEvent.name == "Gooey">>
			<<set _handle.skinType = "sticky, slimy">>
			<<set _handle.bodyhair = 0>>
		<</if>>

		<<if _appearEvent.name == "Rainbow Swirl">>
			<<set _handle.skinColor= $curse38.variation>>
			<<set _handle.eyeColor= $curse38.variation2>>
		<</if>>

		<<if _appearEvent.name == "Tipping the Scales">>
			<<set _handle.skinType = "reptilian scaled">>
			<<set _handle.bodyhair = 0>>
			<<set _handle.skinColor = $curse54.variation>>
		<</if>>	
		
		<<if _appearEvent.name == "Reptail">>
			<<set _handle.tail.push("large, spiked, scaled reptile")>>
		<</if>>
		
		<<if _appearEvent.name == "Cellulose">>
			<<set _handle.skinType = "smooth, slightly rigid, plant-like">>
			<<set _handle.bodyhair = 0>>
		<</if>>

		<<if _appearEvent.name == "Chlorophyll">>
			<<set _handle.skinType = "Green">>
		<</if>>

		<<if _appearEvent.name == "Carapacian">>
			<<set _handle.skinType = "hard, shiny, chitin-exoskeleton">>
			<<set _handle.skinColor = $curse69.variation >>
			<<set _handle.bodyhair = 0>>
		<</if>>

		<<if _appearEvent.name == "Hemospectrum">>
			<<set _handle.blood = $curse70.variation>>
			<<set _handle.desc += "Your blood is now $mc.blood colored, not a typical color for humans. ">>
		<</if>>	

		<<if _appearEvent.name == "Drawing Spades">>
			<<set _handle.tail.push("cute, spade-tipped demon")>>
		<</if>>	

	<</for>>

<</for>>
<</widget>>

:: Flask Selecting first in order[widget nobr]
<<widget "FlaskFirst">>
<<set $flaskMatrix[8] = $items[0].count>>
<<set _j=0 >>

<<if $flaskPref == -1>>
	<<for _i=0; _i < $flaskMatrix.length; _i++ >>
		<<if $flaskMatrix[_i] > 0  >>
			<<set $flaskPref=_i>>
		<</if>>
	<</for>>
<</if>>

<<set $flaskMatrixOrderAvailable = [] >>
<<for _i=0; _i<$flaskMatrix.length; _i++ >>
	<<if $flaskMatrix[_i]>0 >>
	<<set _temp2=99>>
	<<set _temp0 = $flaskMatrixOrderAvailable.length+1>>
		<<for _j=0; _j<_temp0; _j++>>
			<<if $flaskMatrixOrderAvailable.length !==_j && _temp2==99>> /*checks if element is a new index or not*/
				<<set _temp= $flaskMatrixOrderAvailable[_j]>>
				<<if $flaskMatrixOrder[_temp] < $flaskMatrixOrder[_i]  >> /* check whether new weight should be in position of already present flask type*/
					<<set _temp2=_j>> /*if yes remember index where new flask type should be filled into available array */
				<</if>>
			<</if>>
			<<if _temp2 <_j >> /*check if loop is past considered index*/
				<<set _temp3 =_j>>
				<<set _temp1= $flaskMatrixOrderAvailable[_temp3]>>
				<<set $flaskMatrixOrderAvailable[_temp3]=_temp>>
				<<set _temp= _temp1>>
			<</if>>
		<</for>>

		<<if _temp2<99>>
			<<set $flaskMatrixOrderAvailable[_temp2] = _i >>
		<<else>>
			<<set _j-- >>
			<<set $flaskMatrixOrderAvailable[_j] = _i >>
		<</if>>

		<<if $flaskMatrixOrder[$flaskPref] < $flaskMatrixOrder[_i]>>
			<<set $flaskPref=_i>>
		<</if>>
	<</if>>
<</for>>
<</widget>>


:: Check party conversations [widget nobr]
<<widget "CheckParty">>
	<<silently>>
		<<include "Party overview">>
	<</silently>>
	<<if _numConvos > 1>>
		@@.alert1; There are _numConvos new conversations available!@@
	<<elseif _numConvos > 0>>
		@@.alert1; A new conversation is available!@@
	<</if>>
<</widget>>

:: Text output widgets [widget nobr]
<<widget "HornGrowthDesc">>
	<<if _args[1] == 1>>a<<else>>two<</if>>
	<<switch _args[0]>>
		<<case "demonic" "draconic">>
			_args[0]-looking
		<<case "unicorn" "rhino">>
			_args[0]-like
	<</switch>>
	horn<<if _args[1] > 1>>s<</if>>\
<</widget>>

<<widget "Numerical">>
	<<if _args.length < 3>>
		<<set _args[2] = "">>
	<</if>>
	<<if _args[0] == 1>>_args[1]<<else>>_args[2]<</if>>\
<</widget>>

<<widget "PluralS">><<if _args[0] > 1>>s<</if>><</widget>>

:: widget for random sex scene selection with companions [widget nobr]
<<widget "randomSexSelect">>
<<set _elligbleCompanions=[]>>
<<set _tempflag=false>>
<<if $playerCurses.some(e => e.name === "Absolute Pregnancy" || e.name === "Absolute Birth Control")  >>
	<<set _tempflag=true>>
<</if>>

<<if settings.MaleSceneToggleFilter || $playerCurses.some(e => e.name === "Equal Opportunity")>>
	<<set _temp=$hiredCompanions.filter(e => e.sex === "male")>>
	<<for _i=0; _i< _temp.length; _i++>>
		<<if _temp.name != "Golem" && !(_tempflag==true && _temp[_i].curses.some(e => e.name === "Absolute Pregnancy" || e.name === "Absolute Birth Control"))>>
			<<set _elligbleCompanions.push(_temp[_i])>>
		<</if>>
	<</for>>
<</if>>
<<if settings.FemaleSceneToggleFilter || $playerCurses.some(e => e.name === "Equal Opportunity")>>
	<<set _temp=$hiredCompanions.filter(e => e.sex === "female")>>
	<<for _i=0; _i< _temp.length; _i++>>
		<<if _temp.name != "Golem" && !(_tempflag==true && _temp[_i].curses.some(e => e.name === "Absolute Pregnancy" || e.name === "Absolute Birth Control"))>>
			<<set _elligbleCompanions.push(_temp[_i])>>
		<</if>>	
	<</for>>
<</if>>
<<if settings.OtherSceneToggleFilter || $playerCurses.some(e => e.name === "Equal Opportunity")>>
	<<set _temp=$hiredCompanions.filter(e => e.sex === "futa" || e.sex === "doll-like" )>>
	<<for _i=0; _i< _temp.length; _i++>>
		<<if _temp.name != "Golem" && !(_tempflag==true && _temp[_i].curses.some(e => e.name === "Absolute Pregnancy" || e.name === "Absolute Birth Control"))>>
			<<set _elligbleCompanions.push(_temp[_i])>>
		<</if>>
	<</for>>
<</if>>
<<if _elligbleCompanions.length> 0>>
	<<set _temp = random(0, _elligbleCompanions.length-1)>>
	<<if _elligbleCompanions[_temp].name==$companionTwin.name>>
		<<set _handle = $companionTwin>>
	<<else>>
		<<print "<<set _handle = $companion" + _elligbleCompanions[_temp].name + " >>">>
	<</if>>

	/* 
	<<for _i=0; _i<1; _i++>>
		<<set _randCompanion = random(0,$hiredCompanions.length-1)>>
		<<if ($hiredCompanions[_randCompanion].curses.some(e => e.name === "Absolute Pregnancy") && $playerCurses.some(e => e.name === "Absolute Birth Control")) || ($hiredCompanions[_randCompanion].curses.some(e => e.name === "Absolute Birth Control") && $playerCurses.some(e => e.name === "Absolute Pregnancy"))>>
			<<set _i -=1>>
		<</if>>
	<</for>>
	<<set _handle = $hiredCompanions[_randCompanion]>>*/
	<<include "SexAvailable">>
	<<set _temp = random(-2,2)+$mc.subdom-_handle.subdom>>
	<<if _temp > 0>>

		<<for _i=0; _i<1; _i++>>
		<<set _j =random(0, _sexOptions.length-1) >>
			<<if _sexOptions[_j].contains("Sub") && !_sexOptions[_j].contains("Pull Out")>>
				<<set _selection = _sexOptions[_j]>>
			<<else>>
				<<set _i -=1>>
			<</if>>
		<</for>>

	<<elseif _temp< 0>>

		<<for _i=0; _i<1; _i++>>
		<<set _j =random(0, _sexOptions.length-1)>>
			<<if _sexOptions[_j].contains("Dom") && !_sexOptions[_j].contains("Pull Out")>>
				<<set _selection = _sexOptions[_j]>>
			<<else>>
				<<set _i -=1>>
			<</if>>
		<</for>>

	<<elseif _temp == 0>>

		<<for _i=0; _i<1; _i++>>
		<<set _j = random(0, _sexOptions.length-1)>>
			<<if !_sexOptions[_j].contains("Pull Out")>>
				<<set _selection = _sexOptions[_j]>>
			<<else>>
				<<set _i -=1>>
			<</if>>
		<</for>>

	<</if>>
<<else>>
	<<set _selection="Self">>
<</if>>

<</widget>>

:: SexAvailable [nobr]
<<set _sexOptions = []>>
<<if _handle.sex != "doll-like" >>
	<<set _sexOptions.push("Oral Dom")>>
<</if>>
<<if $mc.sex != "doll-like" >>
	<<set _sexOptions.push("Oral Sub")>>
<</if>>
<<if _handle.doublePenis == true && $mc.vagina > 0 >>
	<<set _sexOptions.push("DP Sub")>>
<</if>>
<<if $mc.doublePenis == true && _handle.vagina > 0 >>
	<<set _sexOptions.push("DP Dom")>>
<</if>>
<<if _handle.penisCor>=2>>
	<<set _sexOptions.push("Anal Sub")>>
	<<if $mc.penisCor >= 2>>
		<<set _sexOptions.push("Anal Dom")>>
		<<if _handle.vagina > 0>>
			<<set _sexOptions.push("Regular Dom")>>
			<<set _sexOptions.push("Regular Alt Sub")>>
			<<set _sexOptions.push("Pull Out Dom")>>
		<</if>>
		<<if _handle.breastsCor > 2 >>
			<<set _sexOptions.push("Boobjob Sub")>>
		<</if>>
	<</if>>
	<<if $mc.vagina > 0>>
		<<set _sexOptions.push("Regular Sub")>>
		<<set _sexOptions.push("Regular Alt Dom")>>
		<<set _sexOptions.push("Pull Out Sub")>>
	<</if>>
	<<if $mc.breastsCor > 2>>
		<<set _sexOptions.push("Boobjob Sub")>>
	<</if>>
<<else>>
	<<if $mc.penisCor >= 2>>
		<<set _sexOptions.push("Anal Dom")>>
		<<if _handle.vagina > 0>>
			<<set _sexOptions.push("Regular Dom")>>
			<<set _sexOptions.push("Regular Alt Sub")>>
			<<set _sexOptions.push("Pull Out Dom")>>
		<</if>>
		<<if _handle.breastsCor > 2 >>
			<<set _sexOptions.push("Boobjob Dom")>>
		<</if>>
	<<else>>
		<<set _sexOptions.push("Sex Scissor Sub/Dom")>>
	<</if>>
<</if>>

:: Collect Relic widget [widget nobr]
<<widget "CollectRelic">>
<<capture _relic _travelTime>>
	<<set _relic = _args[0]>>
	<<if !setup.passingTime()>>
		<<StartTraveling _relic.time `-$SibylBuff`>>
	<</if>>
	<<PassTimeWithEvents>>
	<<if !setup.passingTime()>>
		<<set $ownedRelics.push(_relic)>>
		<<set $corruption -= Math.max(_relic.corr - $corRed + ($currentLayer != 6 ? 5 * Math.trunc($hexflame / 10) : 0), 0)>>
		<<if _relic.pic>>
			[img[setup.ImagePath + _relic.pic]]<br>
		<</if>>
	<</if>>
<</capture>>
<</widget>>

:: Equipped items and Relics widget [widget nobr]
<<widget "Equipment">>

<<if !$ownedRelics.some(e => e.name === "Heart-stealing Stole")>>
	<<set $hsswear = 0>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Solace Lace")>>
	<<set $slwear = 0>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Event Horizon")>>
	<<set $EventHorizonWear = false>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Chain of Lorelei")>>
	<<set $colwear = 0>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Blind Divine")>>
	<<set $BDwear = false>>
<</if>>

<<if $ownedRelics.some(e => e.name === "Heavy is the Head")>>
	<<if $HeavyHeadwear && $IQdrop < 900>>
		<<set $IQdrop += 999>>
	<</if>>
<<else>>
	<<set $HeavyHeadwear = false>>
	<<if $IQdrop > 900>>
		<<set $IQdrop -= 999>>
	<</if>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Sibyl Blend")>>
	<<set $SibylBuff = 0>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Brave Vector")>>
	<<set $slingshot = 0>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Daedalus Mechanism")>>
	<<set $DaedalusEquip = false>>
	<<set $DaedalusFly = false>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Aeonglass with Endless Time")>>
	<<set $EndlessAeonglass = false>>
<</if>>

<<set $ManagedMisfortuneMax = 2 * $ownedRelics.filter(e => e.name === "Managed Misfortune").length>>
<<for $StoredCurse.length > $ManagedMisfortuneMax>>
	<<set _curse = $StoredCurse.pop()>>
	<<set _activeIndex = $ManagedMisfortuneActive.findIndex(e => e.name === _curse.name)>>
	<<if _activeIndex !== -1>>
		<<RemoveCurse _curse>>
		<<set $ManagedMisfortuneActive.deleteAt(_activeIndex)>>
	<</if>>
<</for>>

<<if !$ownedRelics.some(e => e.name === "Lightning Rook")>>
	<<set $LightningWear = false>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Luminous Phantasmagoria")>>
	<<set $LuminousWear = false>>
<</if>>

<<if !$ownedRelics.some(e => e.name === "Lambent Specter")>>
	<<set _i = $hiredCompanions.findIndex(e => e.name === "Golem")>>
	<<for _i !== -1>>
		<<set $hiredCompanions.deleteAt(_i)>>
		<<set _i = $hiredCompanions.findIndex(e => e.name === "Golem")>>
	<</for>>
<</if>>

<<if $abyssKnowCheatoff>>
	<<set $abyssKnow = 0>>
<<elseif $items[5].count > 0 || setup.haveSmartphone || $hiredCompanions.some(c => c.name === "Saeko")>>
	<<set $abyssKnow = 1>>
<<else>>
	<<set $abyssKnow = 0>>
<</if>>

<</widget>>

:: Affection widget [widget nobr]
<<widget "AffectionChange">>
<<if _args[0] == $companionTwin.name>>
	<<set $companionTwin.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Maru">>
	<<set $companionMaru.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Lily">>
	<<set $companionLily.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Khemia">>
	<<set $companionKhemia.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Cherry">>
	<<set $companionCherry.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Cloud">>
	<<set $companionCloud.affec += _args[1] + $hsswear>>
<<elseif _args[0] == "Saeko">>
	<<set $companionSaeko.affec += _args[1] + $hsswear>>
<</if>>
<</widget>>
