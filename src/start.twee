:: Start [start]

@@.layerTitle;
!Abyss Diver Interactive
@@\
<<= '<img src="' + setup.ImagePath + 'abyssdiverposteredited.png" class="half-img">' >>
Welcome to the Twine adaptation of the Abyss Diver CYOA! (Adapted with love by FloricSpacer). Thanks to all the people the assisted with the development of this game in any way.

<button class="center-btn dark-btn obsidian" data-passage="Credits" data-setter="$temp = 0">Credits</button>
At times, you'll be presented with open-ended options to use a combination of Relics to overcome obstacles. This feature is designed to encourage creative solutions that may not be explicitly coded into the game. Although these situations may not arise frequently in the early layers, later layers will require more ingenuity in dealing with threats that can't be explicitly addressed. <b>Choose this option only if you have a viable plan that effectively deals with the threat and isn't already listed as an option on the page!</b>

We appreciate your feedback on the game's design, gameplay, and writing or any bugs you may encounter. Your suggestions will help us enhance the gaming experience for everyone!

This game allows you to use an OpenAI API key to generate player portraits automatically, taking into account all of your transformations and changes to your appearance. You can disable this option in settings. You can add your API key and generater the images from the appearance menu. If you want to use this feature, but aren't sure how, click the link below for a brief guide on getting an API key!

<button class="center-btn dark-btn obsidian" data-passage="API Key Guide">API Key Guide</button>
<div style="margin-bottom: 20px;">\
For those interested in viewing the latest code or content changes or contributing to the project, please visit our public Github repository! There is also a fan-made wiki available! However, it is full of spoilers, so it is strongly recommended to not look at it for a first dive! You can also join our Discord server, where we have regular discussion regarding the game and development.
</div>
<div style="display: flex; justify-content: center; gap: 20px;">
<a href="https://github.com/FloricSpacer/AbyssDiver" target="_blank" style="display: inline-flex; justify-content: center; align-items: center; font-size: 0; background: #000a; border: 8px solid transparent; border-image: url('images/bordershop.png') 82 / 20px / 10px round; box-shadow: 0 0 4px 0 black; width: min-content; line-height: 1.5; text-align: center; padding: 8px;">
<span style="display: inline-block; width: 64px; height: 64px; background-color: transparent;">
<img src="images/icons/github-icon.png" alt="Github Repository" style="width: 64px; height: 64px; filter: invert(1);">
</span>
</a>
<a href="https://abyss-diver.fandom.com/wiki/Abyss_Diver_Interactive_Wiki" target="_blank" style="display: inline-flex; justify-content: center; align-items: center; font-size: 0; background: #000a; border: 8px solid transparent; border-image: url('images/bordershop.png') 82 / 20px / 10px round; box-shadow: 0 0 4px 0 black; width: min-content; line-height: 1.5; text-align: center; padding: 8px;">
<span style="display: inline-block; width: 64px; height: 64px; background-color: transparent;">
<img src="images/icons/wiki-icon.png" alt="Fan-made Wiki" style="width: 64px; height: 64px; filter: invert(1);">
</span>
</a>
<a href="https://discord.gg/gXnq5rmjxG" target="_blank" style="display: inline-flex; justify-content: center; align-items: center; font-size: 0; background: #000a; border: 8px solid transparent; border-image: url('images/bordershop.png') 82 / 20px / 10px round; box-shadow: 0 0 4px 0 black; width: min-content; line-height: 1.5; text-align: center; padding: 8px;">
<span style="display: inline-block; width: 64px; height: 64px; background-color: transparent;">
<img src="images/icons/discord-icon.png" alt="Discord Server" style="width: 64px; height: 64px; filter: invert(1);">
</span>
</a>
</div>

<b>This game is very NSFW</b>, as it contains both sexual and potentially disturbing imagery, so you should not play if you are not at least 18 years old! However, if you're at least 18 years old and prepared to brave the depths of the Abyss, proceed.

<div class="btn-adventure-container">
	<button class="btn-adventure" data-passage="Start 2">Begin your adventure</button><<set setup.devilsReroll = 0>>
</div>

:: Start 2 [start nobr cards]

<h1>Difficulty Select</h1>

<div class="cards-grid">
    <div>
		<img src="images/Surface/easymode.png" alt="Easy Mode Icon">
        <h2>Easy Mode</h2>
        <p class="cost">Beginner</p>
        <button class="dark-btn steel" data-passage="Start 3" data-setter="$items[0].count += 14; $items[1].count += 14; $compTok = 1; $easymode=true">Easy Mode</button>
        <p>Begin with two weeks worth of food and water, plus the ability to recruit the the most experienced companion, Khemia, for free. While this mode makes early exploration a little easier, it's not recommended as it may diminish some of the feeling of overcoming the dangers of the Abyss in early layers. No content is lost in this mode.</p>
    </div>
    
    <div>
        <img src="images/Surface/normalmode.png" alt="Normal Mode Icon">
		<h2>Normal Mode</h2>
        <p class="cost">Recommended</p>
        <button class="dark-btn steel" data-passage="Start 3">Normal Mode</button>
        <p>Normal difficulty - ideal for most players. You can expect the Abyss to become fairly harsh and challenging if you aren't adequately prepared.</p>
    </div>
    
    <div>
        <img src="images/Surface/advancedmode.png" alt="Advanced Mode Icon">
		<h2>Advanced Mode</h2>
        <p class="cost">Experienced</p>
        <button class="dark-btn steel" data-passage="Start 3" data-setter="$corruption = -50">Advanced Mode</button>
        <p>For experienced players familiar with the Abyss. Reduces starting corruption points by 50 to balance your advanced knowledge. Recommended for players who have previously played the game.</p>
    </div>
</div>

:: Gender Selection [nobr]

<div class="gender-container">
<<if $mc.osex === "male">>
    <button class="gender-btn gender-btn-male active" data-passage="Start Appearance" data-setter="$mc.mindSex = 'male'; $mc.osex = 'male'; $mc.openis = 6; $mc.obreasts = 0;">♂</button>
    <button class="gender-btn gender-btn-female" data-passage="Start Appearance" data-setter="$selectedGender = 'female'; $mc.mindSex = 'female'; $mc.osex = 'female'; $mc.openis = 0; $mc.obreasts = 3;">♀</button>
<<else>>
    <button class="gender-btn gender-btn-male" data-passage="Start Appearance" data-setter="$mc.mindSex = 'male'; $mc.osex = 'male'; $mc.openis = 6; $mc.obreasts = 0;">♂</button>
    <button class="gender-btn gender-btn-female active" data-passage="Start Appearance" data-setter="$selectedGender = 'female'; $mc.mindSex = 'female'; $mc.osex = 'female'; $mc.openis = 0; $mc.obreasts = 3;">♀</button>
<</if>>
</div>

<<if $mc.osex === "male">>
	<<if $mc.openis < 1>>
		<<set $mc.openis = 1>>
	<</if>>
	<<set $mc.ogender = 1>>
<<else>>
	<<set $mc.openis = 0>>
	<<set $mc.ogender = 6>>
	<<set $mc.osex = "female">>
	<<if $mc.obreasts < 1>>
		<<set $mc.obreasts = 1>>
	<</if>>
<</if>>

:: Start 3 [start]

<img @src="setup.ImagePath+'icon.png'" class="floatr">\
Alright! Before you embark on your journey into the Abyss, we need to get some details about you. Don't worry, this isn't some bureaucratic nonsense – it's for your own safety and identification. After all, the Abyss has a way of... changing people.


Please fill out the form below to describe yourself. Remember, while you're jotting down your current features, keep in mind that some of these might, well, evolve as you dive deeper into the Abyss. The Miasma works in mysterious ways, and who knows what you might look like after a few Curses?

<button class="dark-btn obsidian" data-passage="Start Appearance">Continue</button>

:: Start Appearance

<<nobr>>
<div id="genderSelection">
<<include "Gender Selection">>
</div>
Name:<br>
<<textbox "$mc.name" $mc.name>><br>
<table class="character-table">
  <tr>
    <td style="width: 20%;">
		<h3>Body Build</h3>
		<label><input type="radio" id="fitness15" name="fitness" value="-5" onchange="updateDisplay(this.value)">Very Weak</label>
		<label><input type="radio" id="fitness18" name="fitness" value="-2" onchange="updateDisplay(this.value)">Weak</label>
		<label><input type="radio" id="fitness20" name="fitness" value="0" onchange="updateDisplay(this.value)" checked>Average</label>
		<label><input type="radio" id="fitness22" name="fitness" value="2" onchange="updateDisplay(this.value)">Fit</label>
		<label><input type="radio" id="fitness25" name="fitness" value="5" onchange="updateDisplay(this.value)">Very Fit</label>
		Your initial carrying capacity is: <span id="capacityValue"></span>
		<p id="description"></p>
	</td>
    <td style="width: 20%;">
      <h3>Hair Color</h3>
      <label><<radiobutton "$mc.ohair" "black" autocheck>> Black</label>
      <label><<radiobutton "$mc.ohair" "brown" autocheck>> Brown</label>
      <label><<radiobutton "$mc.ohair" "blonde" autocheck>> Blonde</label>
      <label><<radiobutton "$mc.ohair" "red" autocheck>> Red</label>
      <label><<radiobutton "$mc.ohair" "gray" autocheck>> Gray</label>
    </td>
    <td style="width: 20%;">
      <h3>Eye Color</h3>
      <label><<radiobutton "$mc.oeyeColor" "blue" autocheck>> Blue</label>
      <label><<radiobutton "$mc.oeyeColor" "brown" autocheck>> Brown</label>
      <label><<radiobutton "$mc.oeyeColor" "gray" autocheck>> Gray</label>
      <label><<radiobutton "$mc.oeyeColor" "green" autocheck>> Green</label>
      <label><<radiobutton "$mc.oeyeColor" "hazel" autocheck>> Hazel</label>
      <label><<radiobutton "$mc.oeyeColor" "amber" autocheck>> Amber</label>
    </td>
    <td style="width: 20%;">
      <h3>Skin Color</h3>
      <label><<radiobutton "$mc.oskinColor" "pale" autocheck>> Pale</label>
      <label><<radiobutton "$mc.oskinColor" "tanned" autocheck>> Tanned</label>
      <label><<radiobutton "$mc.oskinColor" "olive" autocheck>> Olive</label>
      <label><<radiobutton "$mc.oskinColor" "brown" autocheck>> Brown</label>
      <label><<radiobutton "$mc.oskinColor" "dark brown" autocheck>> Dark Brown</label>
    </td>
  </tr>
  <tr>
    <td>
      <<if $mc.osex === "female">>
        <h3>Breast Size</h3>
        <label><<radiobutton "$mc.obreasts" 0 autocheck>> Flat (Masculine)</label>
        <label><<radiobutton "$mc.obreasts" 1 autocheck>> AA</label>
        <label><<radiobutton "$mc.obreasts" 2 autocheck>> A</label>
        <label><<radiobutton "$mc.obreasts" 3 autocheck>> B</label>
        <label><<radiobutton "$mc.obreasts" 4 autocheck>> C</label>
        <label><<radiobutton "$mc.obreasts" 5 autocheck>> D</label>
        <label><<radiobutton "$mc.obreasts" 6 autocheck>> DD</label>
        <label><<radiobutton "$mc.obreasts" 7 autocheck>> E</label>
        <label><<radiobutton "$mc.obreasts" 8 autocheck>> F</label>
      <</if>>
      <<if $mc.osex === "male">>
        <h3>Penis Size (cm)</h3>
        <div class="slider-container">
            <input type="range" id="penisSlider" class="vertical-slider" min="4" max="25" value="15" oninput="updatePenis(this.value)">
            <div>
                <input type="number" id="penisInput" class="slider-value" value="15" min="0" oninput="updatePenisSlider(this.value)">
                <span id="penisConversion">(5.9")</span>
            </div>
            </div>
      <</if>>
    </td>
    <td>
      <h3>Height (cm)</h3>
      <div class="slider-container">
            <input type="range" id="heightSlider" class="vertical-slider" min="140" max="220" value="170" oninput="updateHeight(this.value)">
            <div>
                <input type="number" id="heightInput" class="slider-value" value="170" min="0" oninput="updateHeightSlider(this.value)">
                <span id="heightConversion">(5'7")</span>
            </div>
        </div>
    </td>
    <td>
      <h3>Age</h3>
      <div class="slider-container">
        <input type="range" id="ageSlider" class="vertical-slider" min="18" max="60" value="30" oninput="updateAge(this.value)">
        <input type="number" id="ageInput" class="slider-value" value="30" min="18" max="60" oninput="updateAgeSlider(this.value)">
      </div>
    </td>
    <td></td>
  </tr>
</table>
<</nobr>>\
<button class="dark-btn obsidian" data-passage="Start Portrait Choose">Continue</button>

<script>
function updateDisplay(value) {
	SugarCube.State.variables.mc.fit = parseInt(value);
    let adjustedValue = 20 + SugarCube.State.variables.mc.fit;
    document.getElementById("capacityValue").innerHTML = adjustedValue;
    let description = "";
    if (adjustedValue <= 16) {
        description = "You're out of shape.";
    } else if (adjustedValue <= 18) {
        description = "You could use some exercise.";
    } else if (adjustedValue <= 21) {
        description = "You're average.";
    } else if (adjustedValue <= 23) {
        description = "You're in shape.";
    } else {
        description = "You've taken very good care of yourself.";
    }
    document.getElementById("description").innerHTML = description;
}

function updateHeight(value) {
    document.getElementById("heightInput").value = value;
    SugarCube.State.variables.mc.oheight = parseInt(value);
}

function updateHeightSlider(value) {
    document.getElementById("heightSlider").value = value;
    SugarCube.State.variables.mc.oheight = parseInt(value);
}

function updatePenis(value) {
    document.getElementById("penisInput").value = value;
    SugarCube.State.variables.mc.openis = parseInt(value);
}

function updatePenisSlider(value) {
    document.getElementById("penisSlider").value = value;
    SugarCube.State.variables.mc.openis = parseInt(value);
}

function updateAge(value) {
    document.getElementById("ageInput").value = value;
    SugarCube.State.variables.mc.age = parseInt(value);
}

function updateAgeSlider(value) {
    document.getElementById("ageSlider").value = value;
    SugarCube.State.variables.mc.age = parseInt(value);
}

function cmToFeetInches(cm) {
  const inches = cm / 2.54;
  const feet = Math.floor(inches / 12);
  const remainingInches = Math.round(inches % 12);
  return `${feet}'${remainingInches}"`;
}

function cmToInches(cm) {
  return (cm / 2.54).toFixed(1);
}

function updateHeight(value) {
  document.getElementById("heightInput").value = value;
  document.getElementById("heightConversion").textContent = `(${cmToFeetInches(value)})`;
  SugarCube.State.variables.mc.oheight = parseInt(value);
}

function updateHeightSlider(value) {
  document.getElementById("heightSlider").value = value;
  document.getElementById("heightConversion").textContent = `(${cmToFeetInches(value)})`;
  SugarCube.State.variables.mc.oheight = parseInt(value);
}

function updatePenis(value) {
  document.getElementById("penisInput").value = value;
  document.getElementById("penisConversion").textContent = `(${cmToInches(value)}")`;
  SugarCube.State.variables.mc.openis = parseInt(value);
}

function updatePenisSlider(value) {
  document.getElementById("penisSlider").value = value;
  document.getElementById("penisConversion").textContent = `(${cmToInches(value)}")`;
  SugarCube.State.variables.mc.openis = parseInt(value);
}

updateDisplay(0);
</script>

:: Start Portrait Choose

Now that you've told us your information, it's time to take your picture for our records!

In this game, there are a few ways to choose your character's portrait. First, is using AI model to generate your portrait. That will ensure that no matter what changes you undergo, your portrait can match what you look like. However, that option requires setting up an OpenAI API key and costs around $0.04 per image in API costs. (Unless you're comfortable using a local AI image program to make the images for free)

<button class="center-btn dark-btn obsidian" data-passage="API Key Guide">API Key Guide</button>

Second, you can upload your own image in and enable the Portrait Override setting. You must place the image in the GeneratedPortraits folder and replace the existing image there and rename your image so that it has the same name.

Finally, we have a small selection of pre-made portraits. These only change based on your gender, and are otherwise static. This is the simplest option, but also the least reactive to changes.

Which sort of portait would you like?

<button class="dark-btn obsidian" data-passage="Start Portrait AI">AI-Generated Portrait</button>

<button class="dark-btn obsidian" data-passage="Start Portrait Custom">Custom Portrait</button>

<button class="dark-btn obsidian" data-passage="Start Portrait Preset">Preset Portrait</button>






<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=true" style="padding: 12px 24px; font-size: 18px;">Arrive at Outset Town</button>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=false">Quick Start</button> (Skips introduction - not recommended for new players)


:: Start Portrait AI

This game allows you to use an OpenAI API key to generate player portraits automatically, taking into account all of your transformations and changes to your appearance. You can disable this option in settings. You can add your API key and generater the images from the appearance menu. If you want to use this feature, but aren't sure how, click the link below for a brief guide on getting an API key!

<button class="center-btn dark-btn obsidian" data-passage="API Key Guide">API Key Guide</button>

<<nobr>>
<div class="relicToggleEntry">
    <div>The Abyss can change you. Do you want to use an OpenAI API key to generate your portrait as you change?</div>
    <div><<printHTML `toggle(v => settings.AIPortraitsMode = v, settings.AIPortraitsMode)`>></div>
</div>
<</nobr>>

When you're done with that, please click the button below to start the game!

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=true" style="padding: 12px 24px; font-size: 18px;">Arrive at Outset Town</button>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=false">Quick Start</button> (Skips introduction - not recommended for new players)


:: Start Portrait Custom

To upload your own portrait, ensure you have a .png image and place it in the game's files folder. Rename it so that you can replace the image at images/GeneratedPortraits/CharacterPortraitOverride.png. Then click the button below to start the game!

<<nobr>>
<div class="relicToggleEntry">
    <div>Some divers prefer to use their own portraits. Would you like to override any AI portraits with your own static choice of portrait? This requires the previous setting to be on.</div>
    <div><<printHTML `toggle(v => settings.OverridePortrait = v, settings.OverridePortrait)`>></div>
</div>
<</nobr>>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=true" style="padding: 12px 24px; font-size: 18px;">Arrive at Outset Town</button>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=false">Quick Start</button> (Skips introduction - not recommended for new players)


:: Start Portrait Preset

Say cheese! Choose the portrait which best suits you below.

<<include "Portrait Selector">>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=true" style="padding: 12px 24px; font-size: 18px;">Arrive at Outset Town</button>

<button class="dark-btn obsidian" data-passage="Start 4" data-setter="$intro=false">Quick Start</button> (Skips introduction - not recommended for new players)



:: Start Settings [nobr]

<h3>Content Preferences</h3>
<p>The Abyss can be... intimate at times. Please indicate your comfort levels:</p><br>

<div class="relicToggleEntry">
    <div>Are you comfortable with encounters involving male characters?</div>
    <div><<printHTML `toggle(v => settings.MaleSceneToggleFilter = v, settings.MaleSceneToggleFilter)`>></div>
</div><br>

<div class="relicToggleEntry">
    <div>Are you comfortable with encounters involving female characters?</div>
    <div><<printHTML `toggle(v => settings.FemaleSceneToggleFilter = v, settings.FemaleSceneToggleFilter)`>></div>
</div><br>

<div class="relicToggleEntry">
    <div>Are you comfortable with encounters involving... unique individuals? Neither conventionally male or female?</div>
    <div><<printHTML `toggle(v => settings.OtherSceneToggleFilter = v, settings.OtherSceneToggleFilter)`>></div>
</div><br>

<div class="relicToggleEntry">
    <div>Some things in the Abyss can dramatically alter your form. Are you uncomfortable with voluntary... amputations? They can be uncomfortable for some people to see.</div>
    <div><<printHTML `toggle(v => settings.amputationHidden = v, settings.amputationHidden)`>></div>
</div><br>

<div class="relicToggleEntry">
    <div>There are reports of giant arachnids in the Abyss, though most divers don't consider them to be a major concern. Would you prefer we hide any images of them?</div>
    <div><<printHTML `toggle(v => settings.ArachnophobiaMode = v, settings.ArachnophobiaMode)`>></div>
</div><br>

<p>Remember, brave diver, these choices are for your safety. The Abyss is vast and dangerous, and it's impossible to tell what will happen down there. Are you ready to descend into the unknown?</p><br>

<button class="dark-btn obsidian" data-passage="Start 3">Begin your journey</button>


:: Start 4 [surface nobr]
<<set $ocarryWeight = 20>>
<<if $mc.osex === "male">>
	<<if $mc.openis < 1>>
		<<set $mc.openis = 1>>
	<</if>>
	<<set $mc.ogender = 1>>
    <<set $mc.obreasts = 0>>
<<else>>
	<<set $mc.openis = 0>>
	<<set $mc.ogender = 6>>
	<<set $mc.osex = "female">>
	<<if $mc.obreasts < 1>>
		<<set $mc.obreasts = 1>>
	<</if>>
	<<set $menCycleFlag = true>>
	<<set $menFirstCycle = false>>
	<<set $menCycleT_flag = true>>
	<<set $heatCycleT_flag = true>>
<</if>>
<<set $mc.desiredBreasts = $mc.obreasts>>
<<set $carryWeight = $ocarryWeight>>
<<set $totalCarry = $carryWeight>>

<<if $intro>>
<<include "Surface 1">>
<<else>>
<<set $dubloons = 300>>
<<include "Surface Hub">>
<</if>>

:: API Key Guide [start]

In order to use the automatically generated portraits feature for this game, you must first put your own API key into the appearance page. This key will then be saved until you clear it, so you don't need to do this repeatedly in a playthrough.

<b>You can also get a few generations per day by using the free version of ChatGPT and pasting the prompt from the image page into ChatGPT! You can then manually add that portrait to the game by placing it in the GeneratedPortraits folder as the override image. This allows you to use the portrait generation feature for free, but only a few times per day.</b>

Keep in mind that each portrait generation will cost some money, depending on the current pricing of the DALL-E 3 model from OpenAI. As of publication, this should be about $0.04 per portrait. So it is quite cheap, but not free (which is why you need to provide your own API key!)

<b>Do NOT subscribe to ChatGPT Plus for this feature! Credits on your OpenAI account are totally separate from a ChatGPT Plus subscription!</b>

So, to get your API key, you will need to follow a few steps.

1. First, you must make an OpenAI account. This can be the same account you've used with ChatGPT if you have one. If you don't have one, you can create one at https://www.openai.com

2. Once you have an OpenAI account, you should head to https://platform.openai.com/signup and sign into your account. This should end with you on the Developer platform page.

3. Next, on the left tab, you should click the settings icon at the bottom of the list and then click the Billing subsection. Once you are there, you should add your payment information and purchase a few dollars of prepaid credit for your account. Each dollar will get you 25 portraits, so keep that in mind when you decide how much to put on your account. You must purchase at least $5 worth of credit to get access to DALL-E! But you can always add more later, so no need to put too much!

4. Finally, you can click on the API Keys icon on the left menu bar, which should look like a locked padlock. You can then click on the Create New Secret Key button to generate your API key. Once that's done, you can copy your API key and paste it in the appearance page.

Be sure not to share your API key with anyone, or they can use your credits for their own generations! But you can easily delete an API key from that same page, which will cut anyone off from using it, then you can make a new one for yourself!

<i>It may take up to 24 hours after you pruchase credits before OpenAI allows you to generate images. If you are unable to get it to work, try waiting a little while, then ask on the Discord server if the issue does not resolve itself.</i>

If you have any questions, feel free to ask on our Discord server. And you're very welcome to share any especially good portraits you get!

<<nobr>>
<div class="relicToggleEntry">
    <div>The Abyss can change you. Do you want to use an OpenAI API key to generate your portrait as you change?</div>
    <div><<printHTML `toggle(v => settings.AIPortraitsMode = v, settings.AIPortraitsMode)`>></div>
</div>
<</nobr>>

<button class="dark-btn obsidian" data-passage="previous()">Back</button>


:: Portrait Selector [start noreturn]
<div id="portrait-selector-container" class="portrait-selector-container">
    <img id="portrait" class="portrait-selector-image" src="" alt="Player Portrait">
    <div class="portrait-selector-buttons">
        <button class="portrait-selector-btn" id="prev-portrait">←</button>
        <button class="portrait-selector-btn" id="next-portrait">→</button>
    </div>
</div>\
<<script>>
(function () {
    var isMale = State.variables.mc.osex === "male";
    var portraitPrefix = isMale ? "playerM" : "playerF";
    var portraits = Array.from({length: 7}, function(_, i) { 
        return "images/Player Icons/" + portraitPrefix + i + ".png"; 
    });
    
    // Initialize currentPortrait with the existing value or default to 0
    var currentPortrait = State.variables.portraitNumber || 0;

    function updatePortrait() {
        var portraitPath = portraits[currentPortrait];
        
        var imgElements = document.querySelectorAll("#portrait");
        imgElements.forEach(function(imgElement) {
            imgElement.src = portraitPath;
            imgElement.alt = "Player Portrait " + (currentPortrait + 1) + " of " + portraits.length;
            imgElement.onerror = function() {
                console.error("Failed to load image: " + this.src);
            };
        });
        
        // Update SugarCube variables
        State.variables.mc.imageIcon = portraitPath.replace("images/", "");
        State.variables.portraitNumber = currentPortrait;

        console.log("Current portrait path: " + State.variables.mc.imageIcon);
        console.log("Current portrait number: " + State.variables.portraitNumber);
    }

    function changePortrait(direction) {
        currentPortrait = (currentPortrait + direction + portraits.length) % portraits.length;
        updatePortrait();
    }

    $(document).on('click', '#prev-portrait', function() { changePortrait(-1); });
    $(document).on('click', '#next-portrait', function() { changePortrait(1); });

    // Ensure the initial portrait is displayed immediately
    $(document).ready(function() {
        updatePortrait();
    });
})();
<</script>>